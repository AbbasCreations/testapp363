{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\ColdFusion2018\\\\cfusion\\\\wwwroot\\\\celerant360\\\\client\\\\src\\\\components\\\\Test.js\";\nimport React, { Suspense } from \"react\";\nimport axios from \"axios\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport * as API from \"../API\";\nlet texono = [];\nexport let taxonomy = [];\nexport let allProducts = [];\nconst resource = fetchProfileData();\n\nfunction Test() {\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(ProfileDetails, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(ProfileTimeline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Test;\n\nfunction ProfileDetails() {\n  // Try to read user info, although it might not have loaded yet\n  const user = resource.user.read();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: user.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = ProfileDetails;\n\nfunction ProfileTimeline() {\n  // Try to read posts, although they might not have loaded yet\n  const posts = resource.posts.read();\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: post.text\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ProfileTimeline;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Test\");\n$RefreshReg$(_c2, \"ProfileDetails\");\n$RefreshReg$(_c3, \"ProfileTimeline\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/components/Test.js"],"names":["React","Suspense","axios","reactLocalStorage","API","texono","taxonomy","allProducts","resource","fetchProfileData","Test","ProfileDetails","user","read","name","ProfileTimeline","posts","map","post","text","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AAEA,IAAIC,MAAM,GAAG,EAAb;AACA,OAAO,IAAIC,QAAQ,GAAG,EAAf;AACP,OAAO,IAAIC,WAAW,GAAG,EAAlB;AAEP,MAAMC,QAAQ,GAAGC,gBAAgB,EAAjC;;AAEA,SAASC,IAAT,GAAgB;AACd,sBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApB;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB;AAAA,6BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQA,I;;AAWT,SAASC,cAAT,GAA0B;AACxB;AACA,QAAMC,IAAI,GAAGJ,QAAQ,CAACI,IAAT,CAAcC,IAAd,EAAb;AACA,sBAAO;AAAA,cAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MAJQH,c;;AAMT,SAASI,eAAT,GAA2B;AACzB;AACA,QAAMC,KAAK,GAAGR,QAAQ,CAACQ,KAAT,CAAeH,IAAf,EAAd;AACA,sBACE;AAAA,cACGG,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT;AAAA,gBAAmBA,IAAI,CAACC;AAAxB,OAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MAVQL,e","sourcesContent":["import React, { Suspense } from \"react\";\r\nimport axios from \"axios\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport * as API from \"../API\";\r\n\r\nlet texono = [];\r\nexport let taxonomy = [];\r\nexport let allProducts = [];\r\n\r\nconst resource = fetchProfileData();\r\n\r\nfunction Test() {\r\n  return (\r\n    <Suspense fallback={<h1>Loading profile...</h1>}>\r\n      <ProfileDetails />\r\n      <Suspense fallback={<h1>Loading posts...</h1>}>\r\n        <ProfileTimeline />\r\n      </Suspense>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nfunction ProfileDetails() {\r\n  // Try to read user info, although it might not have loaded yet\r\n  const user = resource.user.read();\r\n  return <h1>{user.name}</h1>;\r\n}\r\n\r\nfunction ProfileTimeline() {\r\n  // Try to read posts, although they might not have loaded yet\r\n  const posts = resource.posts.read();\r\n  return (\r\n    <ul>\r\n      {posts.map((post) => (\r\n        <li key={post.id}>{post.text}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}