{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null,\n  sFilters: {},\n  products: [],\n  sortby: 'default'\n}; // Selector\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...action.item]\n      };\n\n    case \"ADD_FILTERS\":\n      return { ...state,\n        sFilters: action.filterItems\n      };\n\n    case \"ADD_PRODUCTS\":\n      return { ...state,\n        products: action.productsItems\n      };\n\n    case \"SORT_BY\":\n      return { ...state,\n        sortby: action.sortText\n      };\n\n    case 'EMPTY_BASKET':\n      return { ...state,\n        basket: []\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not in basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/src/reducer.js"],"names":["initialState","basket","user","sFilters","products","sortby","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","filterItems","productsItems","sortText","index","findIndex","basketItem","id","newBasket","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC3BC,EAAAA,MAAM,EAAE,EADmB;AAE3BC,EAAAA,IAAI,EAAE,IAFqB;AAG1BC,EAAAA,QAAQ,EAAE,EAHgB;AAI1BC,EAAAA,QAAQ,EAAE,EAJgB;AAK1BC,EAAAA,MAAM,EAAC;AALmB,CAArB,C,CAQP;;AACA,OAAO,MAAMC,cAAc,GAAIL,MAAD,IAC7BA,MAD6B,aAC7BA,MAD6B,uBAC7BA,MAAM,CAAEM,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADM;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AAED,aAAO,EACN,GAAGF,KADG;AAELX,QAAAA,MAAM,EAAE,CAAC,GAAGY,MAAM,CAACJ,IAAX;AAFH,OAAP;;AAKA,SAAK,aAAL;AAEA,aAAO,EACN,GAAGG,KADG;AAELT,QAAAA,QAAQ,EAAEU,MAAM,CAACE;AAFZ,OAAP;;AAKA,SAAK,cAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELR,QAAAA,QAAQ,EAAES,MAAM,CAACG;AAFZ,OAAP;;AAKF,SAAK,SAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,MAAM,EAAEQ,MAAM,CAACI;AAFV,OAAP;;AAMH,SAAK,cAAL;AACC,aAAO,EACN,GAAGL,KADG;AAENX,QAAAA,MAAM,EAAE;AAFF,OAAP;;AAKD,SAAK,oBAAL;AACC,YAAMiB,KAAK,GAAGN,KAAK,CAACX,MAAN,CAAakB,SAAb,CACZC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBR,MAAM,CAACQ,EAD5B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGV,KAAK,CAACX,MAAV,CAAhB;;AAEA,UAAIiB,KAAK,IAAI,CAAb,EAAgB;AACfI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AAEA,OAHD,MAGO;AACNM,QAAAA,OAAO,CAACC,IAAR,CACE,4BAA2BZ,MAAM,CAACQ,EAAG,yBADvC;AAGA;;AAED,aAAO,EACN,GAAGT,KADG;AAENX,QAAAA,MAAM,EAAEqB;AAFF,OAAP;;AAKD,SAAK,UAAL;AACC,aAAO,EACN,GAAGV,KADG;AAENV,QAAAA,IAAI,EAAEW,MAAM,CAACX;AAFP,OAAP;;AAKD;AACC,aAAOU,KAAP;AA7DD;AA+DD,CAjED;;AAmEA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n basket: [],\r\n user: null,\r\n  sFilters: {},\r\n  products: [],\r\n  sortby:'default'\r\n};\r\n\r\n// Selector\r\nexport const getBasketTotal = (basket) =>\r\n basket?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nconst reducer = (state, action) => {\r\n  \r\n  switch (action.type) {\r\n    case \"ADD_TO_BASKET\":\r\n    \r\n   return {\r\n    ...state,\r\n     basket: [...action.item],\r\n   };\r\n  \r\n   case \"ADD_FILTERS\":\r\n     \r\n   return {\r\n    ...state,\r\n     sFilters: action.filterItems,\r\n   };\r\n\r\n   case \"ADD_PRODUCTS\":\r\n     return {\r\n       ...state,\r\n       products: action.productsItems,\r\n     };\r\n   \r\n   case \"SORT_BY\":\r\n     return {\r\n       ...state,\r\n       sortby: action.sortText,\r\n     };\r\n\r\n   \r\n  case 'EMPTY_BASKET':\r\n   return {\r\n    ...state,\r\n    basket: []\r\n   }\r\n\r\n  case \"REMOVE_FROM_BASKET\":\r\n   const index = state.basket.findIndex(\r\n    (basketItem) => basketItem.id === action.id\r\n   );\r\n   let newBasket = [...state.basket];\r\n\r\n   if (index >= 0) {\r\n    newBasket.splice(index, 1);\r\n\r\n   } else {\r\n    console.warn(\r\n     `Cant remove product (id: ${action.id}) as its not in basket!`\r\n    )\r\n   }\r\n\r\n   return {\r\n    ...state,\r\n    basket: newBasket\r\n   }\r\n\r\n  case \"SET_USER\":\r\n   return {\r\n    ...state,\r\n    user: action.user\r\n   }\r\n\r\n  default:\r\n   return state;\r\n }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}