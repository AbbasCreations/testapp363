{"ast":null,"code":"var _jsxFileName = \"C:\\\\ColdFusion2018\\\\cfusion\\\\wwwroot\\\\celerant360\\\\client\\\\src\\\\components\\\\Test.js\";\nimport React, { Suspense, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport * as API from \"../API\";\nimport { useStateValue } from \"../StateProvider\";\nimport * as cC from \"./category/categoryController\";\nimport { useParams } from \"react-router\";\nimport prodData from \"./prodData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet attempt = 0;\nlet texono = [];\nexport let taxonomy = [];\nexport let allProducts = [];\nconst prods = [\"page=4\", \"sortOrder=asc\", \"datePosted=all-time\", \"sortOrder=desc\", \"pakistan=desc\", \"kispak\", \"pat=desc\"];\nexport default function Test() {\n  let v0 = \"^\" + \"pak\";\n  const regex2 = new RegExp(v0);\n  console.log(\"vvvvvvvvvvvvvvvvvvv\");\n  const matches = array.filter(value => regex2.test(value));\n  console.log(\"mmmmmmmmmmmmmmmmmmm\");\n  console.log(matches);\n\n  const refineSearch = e => {\n    e.preventDefault();\n    let text = \"^\" + e.target.value;\n    const regex = new RegExp(text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    onChange: () => {\n      refineSearch();\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/components/Test.js"],"names":["React","Suspense","useState","useEffect","axios","reactLocalStorage","API","useStateValue","cC","useParams","prodData","attempt","texono","taxonomy","allProducts","prods","Test","v0","regex2","RegExp","console","log","matches","array","filter","value","test","refineSearch","e","preventDefault","text","target","regex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,+BAApB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,OAAO,IAAIC,QAAQ,GAAG,EAAf;AACP,OAAO,IAAIC,WAAW,GAAG,EAAlB;AAEP,MAAMC,KAAK,GAAG,CACZ,QADY,EAEZ,eAFY,EAGZ,qBAHY,EAIZ,gBAJY,EAKZ,eALY,EAMZ,QANY,EAOZ,UAPY,CAAd;AAUA,eAAe,SAASC,IAAT,GAAgB;AAC7B,MAAIC,EAAE,GAAG,MAAM,KAAf;AACA,QAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAWF,EAAX,CAAf;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,QAAMC,OAAO,GAAGC,KAAK,CAACC,MAAN,CAAcC,KAAD,IAAWP,MAAM,CAACQ,IAAP,CAAYD,KAAZ,CAAxB,CAAhB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAG,MAAMF,CAAC,CAACG,MAAF,CAASN,KAA1B;AACA,UAAMO,KAAK,GAAG,IAAIb,MAAJ,CAAWW,IAAX,CAAd;AACD,GAJD;;AAMA,sBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAE,MAAM;AACdH,MAAAA,YAAY;AACb;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;KAzBuBX,I","sourcesContent":["import React, { Suspense, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport * as API from \"../API\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport * as cC from \"./category/categoryController\";\r\nimport { useParams } from \"react-router\";\r\nimport prodData from \"./prodData.json\";\r\n\r\nlet attempt = 0;\r\nlet texono = [];\r\nexport let taxonomy = [];\r\nexport let allProducts = [];\r\n\r\nconst prods = [\r\n  \"page=4\",\r\n  \"sortOrder=asc\",\r\n  \"datePosted=all-time\",\r\n  \"sortOrder=desc\",\r\n  \"pakistan=desc\",\r\n  \"kispak\",\r\n  \"pat=desc\",\r\n];\r\n\r\nexport default function Test() {\r\n  let v0 = \"^\" + \"pak\";\r\n  const regex2 = new RegExp(v0);\r\n\r\n  console.log(\"vvvvvvvvvvvvvvvvvvv\");\r\n\r\n  const matches = array.filter((value) => regex2.test(value));\r\n  console.log(\"mmmmmmmmmmmmmmmmmmm\");\r\n\r\n  console.log(matches);\r\n\r\n  const refineSearch = (e) => {\r\n    e.preventDefault();\r\n    let text = \"^\" + e.target.value;\r\n    const regex = new RegExp(text);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      onChange={() => {\r\n        refineSearch();\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}