{"ast":null,"code":"import * as Data from '../../Data';\nexport const getHeaderMessage = () => {\n  let topMessage = Data.headerTopMessage;\n  return topMessage;\n};\nexport const getSiteLogo = () => {\n  let logo = Data.siteLogo;\n  return logo;\n};\nexport const redictect = (e, url, history) => {\n  e.preventDefault();\n  history.push(url);\n};\nexport const addFilters = (e, dispatchedData, dispatch, history) => {\n  e.preventDefault();\n  let parentValue = [];\n  let txonomy = dispatchedData.taxonomy;\n  let taxonomyValue = dispatchedData.taxonomyValue;\n  let taxonomyUrl = dispatchedData.taxonomyUrl;\n  let redirect_Url = dispatchedData.redirectUrl; // dispatch the item into the data layer\n\n  dispatch({\n    type: 'ADD_FILTERS',\n    filterItems: {\n      [txonomy]: taxonomyValue,\n      [redirect_Url]: taxonomyUrl\n    }\n  });\n  history.push(`/category/${taxonomyUrl}`);\n};\nexport const getTaxonomy = (argDept, argTyp, argsubTyp_1) => {\n  let level = 1;\n  let categories = [];\n  let i = 0;\n\n  if (argsubTyp_1 != null) {\n    level = 4;\n  } else if (argTyp != null) {\n    level = 3;\n  } else if (argDept != null) {\n    level = 2;\n  } else level = 1;\n\n  switch (level) {\n    case 1:\n      categories = [];\n      i = 0;\n      Data.taxonomy.map(cat => {\n        if (cat.typ == 'Empty') {\n          categories.push({\n            taxonomy: 'dept',\n            category: cat.dept,\n            url: cat.url\n          });\n        }\n      });\n      return categories;\n      break;\n\n    case 2:\n      categories = [];\n      i = 0;\n      Data.taxonomy.map(cat => {\n        if (cat.dept == argDept && cat.typ != 'Empty' && cat.subTyp_1 == 'Empty') {\n          categories.push({\n            taxonomy: 'typ',\n            category: cat.typ,\n            url: cat.url\n          });\n        }\n      });\n      return categories;\n      break;\n\n    case 3:\n      categories = [];\n      i = 0;\n      Data.taxonomy.map(cat => {\n        if (cat.dept == argDept && cat.typ == argTyp && cat.subTyp_1 != 'Empty' && cat.subTyp_2 == 'Empty') {\n          i++;\n          categories.push({\n            taxonomy: 'subTyp_1',\n            category: cat.subTyp_1,\n            url: cat.url\n          });\n        }\n      });\n      return categories;\n      break;\n\n    case 4:\n      categories = [];\n      i = 0;\n      Data.taxonomy.map(cat => {\n        if (cat.dept == argDept && cat.typ == argTyp && cat.subTyp_1 == argsubTyp_1 && cat.subTyp_2 != 'Empty') {\n          i++;\n          categories.push({\n            taxonomy: 'subTyp_2',\n            category: cat.subTyp_2,\n            url: cat.url\n          });\n        }\n      });\n      return categories;\n      break;\n  }\n};","map":{"version":3,"sources":["C:/coldfusion2018/cfusion/wwwroot/celerant360/src/components/header/headerController.js"],"names":["Data","getHeaderMessage","topMessage","headerTopMessage","getSiteLogo","logo","siteLogo","redictect","e","url","history","preventDefault","push","addFilters","dispatchedData","dispatch","parentValue","txonomy","taxonomy","taxonomyValue","taxonomyUrl","redirect_Url","redirectUrl","type","filterItems","getTaxonomy","argDept","argTyp","argsubTyp_1","level","categories","i","map","cat","typ","category","dept","subTyp_1","subTyp_2"],"mappings":"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","sourcesContent":["import * as Data from '../../Data'\r\n\r\nexport const getHeaderMessage = () => {\r\n  let topMessage = Data.headerTopMessage\r\n  return topMessage\r\n}\r\n\r\nexport const getSiteLogo = () => {\r\n  let logo = Data.siteLogo\r\n  return logo\r\n}\r\n\r\nexport const redictect = (e, url, history) => {\r\n  e.preventDefault()\r\n  history.push(url)\r\n}\r\n\r\nexport const addFilters = (e,dispatchedData, dispatch, history) => {\r\n  e.preventDefault()\r\n  let parentValue=[]\r\n  let txonomy = dispatchedData.taxonomy;\r\n  let taxonomyValue = dispatchedData.taxonomyValue;\r\n  let taxonomyUrl = dispatchedData.taxonomyUrl;\r\n  let redirect_Url = dispatchedData.redirectUrl;\r\n   \r\n  // dispatch the item into the data layer\r\n  dispatch({\r\n    type: 'ADD_FILTERS',\r\n    filterItems: {\r\n      \r\n      [txonomy]: taxonomyValue,\r\n      [redirect_Url]: taxonomyUrl,\r\n      \r\n      \r\n    },\r\n  })\r\n  history.push(`/category/${taxonomyUrl}`)\r\n}\r\n\r\nexport const getTaxonomy = (argDept, argTyp, argsubTyp_1) => {\r\n  let level = 1\r\n  let categories = []\r\n\r\n  let i = 0\r\n  if (argsubTyp_1 != null) {\r\n    level = 4\r\n  } else if (argTyp != null) {\r\n    level = 3\r\n  } else if (argDept != null) {\r\n    level = 2\r\n  } else level = 1\r\n\r\n  switch (level) {\r\n    case 1:\r\n       categories = []\r\n      i = 0\r\n      Data.taxonomy.map((cat) => {\r\n        if (cat.typ == 'Empty') {\r\n\r\n          categories.push({taxonomy:'dept',category:cat.dept,url:cat.url})\r\n        }\r\n      })\r\n      return categories\r\n      break\r\n    case 2:\r\n      categories = []\r\n      i = 0\r\n      Data.taxonomy.map((cat) => {\r\n        if (\r\n          cat.dept == argDept &&\r\n          cat.typ != 'Empty' &&\r\n          cat.subTyp_1 == 'Empty'\r\n        ) {\r\n           categories.push({ taxonomy: 'typ', category: cat.typ, url: cat.url })\r\n        }\r\n      })\r\n      return categories\r\n      break\r\n    case 3:\r\n      categories = []\r\n      i = 0\r\n      Data.taxonomy.map((cat) => {\r\n        if (\r\n          cat.dept == argDept &&\r\n          cat.typ == argTyp &&\r\n          cat.subTyp_1 != 'Empty' &&\r\n          cat.subTyp_2 == 'Empty'\r\n        ) {\r\n          i++\r\n          categories.push({ taxonomy: 'subTyp_1', category: cat.subTyp_1, url: cat.url })\r\n        }\r\n      })\r\n      return categories\r\n      break\r\n    case 4:\r\n      categories = []\r\n      i = 0\r\n      Data.taxonomy.map((cat) => {\r\n        if (\r\n          cat.dept == argDept &&\r\n          cat.typ == argTyp &&\r\n          cat.subTyp_1 == argsubTyp_1 &&\r\n          cat.subTyp_2 != 'Empty'\r\n        ) {\r\n          i++\r\n          categories.push({ taxonomy: 'subTyp_2', category: cat.subTyp_2, url: cat.url })\r\n        }\r\n      })\r\n      return categories\r\n      break\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}