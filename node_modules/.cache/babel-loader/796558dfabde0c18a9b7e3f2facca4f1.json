{"ast":null,"code":"import * as Data from \"../../Data\";\nexport const getHeaderMessage = () => {\n  let topMessage = Data.headerTopMessage;\n  return topMessage;\n};\nexport const getSiteLogo = () => {\n  let logo = Data.siteLogo;\n  return logo;\n};\nexport const redictect = (e, url, history) => {\n  e.preventDefault();\n  history.push(url);\n};\nexport const addFilters = (e, dispatchedData, dispatch, history) => {\n  e.preventDefault();\n  let parentValue = [];\n  let txonomy = dispatchedData.taxonomy;\n  let taxonomyValue = dispatchedData.taxonomyValue;\n  let taxonomyUrl = dispatchedData.taxonomyUrl;\n  let redirect_Url = dispatchedData.redirectUrl; // dispatch the item into the data layer\n\n  dispatch({\n    type: \"ADD_FILTERS\",\n    filterItems: {\n      [txonomy]: taxonomyValue,\n      [redirect_Url]: taxonomyUrl\n    }\n  });\n  history.push(`/category/${taxonomyUrl}`);\n};\nexport const getTaxonomy = (argDept, argTyp, argsubTyp_1) => {\n  let level = 1;\n  let categories = [];\n  let i = 0;\n\n  if (argsubTyp_1 != null) {\n    level = 4;\n  } else if (argTyp != null) {\n    level = 3;\n  } else if (argDept != null) {\n    level = 2;\n  } else level = 1;\n\n  console.log(\"yeeeeeeeee\");\n  Data.taxonomy.map(tax => {\n    console.log(tax);\n  });\n\n  switch (level) {\n    case 1:\n      categories = [];\n      i = 0;\n      Data.taxonomy.map(cat => {\n        if (cat.typ == \"Empty\") {\n          categories.push({\n            taxonomy: \"dept\",\n            category: cat.dept,\n            url: cat.url\n          });\n        }\n      });\n      return categories;\n      break;\n\n    case 2:\n      categories = [];\n      i = 0;\n      Data.taxonomy.map(cat => {\n        if (cat.dept == argDept && cat.typ != \"Empty\" && cat.subTyp_1 == \"Empty\") {\n          categories.push({\n            taxonomy: \"typ\",\n            category: cat.typ,\n            url: cat.url\n          });\n        }\n      });\n      return categories;\n      break;\n\n    case 3:\n      categories = [];\n      i = 0;\n      Data.taxonomy.map(cat => {\n        if (cat.dept == argDept && cat.typ == argTyp && cat.subTyp_1 != \"Empty\" && cat.subTyp_2 == \"Empty\") {\n          i++;\n          categories.push({\n            taxonomy: \"subTyp_1\",\n            category: cat.subTyp_1,\n            url: cat.url\n          });\n        }\n      });\n      return categories;\n      break;\n\n    case 4:\n      categories = [];\n      i = 0;\n      Data.taxonomy.map(cat => {\n        if (cat.dept == argDept && cat.typ == argTyp && cat.subTyp_1 == argsubTyp_1 && cat.subTyp_2 != \"Empty\") {\n          i++;\n          categories.push({\n            taxonomy: \"subTyp_2\",\n            category: cat.subTyp_2,\n            url: cat.url\n          });\n        }\n      });\n      return categories;\n      break;\n  }\n};","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/components/header/headerController.js"],"names":["Data","getHeaderMessage","topMessage","headerTopMessage","getSiteLogo","logo","siteLogo","redictect","e","url","history","preventDefault","push","addFilters","dispatchedData","dispatch","parentValue","txonomy","taxonomy","taxonomyValue","taxonomyUrl","redirect_Url","redirectUrl","type","filterItems","getTaxonomy","argDept","argTyp","argsubTyp_1","level","categories","i","console","log","map","tax","cat","typ","category","dept","subTyp_1","subTyp_2"],"mappings":"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","sourcesContent":["import * as Data from \"../../Data\";\r\n\r\nexport const getHeaderMessage = () => {\r\n  let topMessage = Data.headerTopMessage;\r\n  return topMessage;\r\n};\r\n\r\nexport const getSiteLogo = () => {\r\n  let logo = Data.siteLogo;\r\n  return logo;\r\n};\r\n\r\nexport const redictect = (e, url, history) => {\r\n  e.preventDefault();\r\n  history.push(url);\r\n};\r\n\r\nexport const addFilters = (e, dispatchedData, dispatch, history) => {\r\n  e.preventDefault();\r\n  let parentValue = [];\r\n  let txonomy = dispatchedData.taxonomy;\r\n  let taxonomyValue = dispatchedData.taxonomyValue;\r\n  let taxonomyUrl = dispatchedData.taxonomyUrl;\r\n  let redirect_Url = dispatchedData.redirectUrl;\r\n\r\n  // dispatch the item into the data layer\r\n  dispatch({\r\n    type: \"ADD_FILTERS\",\r\n    filterItems: {\r\n      [txonomy]: taxonomyValue,\r\n      [redirect_Url]: taxonomyUrl,\r\n    },\r\n  });\r\n  history.push(`/category/${taxonomyUrl}`);\r\n};\r\n\r\nexport const getTaxonomy = (argDept, argTyp, argsubTyp_1) => {\r\n  let level = 1;\r\n  let categories = [];\r\n\r\n  let i = 0;\r\n  if (argsubTyp_1 != null) {\r\n    level = 4;\r\n  } else if (argTyp != null) {\r\n    level = 3;\r\n  } else if (argDept != null) {\r\n    level = 2;\r\n  } else level = 1;\r\n  console.log(\"yeeeeeeeee\");\r\n  Data.taxonomy.map((tax) => {\r\n    console.log(tax);\r\n  });\r\n\r\n  switch (level) {\r\n    case 1:\r\n      categories = [];\r\n      i = 0;\r\n      Data.taxonomy.map((cat) => {\r\n        if (cat.typ == \"Empty\") {\r\n          categories.push({\r\n            taxonomy: \"dept\",\r\n            category: cat.dept,\r\n            url: cat.url,\r\n          });\r\n        }\r\n      });\r\n      return categories;\r\n      break;\r\n    case 2:\r\n      categories = [];\r\n      i = 0;\r\n      Data.taxonomy.map((cat) => {\r\n        if (\r\n          cat.dept == argDept &&\r\n          cat.typ != \"Empty\" &&\r\n          cat.subTyp_1 == \"Empty\"\r\n        ) {\r\n          categories.push({ taxonomy: \"typ\", category: cat.typ, url: cat.url });\r\n        }\r\n      });\r\n      return categories;\r\n      break;\r\n    case 3:\r\n      categories = [];\r\n      i = 0;\r\n      Data.taxonomy.map((cat) => {\r\n        if (\r\n          cat.dept == argDept &&\r\n          cat.typ == argTyp &&\r\n          cat.subTyp_1 != \"Empty\" &&\r\n          cat.subTyp_2 == \"Empty\"\r\n        ) {\r\n          i++;\r\n          categories.push({\r\n            taxonomy: \"subTyp_1\",\r\n            category: cat.subTyp_1,\r\n            url: cat.url,\r\n          });\r\n        }\r\n      });\r\n      return categories;\r\n      break;\r\n    case 4:\r\n      categories = [];\r\n      i = 0;\r\n      Data.taxonomy.map((cat) => {\r\n        if (\r\n          cat.dept == argDept &&\r\n          cat.typ == argTyp &&\r\n          cat.subTyp_1 == argsubTyp_1 &&\r\n          cat.subTyp_2 != \"Empty\"\r\n        ) {\r\n          i++;\r\n          categories.push({\r\n            taxonomy: \"subTyp_2\",\r\n            category: cat.subTyp_2,\r\n            url: cat.url,\r\n          });\r\n        }\r\n      });\r\n      return categories;\r\n      break;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}