{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { Suspense, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport * as API from \"../API\";\nimport { useStateValue } from \"../StateProvider\";\nimport * as cC from \"./category/categoryController\";\nimport { useParams } from \"react-router\";\nlet attempt = 0;\nlet texono = [];\nexport let taxonomy = [];\nexport let allProducts = [];\nexport default function Test() {\n  _s();\n\n  const [colordata, setColorData] = useState();\n\n  const getData = async () => {\n    let ID = 4285;\n    let data = {};\n    let v = \"\";\n    let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductSizes&ID=\" + ID + \"&webStyle=\" + v + \"&siz=\" + v + \"&attr1=\" + v + \"&attr2=\" + v;\n\n    try {\n      const response = await axios.get(url);\n\n      if (response.data.includes(\"table.cfdump_wddx\")) {\n        data = [];\n      } else {\n        data = response.data;\n\n        if (Object.entries(data).length > 0) {} else {\n          data = [];\n        }\n      }\n    } catch (error) {\n      data = [];\n    }\n\n    return data;\n  };\n\n  const getData1 = () => {\n    let data = {};\n    let ID = 4285;\n    let v = \"\";\n    let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductSizes&ID=\" + ID + \"&webStyle=\" + v + \"&siz=\" + v + \"&attr1=\" + v + \"&attr2=\" + v;\n\n    try {\n      const response = axios.get(url).then(response => {\n        if (response.data.includes(\"table.cfdump_wddx\")) {\n          data = [];\n        } else {\n          data = response.data;\n\n          if (Object.entries(data).length > 0) {} else {\n            data = [];\n          }\n        }\n      });\n    } catch (error) {\n      data = [];\n    }\n\n    return data;\n  };\n\n  console.log(\"General Get\");\n  getData().then(response => {\n    console.log(response);\n  });\n  console.log(\"Await Get\");\n  getData().then(response => {\n    console.log(response);\n  });\n  return \"\";\n}\n\n_s(Test, \"4TH0i+siFIkjagt6AsH8ENVH0MA=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/components/Test.js"],"names":["React","Suspense","useState","useEffect","axios","reactLocalStorage","API","useStateValue","cC","useParams","attempt","texono","taxonomy","allProducts","Test","colordata","setColorData","getData","ID","data","v","url","response","get","includes","Object","entries","length","error","getData1","then","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,+BAApB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,OAAO,IAAIC,QAAQ,GAAG,EAAf;AACP,OAAO,IAAIC,WAAW,GAAG,EAAlB;AAEP,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,EAA1C;;AAEA,QAAMe,OAAO,GAAG,YAAY;AAC1B,QAAIC,EAAE,GAAG,IAAT;AACA,QAAIC,IAAI,GAAG,EAAX;AAEA,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,GAAG,GACL,mFACAH,EADA,GAEA,YAFA,GAGAE,CAHA,GAIA,OAJA,GAKAA,CALA,GAMA,SANA,GAOAA,CAPA,GAQA,SARA,GASAA,CAVF;;AAWA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAUF,GAAV,CAAvB;;AACA,UAAIC,QAAQ,CAACH,IAAT,CAAcK,QAAd,CAAuB,mBAAvB,CAAJ,EAAiD;AAC/CL,QAAAA,IAAI,GAAG,EAAP;AACD,OAFD,MAEO;AACLA,QAAAA,IAAI,GAAGG,QAAQ,CAACH,IAAhB;;AACA,YAAIM,MAAM,CAACC,OAAP,CAAeP,IAAf,EAAqBQ,MAArB,GAA8B,CAAlC,EAAqC,CACpC,CADD,MACO;AACLR,UAAAA,IAAI,GAAG,EAAP;AACD;AACF;AACF,KAXD,CAWE,OAAOS,KAAP,EAAc;AACdT,MAAAA,IAAI,GAAG,EAAP;AACD;;AACD,WAAOA,IAAP;AACD,GA/BD;;AAiCA,QAAMU,QAAQ,GAAG,MAAM;AACrB,QAAIV,IAAI,GAAG,EAAX;AACA,QAAID,EAAE,GAAG,IAAT;AACA,QAAIE,CAAC,GAAG,EAAR;AACA,QAAIC,GAAG,GACL,mFACAH,EADA,GAEA,YAFA,GAGAE,CAHA,GAIA,OAJA,GAKAA,CALA,GAMA,SANA,GAOAA,CAPA,GAQA,SARA,GASAA,CAVF;;AAWA,QAAI;AACF,YAAME,QAAQ,GAAGlB,KAAK,CAACmB,GAAN,CAAUF,GAAV,EAAeS,IAAf,CAAqBR,QAAD,IAAc;AACjD,YAAIA,QAAQ,CAACH,IAAT,CAAcK,QAAd,CAAuB,mBAAvB,CAAJ,EAAiD;AAC/CL,UAAAA,IAAI,GAAG,EAAP;AACD,SAFD,MAEO;AACLA,UAAAA,IAAI,GAAGG,QAAQ,CAACH,IAAhB;;AACA,cAAIM,MAAM,CAACC,OAAP,CAAeP,IAAf,EAAqBQ,MAArB,GAA8B,CAAlC,EAAqC,CACpC,CADD,MACO;AACLR,YAAAA,IAAI,GAAG,EAAP;AACD;AACF;AACF,OAVgB,CAAjB;AAWD,KAZD,CAYE,OAAOS,KAAP,EAAc;AACdT,MAAAA,IAAI,GAAG,EAAP;AACD;;AACD,WAAOA,IAAP;AACD,GA/BD;;AAiCAY,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAf,EAAAA,OAAO,GAAGa,IAAV,CAAgBR,QAAD,IAAc;AAC3BS,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,GAFD;AAIAS,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAf,EAAAA,OAAO,GAAGa,IAAV,CAAgBR,QAAD,IAAc;AAC3BS,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,GAFD;AAIA,SAAO,EAAP;AACD;;GAhFuBR,I;;KAAAA,I","sourcesContent":["import React, { Suspense, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport * as API from \"../API\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport * as cC from \"./category/categoryController\";\r\nimport { useParams } from \"react-router\";\r\nlet attempt = 0;\r\nlet texono = [];\r\nexport let taxonomy = [];\r\nexport let allProducts = [];\r\n\r\nexport default function Test() {\r\n  const [colordata, setColorData] = useState();\r\n\r\n  const getData = async () => {\r\n    let ID = 4285;\r\n    let data = {};\r\n\r\n    let v = \"\";\r\n    let url =\r\n      \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductSizes&ID=\" +\r\n      ID +\r\n      \"&webStyle=\" +\r\n      v +\r\n      \"&siz=\" +\r\n      v +\r\n      \"&attr1=\" +\r\n      v +\r\n      \"&attr2=\" +\r\n      v;\r\n    try {\r\n      const response = await axios.get(url);\r\n      if (response.data.includes(\"table.cfdump_wddx\")) {\r\n        data = [];\r\n      } else {\r\n        data = response.data;\r\n        if (Object.entries(data).length > 0) {\r\n        } else {\r\n          data = [];\r\n        }\r\n      }\r\n    } catch (error) {\r\n      data = [];\r\n    }\r\n    return data;\r\n  };\r\n\r\n  const getData1 = () => {\r\n    let data = {};\r\n    let ID = 4285;\r\n    let v = \"\";\r\n    let url =\r\n      \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductSizes&ID=\" +\r\n      ID +\r\n      \"&webStyle=\" +\r\n      v +\r\n      \"&siz=\" +\r\n      v +\r\n      \"&attr1=\" +\r\n      v +\r\n      \"&attr2=\" +\r\n      v;\r\n    try {\r\n      const response = axios.get(url).then((response) => {\r\n        if (response.data.includes(\"table.cfdump_wddx\")) {\r\n          data = [];\r\n        } else {\r\n          data = response.data;\r\n          if (Object.entries(data).length > 0) {\r\n          } else {\r\n            data = [];\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      data = [];\r\n    }\r\n    return data;\r\n  };\r\n\r\n  console.log(\"General Get\");\r\n  getData().then((response) => {\r\n    console.log(response);\r\n  });\r\n\r\n  console.log(\"Await Get\");\r\n  getData().then((response) => {\r\n    console.log(response);\r\n  });\r\n\r\n  return \"\";\r\n}\r\n"]},"metadata":{},"sourceType":"module"}