{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport { useStateValue } from \"./StateProvider\";\nexport const GetTaxonomyfromAPI = async () => {\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\n      let data = response.data;\n      reactLocalStorage.setObject(\"allTaxonomy\", data);\n    }\n  } catch (error) {}\n};\n_c = GetTaxonomyfromAPI;\nexport const allProductsAPI = async () => {\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts\";\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\n      let data = response.data;\n      reactLocalStorage.setObject(\"allProductsData\", data);\n    }\n  } catch (error) {}\n};\nexport const ApiProducts = async () => {\n  _s();\n\n  const [{\n    sFilters\n  }, dispatch] = useStateValue();\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts\";\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\n      let data = response.data;\n      reactLocalStorage.setObject(\"allProductsData\", data);\n    }\n  } catch (error) {}\n\n  return \"\";\n};\n\n_s(ApiProducts, \"ryb0+HMs8Rtw2ajsNkn3rfsyuT0=\", false, function () {\n  return [useStateValue];\n});\n\n_c2 = ApiProducts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetTaxonomyfromAPI\");\n$RefreshReg$(_c2, \"ApiProducts\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/API.js"],"names":["React","axios","reactLocalStorage","useStateValue","GetTaxonomyfromAPI","url","response","get","data","includes","setObject","error","allProductsAPI","ApiProducts","sFilters","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;AAC5C,MAAIC,GAAG,GACL,wEADF;;AAGA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUF,GAAV,CAAvB;;AACA,QAAI,CAACC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAL,EAAkD;AAChD,UAAID,IAAI,GAAGF,QAAQ,CAACE,IAApB;AACAN,MAAAA,iBAAiB,CAACQ,SAAlB,CAA4B,aAA5B,EAA2CF,IAA3C;AACD;AACF,GAND,CAME,OAAOG,KAAP,EAAc,CAAE;AACnB,CAXM;KAAMP,kB;AAab,OAAO,MAAMQ,cAAc,GAAG,YAAY;AACxC,MAAIP,GAAG,GACL,2EADF;;AAGA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUF,GAAV,CAAvB;;AACA,QAAI,CAACC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAL,EAAkD;AAChD,UAAID,IAAI,GAAGF,QAAQ,CAACE,IAApB;AACAN,MAAAA,iBAAiB,CAACQ,SAAlB,CAA4B,iBAA5B,EAA+CF,IAA/C;AACD;AACF,GAND,CAME,OAAOG,KAAP,EAAc,CAAE;AACnB,CAXM;AAaP,OAAO,MAAME,WAAW,GAAG,YAAY;AAAA;;AACrC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAeC,QAAf,IAA2BZ,aAAa,EAA9C;AAEA,MAAIE,GAAG,GACL,2EADF;;AAGA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUF,GAAV,CAAvB;;AACA,QAAI,CAACC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAL,EAAkD;AAChD,UAAID,IAAI,GAAGF,QAAQ,CAACE,IAApB;AACAN,MAAAA,iBAAiB,CAACQ,SAAlB,CAA4B,iBAA5B,EAA+CF,IAA/C;AACD;AACF,GAND,CAME,OAAOG,KAAP,EAAc,CAAE;;AAClB,SAAO,EAAP;AACD,CAdM;;GAAME,W;UACsBV,a;;;MADtBU,W","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nexport const GetTaxonomyfromAPI = async () => {\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = response.data;\r\n      reactLocalStorage.setObject(\"allTaxonomy\", data);\r\n    }\r\n  } catch (error) {}\r\n};\r\n\r\nexport const allProductsAPI = async () => {\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts\";\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = response.data;\r\n      reactLocalStorage.setObject(\"allProductsData\", data);\r\n    }\r\n  } catch (error) {}\r\n};\r\n\r\nexport const ApiProducts = async () => {\r\n  const [{ sFilters }, dispatch] = useStateValue();\r\n\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts\";\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = response.data;\r\n      reactLocalStorage.setObject(\"allProductsData\", data);\r\n    }\r\n  } catch (error) {}\r\n  return \"\";\r\n};\r\n"]},"metadata":{},"sourceType":"module"}