{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useStateValue } from \"./StateProvider\";\nimport axios from \"axios\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport prodData from \"../src/components/prodData.json\";\nexport const GetTaxonomyfromAPI = async () => {\n  /*\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\r\n    try {\r\n    const response = await axios.get(url);\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = response.data;\r\n      reactLocalStorage.setObject(\"allTaxonomy\", data);\r\n    }\r\n  } catch (error) {}\r\n  */\n};\n_c = GetTaxonomyfromAPI;\nexport const getProducts = (property, url, taxonomy, category, ID, featured, setAllProducts, setLoading) => {\n  let prodData = {\n    products: [],\n    loadder: true\n  };\n  setLoading(true);\n  let apiURL = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=\" + property + \"&caturl=\" + url + \"&taxonomy=\" + taxonomy + \"&category=\" + category + \"&ID=\" + ID + \"&featured=\" + featured;\n  fetch(apiURL).then(response => response.json()).then(data => {\n    setAllProducts(data);\n    setLoading(false);\n  });\n};\nexport const ApiProducts = async (property, catUrl, taxonomy, category, setAllProducts, setLoading, featured, ID) => {\n  let data = [];\n  setLoading(true);\n  /*\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=\" +\r\n    property +\r\n    \"&caturl=\" +\r\n    catUrl +\r\n    \"&taxonomy=\" +\r\n    taxonomy +\r\n    \"&category=\" +\r\n    category +\r\n    \"&ID=\" +\r\n    ID +\r\n    \"&featured=\" +\r\n    featured;\r\n    try {\r\n    const response = await axios.get(url);\r\n      if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n    */\n\n  setAllProducts(data);\n  setLoading(false);\n  return \"\";\n};\n_c2 = ApiProducts;\nexport const getProductByID = async (ID, setAllProducts, setLoading) => {\n  let data = [];\n  /*\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductByID&ID=\" +\r\n    ID;\r\n    try {\r\n    const response = await axios.get(url);\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n  */\n\n  setLoading(true);\n  let currentProd = [];\n  currentProd = prodData.filter(product => product.id == ID);\n  currentProd.STYLE_ID = prodData[0].id;\n  currentProd.URL = prodData[0].product_url;\n  currentProd.SMALLIMAGE = prodData[0].image;\n  currentProd.LARGEIMAGE = prodData[0].image;\n  currentProd.NAME = prodData[0].name;\n  currentProd.BRAND = prodData[0].brand;\n  currentProd.REGULAR_PRICE = prodData[0].price;\n  currentProd.SALES_PRICE = 0;\n  currentProd.GENER = \"simple\";\n  console.log(\"pddddddddddddddd\");\n  console.log(currentProd);\n  setAllProducts(currentProd);\n  setLoading(false);\n  return \"\";\n};\nexport const getWeRecommend = async (dept, brand, number, setAdditionalProducts, setLoading) => {\n  let data = [];\n  /*\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getWeRecommend&dept=\" +\r\n    dept +\r\n    \"&brand=\" +\r\n    brand +\r\n    \"&noOfItems=\" +\r\n    number;\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n  */\n\n  setLoading(true);\n  let recommanded = [];\n  recommanded = prodData.filter(product => product.brand == brand);\n  recommanded.length = number;\n  setAdditionalProducts(recommanded);\n  setLoading(false);\n  return \"\";\n};\nexport const getProductSizes = async (ID, webStyle, siz, attr1, attr2, setProdSizes) => {\n  let data = [];\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductSizes&ID=\" + ID + \"&webStyle=\" + webStyle + \"&siz=\" + siz + \"&attr1=\" + attr1 + \"&attr2=\" + attr2;\n\n  try {\n    const response = await axios.get(url);\n\n    if (response.data.includes(\"table.cfdump_wddx\")) {\n      data = [];\n    } else {\n      data = response.data;\n\n      if (Object.entries(data).length > 0) {} else {\n        data = [];\n      }\n    }\n  } catch (error) {\n    data = [];\n  } // setProdSizes(data);\n\n\n  return data;\n};\nexport const getProductColors = async (ID, webStyle, siz, attr1, attr2, colorsRec, setProdColors) => {\n  let data = [];\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductColors&ID=\" + ID + \"&webStyle=\" + webStyle + \"&siz=\" + siz + \"&attr1=\" + attr1 + \"&attr2=\" + attr2;\n\n  try {\n    const response = await axios.get(url);\n    console.log(\"ssssssssssss\");\n    console.log(response.data);\n\n    if (response.data.includes(\"table.cfdump_wddx\")) {\n      data = [];\n    } else {\n      data = response.data;\n\n      if (Object.entries(data).length > 0) {} else {\n        data = [];\n      }\n    }\n\n    return data;\n  } catch (error) {\n    data = [];\n  }\n\n  return data;\n};\nexport const setRecentsProducts = async productID => {\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=setRecent&ID=\" + productID;\n\n  try {\n    const response = await axios.post(url);\n  } catch (error) {}\n\n  return \"\";\n};\nexport const GetAllTaxonomy = () => {\n  _s();\n\n  const [taxoItems, setTaxoItems] = useState([]);\n  useEffect(() => {\n    let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\n\n    try {\n      fetch(url).then(response => response.json()).then(data => {\n        setTaxoItems(data);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  return taxoItems;\n};\n\n_s(GetAllTaxonomy, \"SwNQWZY+h1rr4geHFrSC19sawYY=\");\n\n_c3 = GetAllTaxonomy;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetTaxonomyfromAPI\");\n$RefreshReg$(_c2, \"ApiProducts\");\n$RefreshReg$(_c3, \"GetAllTaxonomy\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/API.js"],"names":["React","useState","useEffect","useStateValue","axios","reactLocalStorage","prodData","GetTaxonomyfromAPI","getProducts","property","url","taxonomy","category","ID","featured","setAllProducts","setLoading","products","loadder","apiURL","fetch","then","response","json","data","ApiProducts","catUrl","getProductByID","currentProd","filter","product","id","STYLE_ID","URL","product_url","SMALLIMAGE","image","LARGEIMAGE","NAME","name","BRAND","brand","REGULAR_PRICE","price","SALES_PRICE","GENER","console","log","getWeRecommend","dept","number","setAdditionalProducts","recommanded","length","getProductSizes","webStyle","siz","attr1","attr2","setProdSizes","get","includes","Object","entries","error","getProductColors","colorsRec","setProdColors","setRecentsProducts","productID","post","GetAllTaxonomy","taxoItems","setTaxoItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport axios from \"axios\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport prodData from \"../src/components/prodData.json\";\r\n\r\nexport const GetTaxonomyfromAPI = async () => {\r\n  /*\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = response.data;\r\n      reactLocalStorage.setObject(\"allTaxonomy\", data);\r\n    }\r\n  } catch (error) {}\r\n  */\r\n};\r\n\r\nexport const getProducts = (\r\n  property,\r\n  url,\r\n  taxonomy,\r\n  category,\r\n  ID,\r\n  featured,\r\n  setAllProducts,\r\n  setLoading\r\n) => {\r\n  let prodData = {\r\n    products: [],\r\n    loadder: true,\r\n  };\r\n  setLoading(true);\r\n  let apiURL =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=\" +\r\n    property +\r\n    \"&caturl=\" +\r\n    url +\r\n    \"&taxonomy=\" +\r\n    taxonomy +\r\n    \"&category=\" +\r\n    category +\r\n    \"&ID=\" +\r\n    ID +\r\n    \"&featured=\" +\r\n    featured;\r\n\r\n  fetch(apiURL)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setAllProducts(data);\r\n      setLoading(false);\r\n    });\r\n};\r\n\r\nexport const ApiProducts = async (\r\n  property,\r\n  catUrl,\r\n  taxonomy,\r\n  category,\r\n  setAllProducts,\r\n  setLoading,\r\n  featured,\r\n  ID\r\n) => {\r\n  let data = [];\r\n  setLoading(true);\r\n  /*\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=\" +\r\n    property +\r\n    \"&caturl=\" +\r\n    catUrl +\r\n    \"&taxonomy=\" +\r\n    taxonomy +\r\n    \"&category=\" +\r\n    category +\r\n    \"&ID=\" +\r\n    ID +\r\n    \"&featured=\" +\r\n    featured;\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n\r\n  */\r\n  setAllProducts(data);\r\n  setLoading(false);\r\n  return \"\";\r\n};\r\n\r\nexport const getProductByID = async (ID, setAllProducts, setLoading) => {\r\n  let data = [];\r\n  /*\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductByID&ID=\" +\r\n    ID;\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n  */\r\n  setLoading(true);\r\n\r\n  let currentProd = [];\r\n  currentProd = prodData.filter((product) => product.id == ID);\r\n  currentProd.STYLE_ID = prodData[0].id;\r\n  currentProd.URL = prodData[0].product_url;\r\n  currentProd.SMALLIMAGE = prodData[0].image;\r\n  currentProd.LARGEIMAGE = prodData[0].image;\r\n  currentProd.NAME = prodData[0].name;\r\n  currentProd.BRAND = prodData[0].brand;\r\n  currentProd.REGULAR_PRICE = prodData[0].price;\r\n  currentProd.SALES_PRICE = 0;\r\n  currentProd.GENER = \"simple\";\r\n  console.log(\"pddddddddddddddd\");\r\n  console.log(currentProd);\r\n  setAllProducts(currentProd);\r\n  setLoading(false);\r\n  return \"\";\r\n};\r\n\r\nexport const getWeRecommend = async (\r\n  dept,\r\n  brand,\r\n  number,\r\n  setAdditionalProducts,\r\n  setLoading\r\n) => {\r\n  let data = [];\r\n\r\n  /*\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getWeRecommend&dept=\" +\r\n    dept +\r\n    \"&brand=\" +\r\n    brand +\r\n    \"&noOfItems=\" +\r\n    number;\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n  */\r\n  setLoading(true);\r\n\r\n  let recommanded = [];\r\n  recommanded = prodData.filter((product) => product.brand == brand);\r\n  recommanded.length = number;\r\n  setAdditionalProducts(recommanded);\r\n  setLoading(false);\r\n  return \"\";\r\n};\r\n\r\nexport const getProductSizes = async (\r\n  ID,\r\n  webStyle,\r\n  siz,\r\n  attr1,\r\n  attr2,\r\n  setProdSizes\r\n) => {\r\n  let data = [];\r\n\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductSizes&ID=\" +\r\n    ID +\r\n    \"&webStyle=\" +\r\n    webStyle +\r\n    \"&siz=\" +\r\n    siz +\r\n    \"&attr1=\" +\r\n    attr1 +\r\n    \"&attr2=\" +\r\n    attr2;\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n\r\n  // setProdSizes(data);\r\n  return data;\r\n};\r\n\r\nexport const getProductColors = async (\r\n  ID,\r\n  webStyle,\r\n  siz,\r\n  attr1,\r\n  attr2,\r\n  colorsRec,\r\n  setProdColors\r\n) => {\r\n  let data = [];\r\n\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductColors&ID=\" +\r\n    ID +\r\n    \"&webStyle=\" +\r\n    webStyle +\r\n    \"&siz=\" +\r\n    siz +\r\n    \"&attr1=\" +\r\n    attr1 +\r\n    \"&attr2=\" +\r\n    attr2;\r\n  try {\r\n    const response = await axios.get(url);\r\n    console.log(\"ssssssssssss\");\r\n    console.log(response.data);\r\n\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const setRecentsProducts = async (productID) => {\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=setRecent&ID=\" +\r\n    productID;\r\n\r\n  try {\r\n    const response = await axios.post(url);\r\n  } catch (error) {}\r\n  return \"\";\r\n};\r\n\r\nexport const GetAllTaxonomy = () => {\r\n  const [taxoItems, setTaxoItems] = useState([]);\r\n  useEffect(() => {\r\n    let url =\r\n      \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\r\n    try {\r\n      fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setTaxoItems(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n  return taxoItems;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}