{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\ColdFusion2018\\\\cfusion\\\\wwwroot\\\\celerant360\\\\client\\\\src\\\\components\\\\sideNav\\\\sideNavViews.js\",\n    _s = $RefreshSig$();\n\nimport { useStateValue } from \"../../StateProvider\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport { useHistory } from \"react-router-dom\";\nimport * as snC from \"../sideNav/sideNavController\";\nimport * as Data from \"../../Data\";\nimport { Link } from \"react-router-dom\";\nexport const SideBarViews = props => {\n  _s();\n\n  let currentFilters = {};\n  let currentproducts = [];\n  const [{\n    basket,\n    sFilters\n  }, dispatch] = useStateValue();\n  let storedFilters;\n  let filters = reactLocalStorage.getObject(\"storedFilters\");\n  currentFilters = props.filters;\n  currentproducts = props.products;\n\n  function addCategories(filters, keyterm, keyValue, CurrentCatUrl, history, e) {\n    e.preventDefault();\n    let tempFilters = {};\n    tempFilters = filters;\n    let key = keyterm;\n    let termUrl;\n    termUrl = keyterm + \"_Url\";\n\n    if (tempFilters[key] == null || tempFilters[key].length == 0) {\n      tempFilters[key] = [];\n    }\n\n    tempFilters[key].push(keyValue);\n    tempFilters[termUrl] = CurrentCatUrl;\n    filters = tempFilters; // reactLocalStorage.clear('storedFilters')\n    //delete filters.DEPT;\n    // dispatch the item into the data layer\n\n    dispatch({\n      type: \"ADD_FILTERS\",\n      filterItems: { ...filters\n      }\n    });\n    history.push(`/category/${CurrentCatUrl}`);\n  } //********************** SRART ADDTHISFILTERS*********************\n\n\n  function addThisFilter(filters, status, keyterm, keyValue) {\n    let tempFilters = {};\n\n    if (status == true) {\n      let index;\n\n      if (keyterm == \"BRAND\" || keyterm == \"COLOR\" || keyterm == \"SIZE\" || keyterm == \"PRICERANGE\") {\n        index = filters[keyterm].indexOf(keyValue);\n        filters[keyterm] = filters[keyterm].filter(el => el != keyValue);\n\n        if (filters[keyterm].length == 0) {\n          delete filters[keyterm]; //  reactLocalStorage.clear('storedFilters')\n          //delete filters.DEPT;\n          // dispatch the item into the data layer\n\n          dispatch({\n            type: \"ADD_FILTERS\",\n            filterItems: { ...filters\n            }\n          });\n        } else {\n          // reactLocalStorage.clear('storedFilters')\n          //delete filters.DEPT;\n          // dispatch the item into the data layer\n          dispatch({\n            type: \"ADD_FILTERS\",\n            filterItems: { ...filters\n            }\n          });\n        }\n      }\n    } else {\n      tempFilters = filters;\n      let key = keyterm;\n\n      if (tempFilters[key] == null || tempFilters[key].length == 0) {\n        tempFilters[key] = [];\n      }\n\n      if (keyterm == \"priceRange\") {\n        tempFilters[key] = [];\n        tempFilters[key].push(keyValue);\n      } else {\n        tempFilters[key].push(keyValue);\n      }\n\n      filters = tempFilters; //reactLocalStorage.clear('storedFilters')\n      //delete filters.DEPT;\n      // dispatch the item into the data layer\n\n      dispatch({\n        type: \"ADD_FILTERS\",\n        filterItems: { ...filters\n        }\n      });\n    }\n  } //********************** END ADDTHISFILTERS*********************\n\n\n  let history = useHistory();\n  let CategoriesData = {};\n  let taxonomy = \"\";\n  let categories = [];\n  CategoriesData = snC.shopByCategories(currentFilters, props.url);\n  taxonomy = CategoriesData.taxonomy;\n  categories = CategoriesData.categories;\n  let itmCount = -1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"SideNav\",\n      className: \"col-lg-2 col-md-4 col-12 filters pt-5-lg pt-3-md pt-1-sm pt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion accordion-flush pt-5-lg pt-3-md pt-1-sm pt-2\",\n        id: \"accordionFlush\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-item \",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"accordion-header\",\n            id: \"flush-heading\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"filterby\",\n              className: \"text-uppercase fw-bold outline-none bg-transparent border-0 w-100 fs-5 text-left pl-4\",\n              type: \"button\",\n              \"data-toggle\": \"collapse\",\n              \"data-target\": \"#flush-collapse\",\n              \"aria-expanded\": \"false\",\n              \"aria-controls\": \"flush-collapse\",\n              children: \"Filter By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"selected\",\n            className: \"py-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-0 pb-3\",\n              children: \"Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), snC.GetSelectedFilters(props)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"flush-collapse\",\n            className: \"accordion-collapse collapse show border-white border\",\n            \"aria-labelledby\": \"flush-heading\",\n            \"data-parent\": \"#accordionFlush\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-body border-white\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accordion accordion-flush\",\n                id: \"accordionFlushExample\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"CategoryFilter\",\n                  className: \"accordion-item border-bottom border-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"accordion-header\",\n                    id: \"flush-headingOne\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"accordion-button collapsed text-uppercase fw-bold border-0 px-0 outline-none bg-transparent\",\n                      type: \"button\",\n                      \"data-toggle\": \"collapse\",\n                      \"data-target\": \"#flush-collapseOne\",\n                      \"aria-expanded\": \"false\",\n                      \"aria-controls\": \"flush-collapseOne\",\n                      children: \"Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"flush-collapseOne\",\n                    className: \"accordion-collapse collapse show border-0\",\n                    \"aria-labelledby\": \"flush-headingOne\",\n                    \"data-parent\": \"#accordionFlushExample\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"accordion-body px-1\",\n                      children: categories ? categories.map(category => {\n                        let status = false;\n\n                        if (props.filters[props.filters.taxonomy] == category) {\n                          status = true;\n                        } else {\n                          status = false;\n                        }\n\n                        let CurrentCategoryUrl = getCategoryData(category, taxonomy, props.filters);\n                        return /*#__PURE__*/_jsxDEV(Link, {\n                          to: \"\",\n                          className: \"text-decoration-none active text-capitalize d-block mb-2\",\n                          onClick: e => {\n                            addCategories(props.filters, taxonomy, category, CurrentCategoryUrl, history, e);\n                          },\n                          children: category\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 205,\n                          columnNumber: 33\n                        }, this);\n                      }) : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"BrandFilter\",\n                  className: \"accordion-item border-bottom border-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"accordion-header\",\n                    id: \"flush-headingTwo\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"accordion-button collapsed text-uppercase px-0 border-0 fw-bold bg-transparent\",\n                      type: \"button\",\n                      \"data-toggle\": \"collapse\",\n                      \"data-target\": \"#flush-collapseTwo\",\n                      \"aria-expanded\": \"false\",\n                      \"aria-controls\": \"flush-collapseTwo\",\n                      children: \"Brand\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"flush-collapseTwo\",\n                    className: \"accordion-collapse collapse show border-0\",\n                    \"aria-labelledby\": \"flush-headingTwo\",\n                    \"data-parent\": \"#accordionFlushExample\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"accordion-body px-1\",\n                      children: snC.shopByBrand(props.products).brand.map(brandName => {\n                        let status = false;\n                        if (props.filters.BRAND == brandName) status = true;else status = false;\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-check\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            className: \"form-check-input active\",\n                            type: \"checkbox\",\n                            value: \"\",\n                            id: \"flexCheckDefault\",\n                            checked: status ? \"checked\" : \"\",\n                            onClick: () => {\n                              addThisFilter(props.filters, status, \"BRAND\", brandName);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 259,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: `form-check-label ${status ? \" active \" : \" \"} text-capitalize `,\n                            for: \"flexCheckDefault\",\n                            children: brandName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 274,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 258,\n                          columnNumber: 31\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"BrandFilter\",\n                  className: \"accordion-item border-bottom border-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"accordion-header\",\n                    id: \"flush-headingTwo\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"accordion-button collapsed text-uppercase px-0 border-0 fw-bold bg-transparent\",\n                      type: \"button\",\n                      \"data-toggle\": \"collapse\",\n                      \"data-target\": \"#flush-collapseTwo\",\n                      \"aria-expanded\": \"false\",\n                      \"aria-controls\": \"flush-collapseTwo\",\n                      children: \"Color\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"flush-collapseTwo\",\n                    className: \"accordion-collapse collapse show border-0\",\n                    \"aria-labelledby\": \"flush-headingTwo\",\n                    \"data-parent\": \"#accordionFlushExample\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"accordion-body px-1\",\n                      children: snC.shopByColor(props.products).map(colors => {\n                        let status = false;\n\n                        if (props.filters.color != null) {\n                          if (props.filters.color.includes(colors)) {\n                            status = true;\n                          }\n                        }\n\n                        let setColors = {\n                          color: colors\n                        };\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-check\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            className: \"form-check-input active\",\n                            type: \"checkbox\",\n                            value: \"\",\n                            id: \"flexCheckDefault\",\n                            checked: status ? \"checked\" : \"\",\n                            onClick: () => {\n                              addThisFilter(props.filters, status, \"color\", colors);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 322,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: `form-check-label ${status ? \" active \" : \" \"}  text-capitalize`,\n                            for: \"flexCheckDefault\",\n                            children: colors\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 337,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 321,\n                          columnNumber: 29\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"BrandFilter\",\n                  className: \"accordion-item border-bottom border-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"accordion-header\",\n                    id: \"flush-headingTwo\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"accordion-button collapsed text-uppercase px-0 border-0 fw-bold bg-transparent\",\n                      type: \"button\",\n                      \"data-toggle\": \"collapse\",\n                      \"data-target\": \"#flush-collapseTwo\",\n                      \"aria-expanded\": \"false\",\n                      \"aria-controls\": \"flush-collapseTwo\",\n                      children: \"Size\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"flush-collapseTwo\",\n                    className: \"accordion-collapse collapse show border-0\",\n                    \"aria-labelledby\": \"flush-headingTwo\",\n                    \"data-parent\": \"#accordionFlushExample\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"accordion-body px-1\",\n                      children: snC.shopBySize(props.products).map(sizes => {\n                        let status = false;\n\n                        if (props.filters.size != null) {\n                          if (props.filters.size.includes(sizes)) {\n                            status = true;\n                          }\n                        }\n\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-check\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            className: \"form-check-input active\",\n                            type: \"checkbox\",\n                            value: \"\",\n                            id: \"flexCheckDefault\",\n                            checked: status ? \"checked\" : \"\",\n                            onClick: () => {\n                              addThisFilter(props.filters, status, \"size\", sizes);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 384,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: `form-check-label ${status ? \" active \" : \" \"}  text-capitalize`,\n                            for: \"flexCheckDefault\",\n                            children: sizes\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 399,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 383,\n                          columnNumber: 29\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"PriceFilter\",\n                  className: \"accordion-item border-bottom border-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"accordion-header\",\n                    id: \"flush-headingThree\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"accordion-button collapsed text-uppercase border-0 px-0 fw-bold bg-transparent\",\n                      type: \"button\",\n                      \"data-toggle\": \"collapse\",\n                      \"data-target\": \"#flush-collapseThree\",\n                      \"aria-expanded\": \"false\",\n                      \"aria-controls\": \"flush-collapseThree\",\n                      children: \"Price Range\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"flush-collapseThree\",\n                    className: \"accordion-collapse collapse show border-0\",\n                    \"aria-labelledby\": \"flush-headingThree\",\n                    \"data-parent\": \"#accordionFlushExample\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"accordion-body px-1\",\n                      children: snC.shopByPrice().map(priceRange => {\n                        let status = false;\n\n                        if (props.filters.priceRange == null) {} else {\n                          if (priceRange == \"below $50\" && props.filters.priceRange.includes(\"below 50\")) {\n                            status = true;\n                          } else if (priceRange == \"$51-$100\" && props.filters.priceRange.includes(\"51-100\")) {\n                            status = true;\n                          } else if (priceRange == \"$101-$150\" && props.filters.priceRange.includes(\"101-150\")) {\n                            status = true;\n                          } else if (priceRange == \"$151-$200\" && props.filters.priceRange.includes(\"151-200\")) {\n                            status = true;\n                          } else if (priceRange == \"$201-$250\" && props.filters.priceRange.includes(\"201-250\")) {\n                            status = true;\n                          } else if (priceRange == \"above $250\" && props.filters.priceRange.includes(\"above 250\")) {\n                            status = true;\n                          } else {\n                            status = false;\n                          }\n                        }\n\n                        if (props.filters.priceRange == null) {} else {\n                          if (props.filters.priceRange.includes(priceRange)) {\n                            status = true;\n                          }\n                        }\n\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-check\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            className: \"form-check-input active\",\n                            type: \"checkbox\",\n                            value: \"\",\n                            id: \"flexCheckDefault\",\n                            checked: status ? \"checked\" : \"\",\n                            onClick: () => {\n                              addThisFilter(props.filters, status, \"priceRange\", priceRange);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 484,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: `form-check-label ${status ? \" active \" : \" \"}  text-capitalize `,\n                            for: \"flexCheckDefault\",\n                            children: priceRange\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 499,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 483,\n                          columnNumber: 29\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SideBarViews, \"tkgsHq8k3vtKJFq9p9I3dBRh0mM=\", false, function () {\n  return [useStateValue, useHistory];\n});\n\n_c = SideBarViews;\n\nconst getCategoryData = (category, taxonomy, filters) => {\n  let currentCategoryData = \"\";\n  let categoryUrl = \"\";\n  Data.taxonomy.map(categories => {\n    if (taxonomy == \"DEPT\") {\n      if (categories.DEPT.toUpperCase() == category.toUpperCase() && categories.DEPT != \"EMPTY\" && categories.TYP == \"EMPTY\") {\n        currentCategoryData = categories.URL;\n      }\n    } else if (taxonomy == \"TYP\") {\n      if (categories.TYP.toUpperCase() == category.toUpperCase() && categories.DEPT.toUpperCase() == filters.DEPT.toUpperCase() && categories.TYP != \"EMPTY\" && categories.SUBTYP_1 == \"EMPTY\") {\n        currentCategoryData = categories.URL;\n      }\n    } else if (taxonomy == \"SUBTYP_1\") {\n      if (categories.SUBTYP_1.toUpperCase() == category.toUpperCase() && categories.TYP.toUpperCase() == filters.TYP.toUpperCase() && categories.SUBTYP_1 != \"EMPTY\" && categories.SUBTYP_2 == \"EMPTY\") {\n        currentCategoryData = categories.URL;\n      }\n    } else if (taxonomy == \"SUBTYP_2\") {\n      if (categories.SUBTYP_2.toUpperCase() == category.toUpperCase() && categories.SUBTYP_1.toUpperCase() == filters.SUBTYP_1.toUpperCase() && categories.SUBTYP_2 != \"EMPTY\" && categories.SUBTYP_3 == \"EMPTY\") {\n        currentCategoryData = categories.URL;\n      }\n    } else if (taxonomy == \"SUBTYP_3\") {\n      if (categories.SUBTYP_3.toUpperCase() == category.toUpperCase() && categories.SUBTYP_2.toUpperCase() == filters.SUBTYP_2.toUpperCase() && categories.SUBTYP_3 != \"EMPTY\" && categories.SUBTYP_4 == \"EMPTY\") {\n        currentCategoryData = categories.URL;\n      }\n    }\n  });\n  return currentCategoryData;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBarViews\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/components/sideNav/sideNavViews.js"],"names":["useStateValue","reactLocalStorage","useHistory","snC","Data","Link","SideBarViews","props","currentFilters","currentproducts","basket","sFilters","dispatch","storedFilters","filters","getObject","products","addCategories","keyterm","keyValue","CurrentCatUrl","history","e","preventDefault","tempFilters","key","termUrl","length","push","type","filterItems","addThisFilter","status","index","indexOf","filter","el","CategoriesData","taxonomy","categories","shopByCategories","url","itmCount","GetSelectedFilters","map","category","CurrentCategoryUrl","getCategoryData","shopByBrand","brand","brandName","BRAND","shopByColor","colors","color","includes","setColors","shopBySize","sizes","size","shopByPrice","priceRange","currentCategoryData","categoryUrl","DEPT","toUpperCase","TYP","URL","SUBTYP_1","SUBTYP_2","SUBTYP_3","SUBTYP_4"],"mappings":"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","sourcesContent":["import { useStateValue } from \"../../StateProvider\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as snC from \"../sideNav/sideNavController\";\r\nimport * as Data from \"../../Data\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SideBarViews = (props) => {\r\n  let currentFilters = {};\r\n  let currentproducts = [];\r\n  const [{ basket, sFilters }, dispatch] = useStateValue();\r\n  let storedFilters;\r\n  let filters = reactLocalStorage.getObject(\"storedFilters\");\r\n\r\n  currentFilters = props.filters;\r\n  currentproducts = props.products;\r\n\r\n  function addCategories(\r\n    filters,\r\n    keyterm,\r\n    keyValue,\r\n    CurrentCatUrl,\r\n    history,\r\n    e\r\n  ) {\r\n    e.preventDefault();\r\n    let tempFilters = {};\r\n    tempFilters = filters;\r\n    let key = keyterm;\r\n    let termUrl;\r\n    termUrl = keyterm + \"_Url\";\r\n    if (tempFilters[key] == null || tempFilters[key].length == 0) {\r\n      tempFilters[key] = [];\r\n    }\r\n\r\n    tempFilters[key].push(keyValue);\r\n    tempFilters[termUrl] = CurrentCatUrl;\r\n\r\n    filters = tempFilters;\r\n\r\n    // reactLocalStorage.clear('storedFilters')\r\n    //delete filters.DEPT;\r\n    // dispatch the item into the data layer\r\n    dispatch({\r\n      type: \"ADD_FILTERS\",\r\n      filterItems: {\r\n        ...filters,\r\n      },\r\n    });\r\n    history.push(`/category/${CurrentCatUrl}`);\r\n  }\r\n\r\n  //********************** SRART ADDTHISFILTERS*********************\r\n  function addThisFilter(filters, status, keyterm, keyValue) {\r\n    let tempFilters = {};\r\n    if (status == true) {\r\n      let index;\r\n      if (\r\n        keyterm == \"BRAND\" ||\r\n        keyterm == \"COLOR\" ||\r\n        keyterm == \"SIZE\" ||\r\n        keyterm == \"PRICERANGE\"\r\n      ) {\r\n        index = filters[keyterm].indexOf(keyValue);\r\n        filters[keyterm] = filters[keyterm].filter((el) => el != keyValue);\r\n        if (filters[keyterm].length == 0) {\r\n          delete filters[keyterm];\r\n\r\n          //  reactLocalStorage.clear('storedFilters')\r\n          //delete filters.DEPT;\r\n          // dispatch the item into the data layer\r\n          dispatch({\r\n            type: \"ADD_FILTERS\",\r\n            filterItems: {\r\n              ...filters,\r\n            },\r\n          });\r\n        } else {\r\n          // reactLocalStorage.clear('storedFilters')\r\n          //delete filters.DEPT;\r\n          // dispatch the item into the data layer\r\n          dispatch({\r\n            type: \"ADD_FILTERS\",\r\n            filterItems: {\r\n              ...filters,\r\n            },\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      tempFilters = filters;\r\n\r\n      let key = keyterm;\r\n      if (tempFilters[key] == null || tempFilters[key].length == 0) {\r\n        tempFilters[key] = [];\r\n      }\r\n      if (keyterm == \"priceRange\") {\r\n        tempFilters[key] = [];\r\n        tempFilters[key].push(keyValue);\r\n      } else {\r\n        tempFilters[key].push(keyValue);\r\n      }\r\n      filters = tempFilters;\r\n\r\n      //reactLocalStorage.clear('storedFilters')\r\n      //delete filters.DEPT;\r\n      // dispatch the item into the data layer\r\n      dispatch({\r\n        type: \"ADD_FILTERS\",\r\n        filterItems: {\r\n          ...filters,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  //********************** END ADDTHISFILTERS*********************\r\n\r\n  let history = useHistory();\r\n  let CategoriesData = {};\r\n  let taxonomy = \"\";\r\n  let categories = [];\r\n  CategoriesData = snC.shopByCategories(currentFilters, props.url);\r\n  taxonomy = CategoriesData.taxonomy;\r\n  categories = CategoriesData.categories;\r\n  let itmCount = -1;\r\n  return (\r\n    <>\r\n      <section\r\n        id=\"SideNav\"\r\n        className=\"col-lg-2 col-md-4 col-12 filters pt-5-lg pt-3-md pt-1-sm pt-2\"\r\n      >\r\n        <div\r\n          className=\"accordion accordion-flush pt-5-lg pt-3-md pt-1-sm pt-2\"\r\n          id=\"accordionFlush\"\r\n        >\r\n          <div className=\"accordion-item \">\r\n            <h2 className=\"accordion-header\" id=\"flush-heading\">\r\n              <button\r\n                id=\"filterby\"\r\n                className=\"text-uppercase fw-bold outline-none bg-transparent border-0 w-100 fs-5 text-left pl-4\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#flush-collapse\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"flush-collapse\"\r\n              >\r\n                Filter By\r\n              </button>\r\n            </h2>\r\n            <div id=\"selected\" className=\"py-3\">\r\n              <p className=\"mb-0 pb-3\">Selected</p>\r\n              {snC.GetSelectedFilters(props)}\r\n            </div>\r\n            <div\r\n              id=\"flush-collapse\"\r\n              className=\"accordion-collapse collapse show border-white border\"\r\n              aria-labelledby=\"flush-heading\"\r\n              data-parent=\"#accordionFlush\"\r\n            >\r\n              <div className=\"accordion-body border-white\">\r\n                <div\r\n                  className=\"accordion accordion-flush\"\r\n                  id=\"accordionFlushExample\"\r\n                >\r\n                  <div\r\n                    id=\"CategoryFilter\"\r\n                    className=\"accordion-item border-bottom border-1\"\r\n                  >\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingOne\">\r\n                      <button\r\n                        className=\"accordion-button collapsed text-uppercase fw-bold border-0 px-0 outline-none bg-transparent\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#flush-collapseOne\"\r\n                        aria-expanded=\"false\"\r\n                        aria-controls=\"flush-collapseOne\"\r\n                      >\r\n                        Category\r\n                      </button>\r\n                    </h2>\r\n                    <div\r\n                      id=\"flush-collapseOne\"\r\n                      className=\"accordion-collapse collapse show border-0\"\r\n                      aria-labelledby=\"flush-headingOne\"\r\n                      data-parent=\"#accordionFlushExample\"\r\n                    >\r\n                      <div className=\"accordion-body px-1\">\r\n                        {categories\r\n                          ? categories.map((category) => {\r\n                              let status = false;\r\n                              if (\r\n                                props.filters[props.filters.taxonomy] ==\r\n                                category\r\n                              ) {\r\n                                status = true;\r\n                              } else {\r\n                                status = false;\r\n                              }\r\n                              let CurrentCategoryUrl = getCategoryData(\r\n                                category,\r\n                                taxonomy,\r\n                                props.filters\r\n                              );\r\n                              return (\r\n                                <Link\r\n                                  to=\"\"\r\n                                  className=\"text-decoration-none active text-capitalize d-block mb-2\"\r\n                                  onClick={(e) => {\r\n                                    addCategories(\r\n                                      props.filters,\r\n                                      taxonomy,\r\n                                      category,\r\n                                      CurrentCategoryUrl,\r\n                                      history,\r\n                                      e\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {category}\r\n                                </Link>\r\n                              );\r\n                            })\r\n                          : \"\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    id=\"BrandFilter\"\r\n                    className=\"accordion-item border-bottom border-1\"\r\n                  >\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n                      <button\r\n                        className=\"accordion-button collapsed text-uppercase px-0 border-0 fw-bold bg-transparent\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#flush-collapseTwo\"\r\n                        aria-expanded=\"false\"\r\n                        aria-controls=\"flush-collapseTwo\"\r\n                      >\r\n                        Brand\r\n                      </button>\r\n                    </h2>\r\n                    <div\r\n                      id=\"flush-collapseTwo\"\r\n                      className=\"accordion-collapse collapse show border-0\"\r\n                      aria-labelledby=\"flush-headingTwo\"\r\n                      data-parent=\"#accordionFlushExample\"\r\n                    >\r\n                      <div className=\"accordion-body px-1\">\r\n                        {snC\r\n                          .shopByBrand(props.products)\r\n                          .brand.map((brandName) => {\r\n                            let status = false;\r\n                            if (props.filters.BRAND == brandName) status = true;\r\n                            else status = false;\r\n\r\n                            return (\r\n                              <div className=\"form-check\">\r\n                                <input\r\n                                  className=\"form-check-input active\"\r\n                                  type=\"checkbox\"\r\n                                  value=\"\"\r\n                                  id=\"flexCheckDefault\"\r\n                                  checked={status ? \"checked\" : \"\"}\r\n                                  onClick={() => {\r\n                                    addThisFilter(\r\n                                      props.filters,\r\n                                      status,\r\n                                      \"BRAND\",\r\n                                      brandName\r\n                                    );\r\n                                  }}\r\n                                />\r\n                                <label\r\n                                  className={`form-check-label ${\r\n                                    status ? \" active \" : \" \"\r\n                                  } text-capitalize `}\r\n                                  for=\"flexCheckDefault\"\r\n                                >\r\n                                  {brandName}\r\n                                </label>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    id=\"BrandFilter\"\r\n                    className=\"accordion-item border-bottom border-1\"\r\n                  >\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n                      <button\r\n                        className=\"accordion-button collapsed text-uppercase px-0 border-0 fw-bold bg-transparent\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#flush-collapseTwo\"\r\n                        aria-expanded=\"false\"\r\n                        aria-controls=\"flush-collapseTwo\"\r\n                      >\r\n                        Color\r\n                      </button>\r\n                    </h2>\r\n                    <div\r\n                      id=\"flush-collapseTwo\"\r\n                      className=\"accordion-collapse collapse show border-0\"\r\n                      aria-labelledby=\"flush-headingTwo\"\r\n                      data-parent=\"#accordionFlushExample\"\r\n                    >\r\n                      <div className=\"accordion-body px-1\">\r\n                        {snC.shopByColor(props.products).map((colors) => {\r\n                          let status = false;\r\n                          if (props.filters.color != null) {\r\n                            if (props.filters.color.includes(colors)) {\r\n                              status = true;\r\n                            }\r\n                          }\r\n                          let setColors = { color: colors };\r\n                          return (\r\n                            <div className=\"form-check\">\r\n                              <input\r\n                                className=\"form-check-input active\"\r\n                                type=\"checkbox\"\r\n                                value=\"\"\r\n                                id=\"flexCheckDefault\"\r\n                                checked={status ? \"checked\" : \"\"}\r\n                                onClick={() => {\r\n                                  addThisFilter(\r\n                                    props.filters,\r\n                                    status,\r\n                                    \"color\",\r\n                                    colors\r\n                                  );\r\n                                }}\r\n                              />\r\n                              <label\r\n                                className={`form-check-label ${\r\n                                  status ? \" active \" : \" \"\r\n                                }  text-capitalize`}\r\n                                for=\"flexCheckDefault\"\r\n                              >\r\n                                {colors}\r\n                              </label>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    id=\"BrandFilter\"\r\n                    className=\"accordion-item border-bottom border-1\"\r\n                  >\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n                      <button\r\n                        className=\"accordion-button collapsed text-uppercase px-0 border-0 fw-bold bg-transparent\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#flush-collapseTwo\"\r\n                        aria-expanded=\"false\"\r\n                        aria-controls=\"flush-collapseTwo\"\r\n                      >\r\n                        Size\r\n                      </button>\r\n                    </h2>\r\n                    <div\r\n                      id=\"flush-collapseTwo\"\r\n                      className=\"accordion-collapse collapse show border-0\"\r\n                      aria-labelledby=\"flush-headingTwo\"\r\n                      data-parent=\"#accordionFlushExample\"\r\n                    >\r\n                      <div className=\"accordion-body px-1\">\r\n                        {snC.shopBySize(props.products).map((sizes) => {\r\n                          let status = false;\r\n                          if (props.filters.size != null) {\r\n                            if (props.filters.size.includes(sizes)) {\r\n                              status = true;\r\n                            }\r\n                          }\r\n                          return (\r\n                            <div className=\"form-check\">\r\n                              <input\r\n                                className=\"form-check-input active\"\r\n                                type=\"checkbox\"\r\n                                value=\"\"\r\n                                id=\"flexCheckDefault\"\r\n                                checked={status ? \"checked\" : \"\"}\r\n                                onClick={() => {\r\n                                  addThisFilter(\r\n                                    props.filters,\r\n                                    status,\r\n                                    \"size\",\r\n                                    sizes\r\n                                  );\r\n                                }}\r\n                              />\r\n                              <label\r\n                                className={`form-check-label ${\r\n                                  status ? \" active \" : \" \"\r\n                                }  text-capitalize`}\r\n                                for=\"flexCheckDefault\"\r\n                              >\r\n                                {sizes}\r\n                              </label>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    id=\"PriceFilter\"\r\n                    className=\"accordion-item border-bottom border-1\"\r\n                  >\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n                      <button\r\n                        className=\"accordion-button collapsed text-uppercase border-0 px-0 fw-bold bg-transparent\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#flush-collapseThree\"\r\n                        aria-expanded=\"false\"\r\n                        aria-controls=\"flush-collapseThree\"\r\n                      >\r\n                        Price Range\r\n                      </button>\r\n                    </h2>\r\n                    <div\r\n                      id=\"flush-collapseThree\"\r\n                      className=\"accordion-collapse collapse show border-0\"\r\n                      aria-labelledby=\"flush-headingThree\"\r\n                      data-parent=\"#accordionFlushExample\"\r\n                    >\r\n                      <div className=\"accordion-body px-1\">\r\n                        {snC.shopByPrice().map((priceRange) => {\r\n                          let status = false;\r\n\r\n                          if (props.filters.priceRange == null) {\r\n                          } else {\r\n                            if (\r\n                              priceRange == \"below $50\" &&\r\n                              props.filters.priceRange.includes(\"below 50\")\r\n                            ) {\r\n                              status = true;\r\n                            } else if (\r\n                              priceRange == \"$51-$100\" &&\r\n                              props.filters.priceRange.includes(\"51-100\")\r\n                            ) {\r\n                              status = true;\r\n                            } else if (\r\n                              priceRange == \"$101-$150\" &&\r\n                              props.filters.priceRange.includes(\"101-150\")\r\n                            ) {\r\n                              status = true;\r\n                            } else if (\r\n                              priceRange == \"$151-$200\" &&\r\n                              props.filters.priceRange.includes(\"151-200\")\r\n                            ) {\r\n                              status = true;\r\n                            } else if (\r\n                              priceRange == \"$201-$250\" &&\r\n                              props.filters.priceRange.includes(\"201-250\")\r\n                            ) {\r\n                              status = true;\r\n                            } else if (\r\n                              priceRange == \"above $250\" &&\r\n                              props.filters.priceRange.includes(\"above 250\")\r\n                            ) {\r\n                              status = true;\r\n                            } else {\r\n                              status = false;\r\n                            }\r\n                          }\r\n                          if (props.filters.priceRange == null) {\r\n                          } else {\r\n                            if (props.filters.priceRange.includes(priceRange)) {\r\n                              status = true;\r\n                            }\r\n                          }\r\n                          return (\r\n                            <div className=\"form-check\">\r\n                              <input\r\n                                className=\"form-check-input active\"\r\n                                type=\"checkbox\"\r\n                                value=\"\"\r\n                                id=\"flexCheckDefault\"\r\n                                checked={status ? \"checked\" : \"\"}\r\n                                onClick={() => {\r\n                                  addThisFilter(\r\n                                    props.filters,\r\n                                    status,\r\n                                    \"priceRange\",\r\n                                    priceRange\r\n                                  );\r\n                                }}\r\n                              />\r\n                              <label\r\n                                className={`form-check-label ${\r\n                                  status ? \" active \" : \" \"\r\n                                }  text-capitalize `}\r\n                                for=\"flexCheckDefault\"\r\n                              >\r\n                                {priceRange}\r\n                              </label>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst getCategoryData = (category, taxonomy, filters) => {\r\n  let currentCategoryData = \"\";\r\n  let categoryUrl = \"\";\r\n  Data.taxonomy.map((categories) => {\r\n    if (taxonomy == \"DEPT\") {\r\n      if (\r\n        categories.DEPT.toUpperCase() == category.toUpperCase() &&\r\n        categories.DEPT != \"EMPTY\" &&\r\n        categories.TYP == \"EMPTY\"\r\n      ) {\r\n        currentCategoryData = categories.URL;\r\n      }\r\n    } else if (taxonomy == \"TYP\") {\r\n      if (\r\n        categories.TYP.toUpperCase() == category.toUpperCase() &&\r\n        categories.DEPT.toUpperCase() == filters.DEPT.toUpperCase() &&\r\n        categories.TYP != \"EMPTY\" &&\r\n        categories.SUBTYP_1 == \"EMPTY\"\r\n      ) {\r\n        currentCategoryData = categories.URL;\r\n      }\r\n    } else if (taxonomy == \"SUBTYP_1\") {\r\n      if (\r\n        categories.SUBTYP_1.toUpperCase() == category.toUpperCase() &&\r\n        categories.TYP.toUpperCase() == filters.TYP.toUpperCase() &&\r\n        categories.SUBTYP_1 != \"EMPTY\" &&\r\n        categories.SUBTYP_2 == \"EMPTY\"\r\n      ) {\r\n        currentCategoryData = categories.URL;\r\n      }\r\n    } else if (taxonomy == \"SUBTYP_2\") {\r\n      if (\r\n        categories.SUBTYP_2.toUpperCase() == category.toUpperCase() &&\r\n        categories.SUBTYP_1.toUpperCase() == filters.SUBTYP_1.toUpperCase() &&\r\n        categories.SUBTYP_2 != \"EMPTY\" &&\r\n        categories.SUBTYP_3 == \"EMPTY\"\r\n      ) {\r\n        currentCategoryData = categories.URL;\r\n      }\r\n    } else if (taxonomy == \"SUBTYP_3\") {\r\n      if (\r\n        categories.SUBTYP_3.toUpperCase() == category.toUpperCase() &&\r\n        categories.SUBTYP_2.toUpperCase() == filters.SUBTYP_2.toUpperCase() &&\r\n        categories.SUBTYP_3 != \"EMPTY\" &&\r\n        categories.SUBTYP_4 == \"EMPTY\"\r\n      ) {\r\n        currentCategoryData = categories.URL;\r\n      }\r\n    }\r\n  });\r\n  return currentCategoryData;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}