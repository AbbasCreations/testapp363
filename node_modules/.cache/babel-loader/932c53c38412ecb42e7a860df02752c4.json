{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useStateValue } from \"./StateProvider\";\nimport * as API from \"./API\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nexport const siteLogo = \"images/logo.png\";\nexport const headerTopMessage = \"Content Goes Here If Any\";\nlet texono = [];\nexport let taxonomy = [];\nexport let allProducts = [];\ntaxonomy = reactLocalStorage.getObject(\"allTaxonomy\");\nallProducts = reactLocalStorage.getObject(\"allProductsData\");\n\nif (Object.entries(taxonomy).length > 0) {} else {\n  API.GetTaxonomyfromAPI();\n  taxonomy = reactLocalStorage.getObject(\"allTaxonomy\");\n}\n\nif (Object.entries(allProducts).length > 0) {} else {//  API.allProductsAPI();\n  // allProducts = reactLocalStorage.getObject(\"allProductsData\");\n}\n\nconst Abc = () => {\n  _s();\n\n  const [{\n    sFilters\n  }, dispatch] = useStateValue();\n  API.ApiProducts();\n};\n\n_s(Abc, \"ryb0+HMs8Rtw2ajsNkn3rfsyuT0=\", false, function () {\n  return [useStateValue];\n});\n\n_c = Abc;\nAbc();\nallProducts = reactLocalStorage.getObject(\"allProductsData\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Abc\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/Data.js"],"names":["React","useStateValue","API","reactLocalStorage","siteLogo","headerTopMessage","texono","taxonomy","allProducts","getObject","Object","entries","length","GetTaxonomyfromAPI","Abc","sFilters","dispatch","ApiProducts"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAO,MAAMC,QAAQ,GAAG,iBAAjB;AACP,OAAO,MAAMC,gBAAgB,GAAG,0BAAzB;AACP,IAAIC,MAAM,GAAG,EAAb;AAEA,OAAO,IAAIC,QAAQ,GAAG,EAAf;AACP,OAAO,IAAIC,WAAW,GAAG,EAAlB;AAEPD,QAAQ,GAAGJ,iBAAiB,CAACM,SAAlB,CAA4B,aAA5B,CAAX;AACAD,WAAW,GAAGL,iBAAiB,CAACM,SAAlB,CAA4B,iBAA5B,CAAd;;AAEA,IAAIC,MAAM,CAACC,OAAP,CAAeJ,QAAf,EAAyBK,MAAzB,GAAkC,CAAtC,EAAyC,CACxC,CADD,MACO;AACLV,EAAAA,GAAG,CAACW,kBAAJ;AACAN,EAAAA,QAAQ,GAAGJ,iBAAiB,CAACM,SAAlB,CAA4B,aAA5B,CAAX;AACD;;AAED,IAAIC,MAAM,CAACC,OAAP,CAAeH,WAAf,EAA4BI,MAA5B,GAAqC,CAAzC,EAA4C,CAC3C,CADD,MACO,CACL;AACA;AACD;;AAED,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAeC,QAAf,IAA2Bf,aAAa,EAA9C;AAEAC,EAAAA,GAAG,CAACe,WAAJ;AACD,CAJD;;GAAMH,G;UAC6Bb,a;;;KAD7Ba,G;AAKNA,GAAG;AAEHN,WAAW,GAAGL,iBAAiB,CAACM,SAAlB,CAA4B,iBAA5B,CAAd","sourcesContent":["import React from \"react\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport * as API from \"./API\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nexport const siteLogo = \"images/logo.png\";\r\nexport const headerTopMessage = \"Content Goes Here If Any\";\r\nlet texono = [];\r\n\r\nexport let taxonomy = [];\r\nexport let allProducts = [];\r\n\r\ntaxonomy = reactLocalStorage.getObject(\"allTaxonomy\");\r\nallProducts = reactLocalStorage.getObject(\"allProductsData\");\r\n\r\nif (Object.entries(taxonomy).length > 0) {\r\n} else {\r\n  API.GetTaxonomyfromAPI();\r\n  taxonomy = reactLocalStorage.getObject(\"allTaxonomy\");\r\n}\r\n\r\nif (Object.entries(allProducts).length > 0) {\r\n} else {\r\n  //  API.allProductsAPI();\r\n  // allProducts = reactLocalStorage.getObject(\"allProductsData\");\r\n}\r\n\r\nconst Abc = () => {\r\n  const [{ sFilters }, dispatch] = useStateValue();\r\n\r\n  API.ApiProducts();\r\n};\r\nAbc();\r\n\r\nallProducts = reactLocalStorage.getObject(\"allProductsData\");\r\n"]},"metadata":{},"sourceType":"module"}