{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as Data from \"../../Data\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport { useState, useEffect } from \"react\";\nexport const getHeaderMessage = () => {\n  let topMessage = Data.headerTopMessage;\n  return topMessage;\n};\nexport const getSiteLogo = () => {\n  let logo = Data.siteLogo;\n  return logo;\n};\nexport const redictect = (e, url, history) => {\n  e.preventDefault();\n  history.push(url);\n};\nexport const addFilters = (e, dispatchedData, dispatch, history) => {\n  e.preventDefault();\n  reactLocalStorage.setObject(\"storedFilters\", {});\n  let parentValue = [];\n  let txonomy = dispatchedData.dispatchedtaxo;\n  let taxonomyValue = dispatchedData.dispatchedtaxoValue;\n  let taxonomyUrl = dispatchedData.dispatchedtaxoUrl;\n  let redirect_Url = dispatchedData.redirectUrl;\n  dispatch({\n    type: \"LOADING_STATUS\",\n    laoder: true\n  }); // dispatch the item into the data layer\n\n  dispatch({\n    type: \"ADD_FILTERS\",\n    filterItems: {\n      [txonomy]: taxonomyValue,\n      [redirect_Url]: taxonomyUrl\n    }\n  }); // window.location.replace(`/category/${taxonomyUrl}`);\n};\nexport const GetTaxonomy = (argDEPT, argTyp, argsubTyp_1) => {\n  _s();\n\n  let taxo = [];\n  useEffect(() => {\n    let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\n\n    try {\n      fetch(url).then(response => response.json()).then(data => {\n        localStorage.setObject(nnnnnn);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [taxo]);\n  let level = 1;\n  let categories = [];\n  let i = 0;\n\n  if (argsubTyp_1 != null) {\n    level = 4;\n  } else if (argTyp != null) {\n    level = 3;\n  } else if (argDEPT != null) {\n    level = 2;\n  } else level = 1;\n\n  switch (level) {\n    case 1:\n      categories = [];\n      i = 0;\n\n      if (taxo.length > 0) {\n        taxo.map(cat => {\n          if (cat.TYP && cat.TYP.toUpperCase() == \"EMPTY\") {\n            categories.push({\n              taxonomy: \"DEPT\",\n              category: cat.DEPT,\n              url: cat.URL\n            });\n          }\n        });\n      }\n\n      return categories;\n      break;\n\n    case 2:\n      categories = [];\n      i = 0;\n      taxo.map(cat => {\n        if (cat.DEPT == argDEPT && cat.TYP && cat.TYP.toUpperCase() != \"EMPTY\" && cat.SUBTYP_1 && cat.SUBTYP_1.toUpperCase() == \"EMPTY\") {\n          categories.push({\n            taxonomy: \"TYP\",\n            category: cat.TYP,\n            url: cat.URL\n          });\n        }\n      });\n      return categories;\n      break;\n\n    case 3:\n      categories = [];\n      i = 0;\n      taxo.map(cat => {\n        if (cat.DEPT == argDEPT && cat.TYP == argTyp && cat.SUBTYP_1.toUpperCase() != \"EMPTY\" && cat.SUBTYP_2.toUpperCase() == \"EMPTY\") {\n          i++;\n          categories.push({\n            taxonomy: \"subTyp_1\",\n            category: cat.SUBTYP_1,\n            url: cat.URL\n          });\n        }\n      });\n      return categories;\n      break;\n\n    case 4:\n      categories = [];\n      i = 0;\n      taxo.map(cat => {\n        if (cat.DEPT == argDEPT && cat.TYP == argTyp && cat.SUBTYP_1 == argsubTyp_1 && cat.SUBTYP_2.toUpperCase() != \"EMPTY\") {\n          i++;\n          categories.push({\n            taxonomy: \"subTyp_2\",\n            category: cat.SUBTYP_2,\n            url: cat.URL\n          });\n        }\n      });\n      return categories;\n      break;\n  }\n};\n\n_s(GetTaxonomy, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GetTaxonomy;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetTaxonomy\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/components/header/headerController.js"],"names":["Data","reactLocalStorage","useState","useEffect","getHeaderMessage","topMessage","headerTopMessage","getSiteLogo","logo","siteLogo","redictect","e","url","history","preventDefault","push","addFilters","dispatchedData","dispatch","setObject","parentValue","txonomy","dispatchedtaxo","taxonomyValue","dispatchedtaxoValue","taxonomyUrl","dispatchedtaxoUrl","redirect_Url","redirectUrl","type","laoder","filterItems","GetTaxonomy","argDEPT","argTyp","argsubTyp_1","taxo","fetch","then","response","json","data","localStorage","nnnnnn","error","console","log","level","categories","i","length","map","cat","TYP","toUpperCase","taxonomy","category","DEPT","URL","SUBTYP_1","SUBTYP_2"],"mappings":"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","sourcesContent":["import * as Data from \"../../Data\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const getHeaderMessage = () => {\r\n  let topMessage = Data.headerTopMessage;\r\n  return topMessage;\r\n};\r\n\r\nexport const getSiteLogo = () => {\r\n  let logo = Data.siteLogo;\r\n  return logo;\r\n};\r\n\r\nexport const redictect = (e, url, history) => {\r\n  e.preventDefault();\r\n  history.push(url);\r\n};\r\n\r\nexport const addFilters = (e, dispatchedData, dispatch, history) => {\r\n  e.preventDefault();\r\n  reactLocalStorage.setObject(\"storedFilters\", {});\r\n\r\n  let parentValue = [];\r\n  let txonomy = dispatchedData.dispatchedtaxo;\r\n  let taxonomyValue = dispatchedData.dispatchedtaxoValue;\r\n  let taxonomyUrl = dispatchedData.dispatchedtaxoUrl;\r\n  let redirect_Url = dispatchedData.redirectUrl;\r\n  dispatch({\r\n    type: \"LOADING_STATUS\",\r\n    laoder: true,\r\n  });\r\n\r\n  // dispatch the item into the data layer\r\n  dispatch({\r\n    type: \"ADD_FILTERS\",\r\n    filterItems: {\r\n      [txonomy]: taxonomyValue,\r\n      [redirect_Url]: taxonomyUrl,\r\n    },\r\n  });\r\n  // window.location.replace(`/category/${taxonomyUrl}`);\r\n};\r\n\r\nexport const GetTaxonomy = (argDEPT, argTyp, argsubTyp_1) => {\r\n  let taxo = [];\r\n  useEffect(() => {\r\n    let url =\r\n      \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\r\n    try {\r\n      fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          localStorage.setObject(nnnnnn);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [taxo]);\r\n  let level = 1;\r\n  let categories = [];\r\n\r\n  let i = 0;\r\n  if (argsubTyp_1 != null) {\r\n    level = 4;\r\n  } else if (argTyp != null) {\r\n    level = 3;\r\n  } else if (argDEPT != null) {\r\n    level = 2;\r\n  } else level = 1;\r\n  switch (level) {\r\n    case 1:\r\n      categories = [];\r\n      i = 0;\r\n\r\n      if (taxo.length > 0) {\r\n        taxo.map((cat) => {\r\n          if (cat.TYP && cat.TYP.toUpperCase() == \"EMPTY\") {\r\n            categories.push({\r\n              taxonomy: \"DEPT\",\r\n              category: cat.DEPT,\r\n              url: cat.URL,\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      return categories;\r\n      break;\r\n    case 2:\r\n      categories = [];\r\n      i = 0;\r\n      taxo.map((cat) => {\r\n        if (\r\n          cat.DEPT == argDEPT &&\r\n          cat.TYP &&\r\n          cat.TYP.toUpperCase() != \"EMPTY\" &&\r\n          cat.SUBTYP_1 &&\r\n          cat.SUBTYP_1.toUpperCase() == \"EMPTY\"\r\n        ) {\r\n          categories.push({ taxonomy: \"TYP\", category: cat.TYP, url: cat.URL });\r\n        }\r\n      });\r\n      return categories;\r\n      break;\r\n    case 3:\r\n      categories = [];\r\n      i = 0;\r\n      taxo.map((cat) => {\r\n        if (\r\n          cat.DEPT == argDEPT &&\r\n          cat.TYP == argTyp &&\r\n          cat.SUBTYP_1.toUpperCase() != \"EMPTY\" &&\r\n          cat.SUBTYP_2.toUpperCase() == \"EMPTY\"\r\n        ) {\r\n          i++;\r\n          categories.push({\r\n            taxonomy: \"subTyp_1\",\r\n            category: cat.SUBTYP_1,\r\n            url: cat.URL,\r\n          });\r\n        }\r\n      });\r\n      return categories;\r\n      break;\r\n    case 4:\r\n      categories = [];\r\n      i = 0;\r\n      taxo.map((cat) => {\r\n        if (\r\n          cat.DEPT == argDEPT &&\r\n          cat.TYP == argTyp &&\r\n          cat.SUBTYP_1 == argsubTyp_1 &&\r\n          cat.SUBTYP_2.toUpperCase() != \"EMPTY\"\r\n        ) {\r\n          i++;\r\n          categories.push({\r\n            taxonomy: \"subTyp_2\",\r\n            category: cat.SUBTYP_2,\r\n            url: cat.URL,\r\n          });\r\n        }\r\n      });\r\n      return categories;\r\n      break;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}