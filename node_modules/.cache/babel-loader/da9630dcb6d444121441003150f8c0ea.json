{"ast":null,"code":"import _defineProperty from\"C:/ColdFusion2018/cfusion/wwwroot/celerant360/node_modules/@babel/runtime/helpers/esm/defineProperty\";import*as Data from'../../Data';export var getHeaderMessage=function getHeaderMessage(){var topMessage=Data.headerTopMessage;return topMessage;};export var getSiteLogo=function getSiteLogo(){var logo=Data.siteLogo;return logo;};export var redictect=function redictect(e,url,history){e.preventDefault();history.push(url);};export var addFilters=function addFilters(e,dispatchedData,dispatch,history){var _filterItems;e.preventDefault();var parentValue=[];var txonomy=dispatchedData.taxonomy;var taxonomyValue=dispatchedData.taxonomyValue;var taxonomyUrl=dispatchedData.taxonomyUrl;var redirect_Url=dispatchedData.redirectUrl;// dispatch the item into the data layer\ndispatch({type:'ADD_FILTERS',filterItems:(_filterItems={},_defineProperty(_filterItems,txonomy,taxonomyValue),_defineProperty(_filterItems,redirect_Url,taxonomyUrl),_filterItems)});history.push(\"/category/\".concat(taxonomyUrl));};export var getTaxonomy=function getTaxonomy(argDept,argTyp,argsubTyp_1){var level=1;var categories=[];var i=0;if(argsubTyp_1!=null){level=4;}else if(argTyp!=null){level=3;}else if(argDept!=null){level=2;}else level=1;switch(level){case 1:categories=[];i=0;Data.taxonomy.map(function(cat){if(cat.typ=='Empty'){categories.push({taxonomy:'dept',category:cat.dept,url:cat.url});}});return categories;break;case 2:categories=[];i=0;Data.taxonomy.map(function(cat){if(cat.dept==argDept&&cat.typ!='Empty'&&cat.subTyp_1=='Empty'){categories.push({taxonomy:'typ',category:cat.typ,url:cat.url});}});return categories;break;case 3:categories=[];i=0;Data.taxonomy.map(function(cat){if(cat.dept==argDept&&cat.typ==argTyp&&cat.subTyp_1!='Empty'&&cat.subTyp_2=='Empty'){i++;categories.push({taxonomy:'subTyp_1',category:cat.subTyp_1,url:cat.url});}});return categories;break;case 4:categories=[];i=0;Data.taxonomy.map(function(cat){if(cat.dept==argDept&&cat.typ==argTyp&&cat.subTyp_1==argsubTyp_1&&cat.subTyp_2!='Empty'){i++;categories.push({taxonomy:'subTyp_2',category:cat.subTyp_2,url:cat.url});}});return categories;break;}};","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/src/components/header/headerController.js"],"names":["Data","getHeaderMessage","topMessage","headerTopMessage","getSiteLogo","logo","siteLogo","redictect","e","url","history","preventDefault","push","addFilters","dispatchedData","dispatch","parentValue","txonomy","taxonomy","taxonomyValue","taxonomyUrl","redirect_Url","redirectUrl","type","filterItems","getTaxonomy","argDept","argTyp","argsubTyp_1","level","categories","i","map","cat","typ","category","dept","subTyp_1","subTyp_2"],"mappings":"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","sourcesContent":["import * as Data from '../../Data'\r\n\r\nexport const getHeaderMessage = () => {\r\n  let topMessage = Data.headerTopMessage\r\n  return topMessage\r\n}\r\n\r\nexport const getSiteLogo = () => {\r\n  let logo = Data.siteLogo\r\n  return logo\r\n}\r\n\r\nexport const redictect = (e, url, history) => {\r\n  e.preventDefault()\r\n  history.push(url)\r\n}\r\n\r\nexport const addFilters = (e,dispatchedData, dispatch, history) => {\r\n  e.preventDefault()\r\n  let parentValue=[]\r\n  let txonomy = dispatchedData.taxonomy;\r\n  let taxonomyValue = dispatchedData.taxonomyValue;\r\n  let taxonomyUrl = dispatchedData.taxonomyUrl;\r\n  let redirect_Url = dispatchedData.redirectUrl;\r\n   \r\n  // dispatch the item into the data layer\r\n  dispatch({\r\n    type: 'ADD_FILTERS',\r\n    filterItems: {\r\n      \r\n      [txonomy]: taxonomyValue,\r\n      [redirect_Url]: taxonomyUrl,\r\n      \r\n      \r\n    },\r\n  })\r\n  history.push(`/category/${taxonomyUrl}`)\r\n}\r\n\r\nexport const getTaxonomy = (argDept, argTyp, argsubTyp_1) => {\r\n  let level = 1\r\n  let categories = []\r\n\r\n  let i = 0\r\n  if (argsubTyp_1 != null) {\r\n    level = 4\r\n  } else if (argTyp != null) {\r\n    level = 3\r\n  } else if (argDept != null) {\r\n    level = 2\r\n  } else level = 1\r\n\r\n  switch (level) {\r\n    case 1:\r\n       categories = []\r\n      i = 0\r\n      Data.taxonomy.map((cat) => {\r\n        if (cat.typ == 'Empty') {\r\n\r\n          categories.push({taxonomy:'dept',category:cat.dept,url:cat.url})\r\n        }\r\n      })\r\n      return categories\r\n      break\r\n    case 2:\r\n      categories = []\r\n      i = 0\r\n      Data.taxonomy.map((cat) => {\r\n        if (\r\n          cat.dept == argDept &&\r\n          cat.typ != 'Empty' &&\r\n          cat.subTyp_1 == 'Empty'\r\n        ) {\r\n           categories.push({ taxonomy: 'typ', category: cat.typ, url: cat.url })\r\n        }\r\n      })\r\n      return categories\r\n      break\r\n    case 3:\r\n      categories = []\r\n      i = 0\r\n      Data.taxonomy.map((cat) => {\r\n        if (\r\n          cat.dept == argDept &&\r\n          cat.typ == argTyp &&\r\n          cat.subTyp_1 != 'Empty' &&\r\n          cat.subTyp_2 == 'Empty'\r\n        ) {\r\n          i++\r\n          categories.push({ taxonomy: 'subTyp_1', category: cat.subTyp_1, url: cat.url })\r\n        }\r\n      })\r\n      return categories\r\n      break\r\n    case 4:\r\n      categories = []\r\n      i = 0\r\n      Data.taxonomy.map((cat) => {\r\n        if (\r\n          cat.dept == argDept &&\r\n          cat.typ == argTyp &&\r\n          cat.subTyp_1 == argsubTyp_1 &&\r\n          cat.subTyp_2 != 'Empty'\r\n        ) {\r\n          i++\r\n          categories.push({ taxonomy: 'subTyp_2', category: cat.subTyp_2, url: cat.url })\r\n        }\r\n      })\r\n      return categories\r\n      break\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}