{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { usestate } from \"react\";\nimport { useStateValue } from \"./StateProvider\";\nimport * as API from \"./API\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nexport const siteLogo = \"images/logo.png\";\nexport const headerTopMessage = \"Content Goes Here If Any\";\nlet texono = [];\nexport let taxonomy = [];\nexport let allProducts = [];\ntaxonomy = reactLocalStorage.getObject(\"allTaxonomy\");\nallProducts = reactLocalStorage.getObject(\"allProductsData\");\nAPI.GetTaxonomyfromAPI();\n\nif (Object.entries(allProducts).length > 0) {} else {//  API.allProductsAPI();\n  // allProducts = reactLocalStorage.getObject(\"allProductsData\");\n}\n\nallProducts = reactLocalStorage.getObject(\"allProductsData\");\nexport const GetAllTaxonomy = () => {\n  _s();\n\n  const [taxomyItems, setTaxomyItems] = useState([]);\n  let history = useHistory();\n  useEffect(() => {\n    let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\n\n    try {\n      fetch(url).then(response => response.json()).then(data => {\n        setTaxomyItems(data);\n        console.log(\"taxoooooooooo\");\n        console.log(taxo);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  return taxomyItems;\n};\n\n_s(GetAllTaxonomy, \"XPQEqt1r7OsCBgNLLZURfFY8vYM=\", true);\n\n_c = GetAllTaxonomy;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllTaxonomy\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/Data.js"],"names":["React","usestate","useStateValue","API","reactLocalStorage","siteLogo","headerTopMessage","texono","taxonomy","allProducts","getObject","GetTaxonomyfromAPI","Object","entries","length","GetAllTaxonomy","taxomyItems","setTaxomyItems","useState","history","useHistory","useEffect","url","fetch","then","response","json","data","console","log","taxo","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAO,MAAMC,QAAQ,GAAG,iBAAjB;AACP,OAAO,MAAMC,gBAAgB,GAAG,0BAAzB;AACP,IAAIC,MAAM,GAAG,EAAb;AAEA,OAAO,IAAIC,QAAQ,GAAG,EAAf;AACP,OAAO,IAAIC,WAAW,GAAG,EAAlB;AAEPD,QAAQ,GAAGJ,iBAAiB,CAACM,SAAlB,CAA4B,aAA5B,CAAX;AACAD,WAAW,GAAGL,iBAAiB,CAACM,SAAlB,CAA4B,iBAA5B,CAAd;AAEAP,GAAG,CAACQ,kBAAJ;;AAEA,IAAIC,MAAM,CAACC,OAAP,CAAeJ,WAAf,EAA4BK,MAA5B,GAAqC,CAAzC,EAA4C,CAC3C,CADD,MACO,CACL;AACA;AACD;;AAEDL,WAAW,GAAGL,iBAAiB,CAACM,SAAlB,CAA4B,iBAA5B,CAAd;AAEA,OAAO,MAAMK,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,EAAD,CAA9C;AACA,MAAIC,OAAO,GAAGC,UAAU,EAAxB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIC,GAAG,GACL,wEADF;;AAEA,QAAI;AACFC,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdV,QAAAA,cAAc,CAACU,IAAD,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,OANH;AAOD,KARD,CAQE,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,GAdQ,EAcN,EAdM,CAAT;AAeA,SAAOf,WAAP;AACD,CAnBM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { usestate } from \"react\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport * as API from \"./API\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nexport const siteLogo = \"images/logo.png\";\r\nexport const headerTopMessage = \"Content Goes Here If Any\";\r\nlet texono = [];\r\n\r\nexport let taxonomy = [];\r\nexport let allProducts = [];\r\n\r\ntaxonomy = reactLocalStorage.getObject(\"allTaxonomy\");\r\nallProducts = reactLocalStorage.getObject(\"allProductsData\");\r\n\r\nAPI.GetTaxonomyfromAPI();\r\n\r\nif (Object.entries(allProducts).length > 0) {\r\n} else {\r\n  //  API.allProductsAPI();\r\n  // allProducts = reactLocalStorage.getObject(\"allProductsData\");\r\n}\r\n\r\nallProducts = reactLocalStorage.getObject(\"allProductsData\");\r\n\r\nexport const GetAllTaxonomy = () => {\r\n  const [taxomyItems, setTaxomyItems] = useState([]);\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    let url =\r\n      \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\r\n    try {\r\n      fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setTaxomyItems(data);\r\n          console.log(\"taxoooooooooo\");\r\n          console.log(taxo);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n  return taxomyItems;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}