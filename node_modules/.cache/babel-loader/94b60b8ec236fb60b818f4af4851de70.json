{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useStateValue } from \"./StateProvider\";\nimport axios from \"axios\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport prodData from \"../src/components/prodData.json\";\nexport const GetTaxonomyfromAPI = async () => {\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\n      let data = response.data;\n      reactLocalStorage.setObject(\"allTaxonomy\", data);\n    }\n  } catch (error) {}\n};\n_c = GetTaxonomyfromAPI;\nexport const getProducts = (property, url, taxonomy, category, ID, featured, setAllProducts, setLoading) => {\n  let prodData = {\n    products: [],\n    loadder: true\n  };\n  setLoading(true);\n  let apiURL = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=\" + property + \"&caturl=\" + url + \"&taxonomy=\" + taxonomy + \"&category=\" + category + \"&ID=\" + ID + \"&featured=\" + featured;\n  fetch(apiURL).then(response => response.json()).then(data => {\n    setAllProducts(data);\n    setLoading(false);\n  });\n};\nexport const ApiProducts = async (property, catUrl, taxonomy, category, setAllProducts, setLoading, featured, ID) => {\n  let data = [];\n  setLoading(true);\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=\" + property + \"&caturl=\" + catUrl + \"&taxonomy=\" + taxonomy + \"&category=\" + category + \"&ID=\" + ID + \"&featured=\" + featured;\n\n  try {\n    const response = await axios.get(url);\n\n    if (response.data.includes(\"table.cfdump_wddx\")) {\n      data = [];\n    } else {\n      data = response.data;\n\n      if (Object.entries(data).length > 0) {} else {\n        data = [];\n      }\n    }\n  } catch (error) {\n    data = [];\n  }\n\n  setAllProducts(data);\n  setLoading(false);\n  return \"\";\n};\n_c2 = ApiProducts;\nexport const getProductByID = async (ID, setAllProducts, setLoading) => {\n  let data = [];\n  /*\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductByID&ID=\" +\r\n    ID;\r\n    try {\r\n    const response = await axios.get(url);\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n  */\n\n  setLoading(true);\n  let currentProd = [];\n  prodData = prodData.filter(product => product.id == ID);\n  currentProd.STYLE_ID = prodData[0].id;\n  currentProd.URL = prodData[0].product_url;\n  currentProd.SMALLIMAGE = prodData[0].image;\n  currentProd.LARGEIMAGE = prodData[0].image;\n  currentProd.NAME = prodData[0].name;\n  currentProd.BRAND = prodData[0].brand;\n  currentProd.REGULAR_PRICE = prodData[0].price;\n  currentProd.SALES_PRICE = 0;\n  setAllProducts(currentProd);\n  setLoading(false);\n  return \"\";\n};\nexport const getWeRecommend = async (dept, brand, number, setAdditionalProducts, setLoading) => {\n  let data = [];\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getWeRecommend&dept=\" + dept + \"&brand=\" + brand + \"&noOfItems=\" + number;\n\n  try {\n    const response = await axios.get(url);\n\n    if (response.data.includes(\"table.cfdump_wddx\")) {\n      data = [];\n    } else {\n      data = response.data;\n\n      if (Object.entries(data).length > 0) {} else {\n        data = [];\n      }\n    }\n  } catch (error) {\n    data = [];\n  }\n\n  setAdditionalProducts(data);\n  setLoading(false);\n  return \"\";\n};\nexport const getProductSizes = async (ID, webStyle, siz, attr1, attr2, setProdSizes) => {\n  let data = [];\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductSizes&ID=\" + ID + \"&webStyle=\" + webStyle + \"&siz=\" + siz + \"&attr1=\" + attr1 + \"&attr2=\" + attr2;\n\n  try {\n    const response = await axios.get(url);\n\n    if (response.data.includes(\"table.cfdump_wddx\")) {\n      data = [];\n    } else {\n      data = response.data;\n\n      if (Object.entries(data).length > 0) {} else {\n        data = [];\n      }\n    }\n  } catch (error) {\n    data = [];\n  } // setProdSizes(data);\n\n\n  return data;\n};\nexport const getProductColors = async (ID, webStyle, siz, attr1, attr2, colorsRec, setProdColors) => {\n  let data = [];\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductColors&ID=\" + ID + \"&webStyle=\" + webStyle + \"&siz=\" + siz + \"&attr1=\" + attr1 + \"&attr2=\" + attr2;\n\n  try {\n    const response = await axios.get(url);\n    console.log(\"ssssssssssss\");\n    console.log(response.data);\n\n    if (response.data.includes(\"table.cfdump_wddx\")) {\n      data = [];\n    } else {\n      data = response.data;\n\n      if (Object.entries(data).length > 0) {} else {\n        data = [];\n      }\n    }\n\n    return data;\n  } catch (error) {\n    data = [];\n  }\n\n  return data;\n};\nexport const setRecentsProducts = async productID => {\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=setRecent&ID=\" + productID;\n\n  try {\n    const response = await axios.post(url);\n  } catch (error) {}\n\n  return \"\";\n};\nexport const GetAllTaxonomy = () => {\n  _s();\n\n  const [taxoItems, setTaxoItems] = useState([]);\n  useEffect(() => {\n    let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\n\n    try {\n      fetch(url).then(response => response.json()).then(data => {\n        setTaxoItems(data);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  return taxoItems;\n};\n\n_s(GetAllTaxonomy, \"SwNQWZY+h1rr4geHFrSC19sawYY=\");\n\n_c3 = GetAllTaxonomy;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetTaxonomyfromAPI\");\n$RefreshReg$(_c2, \"ApiProducts\");\n$RefreshReg$(_c3, \"GetAllTaxonomy\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/API.js"],"names":["React","useState","useEffect","useStateValue","axios","reactLocalStorage","prodData","GetTaxonomyfromAPI","url","response","get","data","includes","setObject","error","getProducts","property","taxonomy","category","ID","featured","setAllProducts","setLoading","products","loadder","apiURL","fetch","then","json","ApiProducts","catUrl","Object","entries","length","getProductByID","currentProd","filter","product","id","STYLE_ID","URL","product_url","SMALLIMAGE","image","LARGEIMAGE","NAME","name","BRAND","brand","REGULAR_PRICE","price","SALES_PRICE","getWeRecommend","dept","number","setAdditionalProducts","getProductSizes","webStyle","siz","attr1","attr2","setProdSizes","getProductColors","colorsRec","setProdColors","console","log","setRecentsProducts","productID","post","GetAllTaxonomy","taxoItems","setTaxoItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;AAC5C,MAAIC,GAAG,GACL,wEADF;;AAGA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUF,GAAV,CAAvB;;AACA,QAAI,CAACC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAL,EAAkD;AAChD,UAAID,IAAI,GAAGF,QAAQ,CAACE,IAApB;AACAN,MAAAA,iBAAiB,CAACQ,SAAlB,CAA4B,aAA5B,EAA2CF,IAA3C;AACD;AACF,GAND,CAME,OAAOG,KAAP,EAAc,CAAE;AACnB,CAXM;KAAMP,kB;AAab,OAAO,MAAMQ,WAAW,GAAG,CACzBC,QADyB,EAEzBR,GAFyB,EAGzBS,QAHyB,EAIzBC,QAJyB,EAKzBC,EALyB,EAMzBC,QANyB,EAOzBC,cAPyB,EAQzBC,UARyB,KAStB;AACH,MAAIhB,QAAQ,GAAG;AACbiB,IAAAA,QAAQ,EAAE,EADG;AAEbC,IAAAA,OAAO,EAAE;AAFI,GAAf;AAIAF,EAAAA,UAAU,CAAC,IAAD,CAAV;AACA,MAAIG,MAAM,GACR,wFACAT,QADA,GAEA,UAFA,GAGAR,GAHA,GAIA,YAJA,GAKAS,QALA,GAMA,YANA,GAOAC,QAPA,GAQA,MARA,GASAC,EATA,GAUA,YAVA,GAWAC,QAZF;AAcAM,EAAAA,KAAK,CAACD,MAAD,CAAL,CACGE,IADH,CACSlB,QAAD,IAAcA,QAAQ,CAACmB,IAAT,EADtB,EAEGD,IAFH,CAEShB,IAAD,IAAU;AACdU,IAAAA,cAAc,CAACV,IAAD,CAAd;AACAW,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GALH;AAMD,CAnCM;AAqCP,OAAO,MAAMO,WAAW,GAAG,OACzBb,QADyB,EAEzBc,MAFyB,EAGzBb,QAHyB,EAIzBC,QAJyB,EAKzBG,cALyB,EAMzBC,UANyB,EAOzBF,QAPyB,EAQzBD,EARyB,KAStB;AACH,MAAIR,IAAI,GAAG,EAAX;AACAW,EAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,MAAId,GAAG,GACL,wFACAQ,QADA,GAEA,UAFA,GAGAc,MAHA,GAIA,YAJA,GAKAb,QALA,GAMA,YANA,GAOAC,QAPA,GAQA,MARA,GASAC,EATA,GAUA,YAVA,GAWAC,QAZF;;AAcA,MAAI;AACF,UAAMX,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUF,GAAV,CAAvB;;AAEA,QAAIC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAJ,EAAiD;AAC/CD,MAAAA,IAAI,GAAG,EAAP;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,GAAGF,QAAQ,CAACE,IAAhB;;AACA,UAAIoB,MAAM,CAACC,OAAP,CAAerB,IAAf,EAAqBsB,MAArB,GAA8B,CAAlC,EAAqC,CACpC,CADD,MACO;AACLtB,QAAAA,IAAI,GAAG,EAAP;AACD;AACF;AACF,GAZD,CAYE,OAAOG,KAAP,EAAc;AACdH,IAAAA,IAAI,GAAG,EAAP;AACD;;AACDU,EAAAA,cAAc,CAACV,IAAD,CAAd;AACAW,EAAAA,UAAU,CAAC,KAAD,CAAV;AACA,SAAO,EAAP;AACD,CA7CM;MAAMO,W;AA+Cb,OAAO,MAAMK,cAAc,GAAG,OAAOf,EAAP,EAAWE,cAAX,EAA2BC,UAA3B,KAA0C;AACtE,MAAIX,IAAI,GAAG,EAAX;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEEW,EAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,MAAIa,WAAW,GAAG,EAAlB;AACA7B,EAAAA,QAAQ,GAAGA,QAAQ,CAAC8B,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,EAAR,IAAcnB,EAA3C,CAAX;AACAgB,EAAAA,WAAW,CAACI,QAAZ,GAAuBjC,QAAQ,CAAC,CAAD,CAAR,CAAYgC,EAAnC;AACAH,EAAAA,WAAW,CAACK,GAAZ,GAAkBlC,QAAQ,CAAC,CAAD,CAAR,CAAYmC,WAA9B;AACAN,EAAAA,WAAW,CAACO,UAAZ,GAAyBpC,QAAQ,CAAC,CAAD,CAAR,CAAYqC,KAArC;AACAR,EAAAA,WAAW,CAACS,UAAZ,GAAyBtC,QAAQ,CAAC,CAAD,CAAR,CAAYqC,KAArC;AACAR,EAAAA,WAAW,CAACU,IAAZ,GAAmBvC,QAAQ,CAAC,CAAD,CAAR,CAAYwC,IAA/B;AACAX,EAAAA,WAAW,CAACY,KAAZ,GAAoBzC,QAAQ,CAAC,CAAD,CAAR,CAAY0C,KAAhC;AACAb,EAAAA,WAAW,CAACc,aAAZ,GAA4B3C,QAAQ,CAAC,CAAD,CAAR,CAAY4C,KAAxC;AACAf,EAAAA,WAAW,CAACgB,WAAZ,GAA0B,CAA1B;AAEA9B,EAAAA,cAAc,CAACc,WAAD,CAAd;AACAb,EAAAA,UAAU,CAAC,KAAD,CAAV;AACA,SAAO,EAAP;AACD,CAtCM;AAwCP,OAAO,MAAM8B,cAAc,GAAG,OAC5BC,IAD4B,EAE5BL,KAF4B,EAG5BM,MAH4B,EAI5BC,qBAJ4B,EAK5BjC,UAL4B,KAMzB;AACH,MAAIX,IAAI,GAAG,EAAX;AAEA,MAAIH,GAAG,GACL,oFACA6C,IADA,GAEA,SAFA,GAGAL,KAHA,GAIA,aAJA,GAKAM,MANF;;AAOA,MAAI;AACF,UAAM7C,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUF,GAAV,CAAvB;;AACA,QAAIC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAJ,EAAiD;AAC/CD,MAAAA,IAAI,GAAG,EAAP;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,GAAGF,QAAQ,CAACE,IAAhB;;AACA,UAAIoB,MAAM,CAACC,OAAP,CAAerB,IAAf,EAAqBsB,MAArB,GAA8B,CAAlC,EAAqC,CACpC,CADD,MACO;AACLtB,QAAAA,IAAI,GAAG,EAAP;AACD;AACF;AACF,GAXD,CAWE,OAAOG,KAAP,EAAc;AACdH,IAAAA,IAAI,GAAG,EAAP;AACD;;AACD4C,EAAAA,qBAAqB,CAAC5C,IAAD,CAArB;AACAW,EAAAA,UAAU,CAAC,KAAD,CAAV;AACA,SAAO,EAAP;AACD,CAjCM;AAmCP,OAAO,MAAMkC,eAAe,GAAG,OAC7BrC,EAD6B,EAE7BsC,QAF6B,EAG7BC,GAH6B,EAI7BC,KAJ6B,EAK7BC,KAL6B,EAM7BC,YAN6B,KAO1B;AACH,MAAIlD,IAAI,GAAG,EAAX;AAEA,MAAIH,GAAG,GACL,mFACAW,EADA,GAEA,YAFA,GAGAsC,QAHA,GAIA,OAJA,GAKAC,GALA,GAMA,SANA,GAOAC,KAPA,GAQA,SARA,GASAC,KAVF;;AAWA,MAAI;AACF,UAAMnD,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUF,GAAV,CAAvB;;AACA,QAAIC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAJ,EAAiD;AAC/CD,MAAAA,IAAI,GAAG,EAAP;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,GAAGF,QAAQ,CAACE,IAAhB;;AAEA,UAAIoB,MAAM,CAACC,OAAP,CAAerB,IAAf,EAAqBsB,MAArB,GAA8B,CAAlC,EAAqC,CACpC,CADD,MACO;AACLtB,QAAAA,IAAI,GAAG,EAAP;AACD;AACF;AACF,GAZD,CAYE,OAAOG,KAAP,EAAc;AACdH,IAAAA,IAAI,GAAG,EAAP;AACD,GA5BE,CA8BH;;;AACA,SAAOA,IAAP;AACD,CAvCM;AAyCP,OAAO,MAAMmD,gBAAgB,GAAG,OAC9B3C,EAD8B,EAE9BsC,QAF8B,EAG9BC,GAH8B,EAI9BC,KAJ8B,EAK9BC,KAL8B,EAM9BG,SAN8B,EAO9BC,aAP8B,KAQ3B;AACH,MAAIrD,IAAI,GAAG,EAAX;AAEA,MAAIH,GAAG,GACL,oFACAW,EADA,GAEA,YAFA,GAGAsC,QAHA,GAIA,OAJA,GAKAC,GALA,GAMA,SANA,GAOAC,KAPA,GAQA,SARA,GASAC,KAVF;;AAWA,MAAI;AACF,UAAMnD,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUF,GAAV,CAAvB;AACAyD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYzD,QAAQ,CAACE,IAArB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAJ,EAAiD;AAC/CD,MAAAA,IAAI,GAAG,EAAP;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,GAAGF,QAAQ,CAACE,IAAhB;;AACA,UAAIoB,MAAM,CAACC,OAAP,CAAerB,IAAf,EAAqBsB,MAArB,GAA8B,CAAlC,EAAqC,CACpC,CADD,MACO;AACLtB,QAAAA,IAAI,GAAG,EAAP;AACD;AACF;;AACD,WAAOA,IAAP;AACD,GAfD,CAeE,OAAOG,KAAP,EAAc;AACdH,IAAAA,IAAI,GAAG,EAAP;AACD;;AACD,SAAOA,IAAP;AACD,CAzCM;AA2CP,OAAO,MAAMwD,kBAAkB,GAAG,MAAOC,SAAP,IAAqB;AACrD,MAAI5D,GAAG,GACL,6EACA4D,SAFF;;AAIA,MAAI;AACF,UAAM3D,QAAQ,GAAG,MAAML,KAAK,CAACiE,IAAN,CAAW7D,GAAX,CAAvB;AACD,GAFD,CAEE,OAAOM,KAAP,EAAc,CAAE;;AAClB,SAAO,EAAP;AACD,CATM;AAWP,OAAO,MAAMwD,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvE,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,GAAG,GACL,wEADF;;AAEA,QAAI;AACFkB,MAAAA,KAAK,CAAClB,GAAD,CAAL,CACGmB,IADH,CACSlB,QAAD,IAAcA,QAAQ,CAACmB,IAAT,EADtB,EAEGD,IAFH,CAEShB,IAAD,IAAU;AACd6D,QAAAA,YAAY,CAAC7D,IAAD,CAAZ;AACD,OAJH;AAKD,KAND,CAME,OAAOG,KAAP,EAAc;AACdmD,MAAAA,OAAO,CAACC,GAAR,CAAYpD,KAAZ;AACD;AACF,GAZQ,EAYN,EAZM,CAAT;AAaA,SAAOyD,SAAP;AACD,CAhBM;;GAAMD,c;;MAAAA,c","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport axios from \"axios\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport prodData from \"../src/components/prodData.json\";\r\n\r\nexport const GetTaxonomyfromAPI = async () => {\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = response.data;\r\n      reactLocalStorage.setObject(\"allTaxonomy\", data);\r\n    }\r\n  } catch (error) {}\r\n};\r\n\r\nexport const getProducts = (\r\n  property,\r\n  url,\r\n  taxonomy,\r\n  category,\r\n  ID,\r\n  featured,\r\n  setAllProducts,\r\n  setLoading\r\n) => {\r\n  let prodData = {\r\n    products: [],\r\n    loadder: true,\r\n  };\r\n  setLoading(true);\r\n  let apiURL =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=\" +\r\n    property +\r\n    \"&caturl=\" +\r\n    url +\r\n    \"&taxonomy=\" +\r\n    taxonomy +\r\n    \"&category=\" +\r\n    category +\r\n    \"&ID=\" +\r\n    ID +\r\n    \"&featured=\" +\r\n    featured;\r\n\r\n  fetch(apiURL)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setAllProducts(data);\r\n      setLoading(false);\r\n    });\r\n};\r\n\r\nexport const ApiProducts = async (\r\n  property,\r\n  catUrl,\r\n  taxonomy,\r\n  category,\r\n  setAllProducts,\r\n  setLoading,\r\n  featured,\r\n  ID\r\n) => {\r\n  let data = [];\r\n  setLoading(true);\r\n\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=\" +\r\n    property +\r\n    \"&caturl=\" +\r\n    catUrl +\r\n    \"&taxonomy=\" +\r\n    taxonomy +\r\n    \"&category=\" +\r\n    category +\r\n    \"&ID=\" +\r\n    ID +\r\n    \"&featured=\" +\r\n    featured;\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n  setAllProducts(data);\r\n  setLoading(false);\r\n  return \"\";\r\n};\r\n\r\nexport const getProductByID = async (ID, setAllProducts, setLoading) => {\r\n  let data = [];\r\n  /*\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductByID&ID=\" +\r\n    ID;\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n  */\r\n  setLoading(true);\r\n\r\n  let currentProd = [];\r\n  prodData = prodData.filter((product) => product.id == ID);\r\n  currentProd.STYLE_ID = prodData[0].id;\r\n  currentProd.URL = prodData[0].product_url;\r\n  currentProd.SMALLIMAGE = prodData[0].image;\r\n  currentProd.LARGEIMAGE = prodData[0].image;\r\n  currentProd.NAME = prodData[0].name;\r\n  currentProd.BRAND = prodData[0].brand;\r\n  currentProd.REGULAR_PRICE = prodData[0].price;\r\n  currentProd.SALES_PRICE = 0;\r\n\r\n  setAllProducts(currentProd);\r\n  setLoading(false);\r\n  return \"\";\r\n};\r\n\r\nexport const getWeRecommend = async (\r\n  dept,\r\n  brand,\r\n  number,\r\n  setAdditionalProducts,\r\n  setLoading\r\n) => {\r\n  let data = [];\r\n\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getWeRecommend&dept=\" +\r\n    dept +\r\n    \"&brand=\" +\r\n    brand +\r\n    \"&noOfItems=\" +\r\n    number;\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n  setAdditionalProducts(data);\r\n  setLoading(false);\r\n  return \"\";\r\n};\r\n\r\nexport const getProductSizes = async (\r\n  ID,\r\n  webStyle,\r\n  siz,\r\n  attr1,\r\n  attr2,\r\n  setProdSizes\r\n) => {\r\n  let data = [];\r\n\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductSizes&ID=\" +\r\n    ID +\r\n    \"&webStyle=\" +\r\n    webStyle +\r\n    \"&siz=\" +\r\n    siz +\r\n    \"&attr1=\" +\r\n    attr1 +\r\n    \"&attr2=\" +\r\n    attr2;\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n\r\n  // setProdSizes(data);\r\n  return data;\r\n};\r\n\r\nexport const getProductColors = async (\r\n  ID,\r\n  webStyle,\r\n  siz,\r\n  attr1,\r\n  attr2,\r\n  colorsRec,\r\n  setProdColors\r\n) => {\r\n  let data = [];\r\n\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getProductColors&ID=\" +\r\n    ID +\r\n    \"&webStyle=\" +\r\n    webStyle +\r\n    \"&siz=\" +\r\n    siz +\r\n    \"&attr1=\" +\r\n    attr1 +\r\n    \"&attr2=\" +\r\n    attr2;\r\n  try {\r\n    const response = await axios.get(url);\r\n    console.log(\"ssssssssssss\");\r\n    console.log(response.data);\r\n\r\n    if (response.data.includes(\"table.cfdump_wddx\")) {\r\n      data = [];\r\n    } else {\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    data = [];\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const setRecentsProducts = async (productID) => {\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=setRecent&ID=\" +\r\n    productID;\r\n\r\n  try {\r\n    const response = await axios.post(url);\r\n  } catch (error) {}\r\n  return \"\";\r\n};\r\n\r\nexport const GetAllTaxonomy = () => {\r\n  const [taxoItems, setTaxoItems] = useState([]);\r\n  useEffect(() => {\r\n    let url =\r\n      \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\r\n    try {\r\n      fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setTaxoItems(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n  return taxoItems;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}