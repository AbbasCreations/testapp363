{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\ColdFusion2018\\\\cfusion\\\\wwwroot\\\\celerant360\\\\client\\\\src\\\\API.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useStateValue } from \"./StateProvider\";\nimport axios from \"axios\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nexport const GetTaxonomyfromAPI = async () => {\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\n      let data = response.data;\n      reactLocalStorage.setObject(\"allTaxonomy\", data);\n    }\n  } catch (error) {}\n};\n_c = GetTaxonomyfromAPI;\nexport const allProductsAPI = async () => {\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts\";\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\n      let data = response.data;\n      reactLocalStorage.setObject(\"allProductsData\", data);\n    }\n  } catch (error) {}\n};\nexport const ApiProducts = async () => {\n  _s();\n\n  const [{\n    allProductsData\n  }, dispatch] = useStateValue();\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts\";\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\n      let data = response.data;\n\n      if (Object.entries(data).length > 0) {} else {\n        data = [];\n      }\n\n      dispatch({\n        type: \"ALL_PRODUCTS\",\n        item: [...cart]\n      });\n      reactLocalStorage.setObject(\"allProductsData\", data);\n    }\n  } catch (error) {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ApiProducts, \"2xSQ4MFwakqEDvP+GcdIPodI7/w=\", false, function () {\n  return [useStateValue];\n});\n\n_c2 = ApiProducts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetTaxonomyfromAPI\");\n$RefreshReg$(_c2, \"ApiProducts\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/API.js"],"names":["React","useStateValue","axios","reactLocalStorage","GetTaxonomyfromAPI","url","response","get","data","includes","setObject","error","allProductsAPI","ApiProducts","allProductsData","dispatch","Object","entries","length","type","item","cart"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;AAC5C,MAAIC,GAAG,GACL,wEADF;;AAGA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAvB;;AACA,QAAI,CAACC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAL,EAAkD;AAChD,UAAID,IAAI,GAAGF,QAAQ,CAACE,IAApB;AACAL,MAAAA,iBAAiB,CAACO,SAAlB,CAA4B,aAA5B,EAA2CF,IAA3C;AACD;AACF,GAND,CAME,OAAOG,KAAP,EAAc,CAAE;AACnB,CAXM;KAAMP,kB;AAab,OAAO,MAAMQ,cAAc,GAAG,YAAY;AACxC,MAAIP,GAAG,GACL,2EADF;;AAGA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAvB;;AACA,QAAI,CAACC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAL,EAAkD;AAChD,UAAID,IAAI,GAAGF,QAAQ,CAACE,IAApB;AACAL,MAAAA,iBAAiB,CAACO,SAAlB,CAA4B,iBAA5B,EAA+CF,IAA/C;AACD;AACF,GAND,CAME,OAAOG,KAAP,EAAc,CAAE;AACnB,CAXM;AAaP,OAAO,MAAME,WAAW,GAAG,YAAY;AAAA;;AACrC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAsBC,QAAtB,IAAkCd,aAAa,EAArD;AACA,MAAII,GAAG,GACL,2EADF;;AAGA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAvB;;AACA,QAAI,CAACC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAL,EAAkD;AAChD,UAAID,IAAI,GAAGF,QAAQ,CAACE,IAApB;;AACA,UAAIQ,MAAM,CAACC,OAAP,CAAeT,IAAf,EAAqBU,MAArB,GAA8B,CAAlC,EAAqC,CACpC,CADD,MACO;AACLV,QAAAA,IAAI,GAAG,EAAP;AACD;;AACDO,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,cADC;AAEPC,QAAAA,IAAI,EAAE,CAAC,GAAGC,IAAJ;AAFC,OAAD,CAAR;AAIAlB,MAAAA,iBAAiB,CAACO,SAAlB,CAA4B,iBAA5B,EAA+CF,IAA/C;AACD;AACF,GAdD,CAcE,OAAOG,KAAP,EAAc,CAAE;;AAClB,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAzBM;;GAAME,W;UAC6BZ,a;;;MAD7BY,W","sourcesContent":["import React from \"react\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nimport axios from \"axios\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nexport const GetTaxonomyfromAPI = async () => {\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = response.data;\r\n      reactLocalStorage.setObject(\"allTaxonomy\", data);\r\n    }\r\n  } catch (error) {}\r\n};\r\n\r\nexport const allProductsAPI = async () => {\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts\";\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = response.data;\r\n      reactLocalStorage.setObject(\"allProductsData\", data);\r\n    }\r\n  } catch (error) {}\r\n};\r\n\r\nexport const ApiProducts = async () => {\r\n  const [{ allProductsData }, dispatch] = useStateValue();\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts\";\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n      dispatch({\r\n        type: \"ALL_PRODUCTS\",\r\n        item: [...cart],\r\n      });\r\n      reactLocalStorage.setObject(\"allProductsData\", data);\r\n    }\r\n  } catch (error) {}\r\n  return (\r\n    <>\r\n      <h1></h1>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}