{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\ColdFusion2018\\\\cfusion\\\\wwwroot\\\\celerant360\\\\client\\\\src\\\\components\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense } from \"react\";\nimport axios from \"axios\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport * as API from \"../API\";\nimport { useStateValue } from \"../StateProvider\";\nlet texono = [];\nexport let taxonomy = [];\nexport let allProducts = [];\nconst resource = {\n  user: [{\n    name: \"a\"\n  }, {\n    name: \"b\"\n  }, {\n    name: \"c\"\n  }, {\n    name: \"d\"\n  }],\n  posts: [{\n    id: 1,\n    text: \"ss\"\n  }, {\n    id: 2,\n    text: \"nnn\"\n  }, {\n    id: 3,\n    text: \"ttt\"\n  }, {\n    id: 4,\n    text: \"uuu\"\n  }]\n};\nexport default function Test() {\n  return /*#__PURE__*/_jsxDEV(ProfileTimeline, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_c = Test;\n\nfunction ProfileDetails() {\n  // Try to read user info, although it might not have loaded yet\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: resource.user.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = ProfileDetails;\n\nfunction ProfileTimeline() {\n  _s();\n\n  const [{\n    allProductsData,\n    sFilters,\n    sortby\n  }, dispatch] = useStateValue();\n  let loading = true;\n  let apiUrl = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=sortby&caturl=firearms&taxonomy=Firearms&category=Firearms\";\n  let data = [];\n  axios.get(apiUrl).then(response => {\n    data = response.data;\n    loading = false;\n    console.log(data);\n    dispatch({\n      type: \"ALL_PRODUCTS\",\n      aProducts: [...data]\n    });\n    /*\r\n    dispatch({\r\n      type: \"LOADING_STATUS\",\r\n      laoder: false,\r\n    });*/\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: allProductsData.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: post.STYLE_ID\n    }, post.STYLE_ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileTimeline, \"ZmXB7DPY+5S56+MZUy6yJiunreU=\", false, function () {\n  return [useStateValue];\n});\n\n_c3 = ProfileTimeline;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Test\");\n$RefreshReg$(_c2, \"ProfileDetails\");\n$RefreshReg$(_c3, \"ProfileTimeline\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/components/Test.js"],"names":["React","Suspense","axios","reactLocalStorage","API","useStateValue","texono","taxonomy","allProducts","resource","user","name","posts","id","text","Test","ProfileDetails","ProfileTimeline","allProductsData","sFilters","sortby","dispatch","loading","apiUrl","data","get","then","response","console","log","type","aProducts","map","post","STYLE_ID"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,IAAIC,MAAM,GAAG,EAAb;AACA,OAAO,IAAIC,QAAQ,GAAG,EAAf;AACP,OAAO,IAAIC,WAAW,GAAG,EAAlB;AAEP,MAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,EAAgB;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAhB,EAA+B;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAA/B,EAA8C;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAA9C,CADS;AAEfC,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADK,EAEL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHK,EAIL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAJK;AAFQ,CAAjB;AAUA,eAAe,SAASC,IAAT,GAAgB;AAC7B,sBAAO,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAFuBA,I;;AAIxB,SAASC,cAAT,GAA0B;AACxB;AACA,sBAAO;AAAA,cAAKP,QAAQ,CAACC,IAAT,CAAcC;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MAHQK,c;;AAKT,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAAC;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,GAAD,EAAwCC,QAAxC,IAAoDhB,aAAa,EAAvE;AACA,MAAIiB,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GACR,+IADF;AAGA,MAAIC,IAAI,GAAG,EAAX;AACAtB,EAAAA,KAAK,CAACuB,GAAN,CAAUF,MAAV,EAAkBG,IAAlB,CAAwBC,QAAD,IAAc;AACnCH,IAAAA,IAAI,GAAGG,QAAQ,CAACH,IAAhB;AACAF,IAAAA,OAAO,GAAG,KAAV;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAH,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,SAAS,EAAE,CAAC,GAAGP,IAAJ;AAFJ,KAAD,CAAR;AAIA;AACJ;AACA;AACA;AACA;AACG,GAdD;AAgBA,sBACE;AAAA,cACGN,eAAe,CAACc,GAAhB,CAAqBC,IAAD,iBACnB;AAAA,gBAAyBA,IAAI,CAACC;AAA9B,OAASD,IAAI,CAACC,QAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA9BQjB,e;UACmDZ,a;;;MADnDY,e","sourcesContent":["import React, { Suspense } from \"react\";\r\nimport axios from \"axios\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport * as API from \"../API\";\r\nimport { useStateValue } from \"../StateProvider\";\r\n\r\nlet texono = [];\r\nexport let taxonomy = [];\r\nexport let allProducts = [];\r\n\r\nconst resource = {\r\n  user: [{ name: \"a\" }, { name: \"b\" }, { name: \"c\" }, { name: \"d\" }],\r\n  posts: [\r\n    { id: 1, text: \"ss\" },\r\n    { id: 2, text: \"nnn\" },\r\n    { id: 3, text: \"ttt\" },\r\n    { id: 4, text: \"uuu\" },\r\n  ],\r\n};\r\n\r\nexport default function Test() {\r\n  return <ProfileTimeline />;\r\n}\r\n\r\nfunction ProfileDetails() {\r\n  // Try to read user info, although it might not have loaded yet\r\n  return <h1>{resource.user.name}</h1>;\r\n}\r\n\r\nfunction ProfileTimeline() {\r\n  const [{ allProductsData, sFilters, sortby }, dispatch] = useStateValue();\r\n  let loading = true;\r\n  let apiUrl =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=sortby&caturl=firearms&taxonomy=Firearms&category=Firearms\";\r\n\r\n  let data = [];\r\n  axios.get(apiUrl).then((response) => {\r\n    data = response.data;\r\n    loading = false;\r\n\r\n    console.log(data);\r\n    dispatch({\r\n      type: \"ALL_PRODUCTS\",\r\n      aProducts: [...data],\r\n    });\r\n    /*\r\n    dispatch({\r\n      type: \"LOADING_STATUS\",\r\n      laoder: false,\r\n    });*/\r\n  });\r\n\r\n  return (\r\n    <ul>\r\n      {allProductsData.map((post) => (\r\n        <li key={post.STYLE_ID}>{post.STYLE_ID}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}