{"ast":null,"code":"var _jsxFileName = \"C:\\\\ColdFusion2018\\\\cfusion\\\\wwwroot\\\\celerant360\\\\client\\\\src\\\\components\\\\category\\\\categoryController.js\";\nimport * as Data from \"../../Data\";\nimport * as hC from \"../header/headerController\";\nimport { prodImagesDir } from \"../../settings\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getProducts = (filters, products, dispatch, property, url, taxonomy, category) => {\n  let getProducts = [];\n  let selectedProducts = [];\n  let allProducts = products;\n  let i = -1;\n\n  if (url == \"all-products\") {\n    filters[\"all-products\"] = \"all-products\";\n  }\n\n  getProducts = allProducts;\n  /*\r\n  if (taxonomy == \"SUBTYP_2\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) =>\r\n        prod.SUBTYP_2 == category &&\r\n        prod.SUBTYP_3 == \"EMPTY\" &&\r\n        prod.SUBTYP_2 != \"EMPTY\"\r\n    );\r\n  } else if (taxonomy == \"SUBTYP_1\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) =>\r\n        prod.SUBTYP_1 == category &&\r\n        prod.SUBTYP_2 == \"EMPTY\" &&\r\n        prod.SUBTYP_1 != \"EMPTY\"\r\n    );\r\n  } else if (taxonomy == \"TYP\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) =>\r\n        prod.TYP == category && prod.SUBTYP_1 == \"EMPTY\" && prod.TYP != \"EMPTY\"\r\n    );\r\n  } else if (taxonomy == \"DEPT\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) => prod.DEPT.toUpperCase() == category.toUpperCase()\r\n    );\r\n  } else if (url == \"all-products\") {\r\n    getProducts = [];\r\n    getProducts = allProducts;\r\n  } else {\r\n    getProducts = [];\r\n  }\r\n  */\n\n  if (Object.entries(filters).length !== 0) {\n    //Load products by seleted color filters\n    if (filters.color) {\n      getProducts = productsBySelectedColors(filters, getProducts);\n    } //Load products by seleted brand filters\n\n\n    if (filters.BRAND) {\n      getProducts = productsBySelectedBrands(filters, getProducts);\n    } //Load products by seleted size filters\n\n\n    if (filters.size) {\n      getProducts = productsBySelectedSize(filters, getProducts);\n    } //Load products by seleted price Ranges filters\n\n\n    if (filters.priceRange) {\n      getProducts = productsBySelectedPriceRanges(filters, getProducts);\n    }\n  } else {}\n\n  if (property == \"default\") {} else {\n    getProducts = SortProducts(property, getProducts, dispatch);\n  }\n\n  return getProducts;\n};\n\nconst productsBySelectedColors = (filters, getProducts) => {\n  let selectedProducts = [];\n\n  if (getProducts) {\n    getProducts.map(prods => {\n      if (prods.gener == \"simple\") {\n        /* prods.color.map((clr) => {\r\n          if (filters.color.includes(clr)) {\r\n            if (selectedProducts.includes(prods)) {\r\n            } else {\r\n              selectedProducts.push(prods)\r\n            }\r\n          }\r\n        })*/\n      } else {\n        prods.VARIANTS.map(vproduct => {\n          vproduct.COLOR.map(clr => {\n            if (filters.color.includes(clr.NAME)) {\n              if (selectedProducts.includes(prods)) {} else {\n                selectedProducts.push(prods);\n              }\n            }\n          });\n        });\n      }\n    });\n  } else {\n    selectedProducts = [];\n  }\n\n  return selectedProducts;\n};\n\nconst productsBySelectedBrands = (filters, getProducts) => {\n  let selectedProducts = [];\n\n  if (getProducts) {\n    getProducts.map(prods => {\n      if (prods.BRAND == filters.BRAND) {\n        if (selectedProducts.includes(prods)) {} else {\n          selectedProducts.push(prods);\n        }\n      }\n    });\n  } else {\n    selectedProducts = [];\n  }\n\n  return selectedProducts;\n};\n\nconst productsBySelectedSize = (filters, getProducts) => {\n  let selectedProducts = [];\n\n  if (getProducts) {\n    getProducts.map(prods => {\n      if (prods.GENER == \"simple\") {\n        /* prods.color.map((clr) => {\r\n           if (filters.color.includes(clr)) {\r\n             if (selectedProducts.includes(prods)) {\r\n             } else {\r\n               selectedProducts.push(prods)\r\n             }\r\n           }\r\n         })*/\n      } else {\n        prods.VARIANTS.map(vproduct => {\n          vproduct.SIZE.map(siz => {\n            if (filters.size.includes(siz)) {\n              if (selectedProducts.includes(prods)) {} else {\n                selectedProducts.push(prods);\n              }\n            }\n          });\n        });\n      }\n    });\n  } else {\n    selectedProducts = [];\n  }\n\n  return selectedProducts;\n};\n\nconst productsBySelectedPriceRanges = (filters, getProducts) => {\n  let selectedProducts = [];\n\n  if (filters.priceRange) {\n    if (getProducts) {\n      getProducts.map(prods => {\n        filters.priceRange.map(price => {\n          if (prods.PRICERANGE == price) {\n            if (selectedProducts.includes(prods)) {} else {\n              selectedProducts.push(prods);\n            }\n          }\n        });\n      });\n    } else {\n      selectedProducts = [];\n    }\n  }\n\n  return selectedProducts;\n};\n\nexport const getCategoryTitle = props => {\n  let categoryHeading = \"\";\n\n  if (props.filters.SUBTYP_3) {\n    categoryHeading = props.filters.SUBTYP_3;\n  } else if (props.filters.SUBTYP_2) {\n    categoryHeading = props.filters.SUBTYP_2;\n  } else if (props.filters.SUBTYP_1) {\n    categoryHeading = props.filters.SUBTYP_1;\n  } else if (props.filters.TYP) {\n    categoryHeading = props.filters.TYP;\n  } else if (props.filters.DEPT) {\n    categoryHeading = props.filters.DEPT;\n  } else if (props.filters.BRAND) {\n    categoryHeading = props.filters.BRAND;\n  } else if (props.filters.All) {\n    categoryHeading = props.filters.All;\n  } else {}\n\n  return categoryHeading;\n};\nexport const pagination = (products, productsPerPage, activePage) => {\n  let pagination = {}; // Logic for displaying current products\n\n  const indexOfLastProduct = activePage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentproducts = products.slice(indexOfFirstProduct, indexOfLastProduct);\n  pagination.currentproducts = currentproducts;\n  return pagination;\n};\nexport const handlePageChange = (setCurrentPage, e) => {\n  setCurrentPage(e);\n};\nexport const handleChangePerPage = (setPerpageProductscount, e) => {\n  let value = e.target.value;\n  setPerpageProductscount(value);\n};\nexport const getCategoryBreadCrumbs = props => {\n  let breadcrumbs = [];\n  let breadcrumbsContent = [];\n\n  if (props.urlData.taxonomy && props.urlData.taxonomy == \"DEPT\") {\n    breadcrumbs.push({\n      item: props.urlData.category,\n      url: props.urlData.url,\n      taxonomy: \"DEPT\",\n      redirectUrl: \"DEPT_Url\"\n    });\n  } else if (props.urlData.taxonomy == \"TYP\") {\n    let DEPT = \"\";\n    let DEPT_Url = \"\";\n    Data.taxonomy.map(categories => {\n      if (categories.TYP.toUpperCase() == props.urlData.category.toUpperCase() && categories.URL == props.urlData.url && categories.SUBTYP_1 == \"EMPTY\") {\n        DEPT = categories.DEPT;\n        Data.taxonomy.map(cat => {\n          if (cat.DEPT.toUpperCase() == DEPT.toUpperCase() && cat.TYP == \"EMPTY\") {\n            DEPT_Url = cat.URL;\n          }\n        });\n      }\n    });\n    breadcrumbs.push({\n      item: DEPT,\n      url: DEPT_Url,\n      taxonomy: \"DEPT\",\n      redirectUrl: \"DEPT_Url\"\n    }, {\n      item: props.urlData.category,\n      url: props.urlData.url,\n      taxonomy: \"TYP\",\n      redirectUrl: \"TYP_Url\"\n    });\n  } else if (props.urlData.taxonomy == \"SUBTYP_1\") {\n    let DEPT = \"\";\n    let DEPT_Url = \"\";\n    let TYP = \"\";\n    let TYP_Url = \"\";\n    Data.taxonomy.map(categories => {\n      if (categories.SUBTYP_1.toUpperCase() == props.urlData.category.toUpperCase() && categories.URL == props.urlData.url && categories.SUBTYP_2 == \"EMPTY\") {\n        DEPT = categories.DEPT;\n        TYP = categories.TYP;\n        Data.taxonomy.map(cat => {\n          if (cat.DEPT.toUpperCase() == DEPT.toUpperCase() && cat.TYP == \"EMPTY\") {\n            DEPT_Url = cat.URL;\n          }\n        });\n        Data.taxonomy.map(cat => {\n          if (cat.DEPT.toUpperCase() == DEPT.toUpperCase() && cat.TYP == TYP && cat.SUBTYP_1 == \"EMPTY\") {\n            TYP_Url = cat.URL;\n          }\n        });\n      }\n    });\n    breadcrumbs.push({\n      item: DEPT,\n      url: DEPT_Url,\n      taxonomy: \"DEPT\",\n      redirectUrl: \"DEPT_Url\"\n    }, {\n      item: TYP,\n      url: TYP_Url,\n      taxonomy: \"TYP\",\n      redirectUrl: \"TYP_Url\"\n    }, {\n      item: props.urlData.category,\n      url: props.urlData.url,\n      taxonomy: \"SUBTYP_1\",\n      redirectUrl: \"SUBTYP_1_Url\"\n    });\n  } else if (props.urlData.url == \"all-products\") {\n    breadcrumbs.push({\n      item: \"All Products\",\n      url: \"all-products\",\n      taxonomy: \"All Products\",\n      redirectUrl: \"\"\n    });\n  }\n\n  breadcrumbsContent.push( /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"breadcrumb-item\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"text-dark text-decoration-none\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 5\n  }, this));\n  let i = -1;\n\n  for (const [key, value] of Object.entries(breadcrumbs)) {\n    i++;\n\n    if (i == breadcrumbs.length - 1) {\n      breadcrumbsContent.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item active\",\n        \"aria-current\": \"page\",\n        children: value.item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this));\n    } else {\n      breadcrumbsContent.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          className: \"text-dark text-decoration-none\",\n          onClick: e => {\n            let dispatchedData = {};\n            dispatchedData = {\n              taxonomy: value.taxonomy,\n              redirectUrl: value.redirectUrl,\n              taxonomyValue: value.item,\n              taxonomyUrl: value.url\n            };\n            hC.addFilters(e, dispatchedData, props.dispatch, props.history);\n          },\n          children: value.item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  return breadcrumbsContent;\n};\n\nconst SortProducts = (property, products, dispatch) => {\n  let tempProducts = [];\n  let Sorting = {\n    value: \"default\",\n    order: \"ASC\"\n  };\n\n  if (property == \"name(a-z)\") {\n    Sorting = {\n      value: \"NAME\",\n      order: \"ASC\"\n    };\n  } else if (property == \"name(z-a)\") {\n    Sorting = {\n      value: \"NAME\",\n      order: \"DESC\"\n    };\n  } else if (property == \"featuredASC\") {\n    Sorting = {\n      value: \"FEATURED\",\n      order: \"ASC\"\n    };\n  } else if (property == \"price-high-to-low\") {\n    Sorting = {\n      value: \"REGULAR_PRICE\",\n      order: \"DESC\"\n    };\n  } else if (property == \"price-low-to-high\") {\n    Sorting = {\n      value: \"REGULAR_PRICE\",\n      order: \"ASC\"\n    };\n  } else {\n    Sorting = {\n      value: \"default\",\n      order: \"ASC\"\n    };\n  }\n\n  tempProducts = products.sort(SortProcess(Sorting));\n  return tempProducts;\n};\n\n_c = SortProducts;\n\nconst SortProcess = sorting => {\n  let property = \"default\";\n  let order = \"ASC\";\n  property = sorting.value;\n  order = sorting.order;\n  var sortOrder = 1;\n\n  if (property[0] === \"-\") {\n    sortOrder = -1;\n    property = property.substr(1);\n  }\n\n  return function (a, b) {\n    /* next line works with strings and numbers,\r\n     * and you may want to customize it to your needs\r\n     */\n    if (order == \"ASC\") {\n      var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n    } else {\n      var result = a[property] > b[property] ? -1 : a[property] < b[property] ? 1 : 0;\n    }\n\n    return result * sortOrder;\n  };\n};\n\n_c2 = SortProcess;\nexport const getUrlTaxonomy = url => {\n  let categoryData = {};\n  Data.taxonomy.map(categories => {\n    if (url == categories.URL && categories.SUBTYP_3 != \"EMPTY\" && categories.SUBTYP_4 == \"EMPTY\") {\n      categoryData = {\n        taxonomy: \"SUBTYP_3\",\n        category: categories.SUBTYP_3\n      };\n    } else if (url == categories.URL && categories.SUBTYP_2 != \"EMPTY\" && categories.SUBTYP_3 == \"EMPTY\") {\n      categoryData = {\n        taxonomy: \"SUBTYP_2\",\n        category: categories.SUBTYP_2\n      };\n    } else if (url == categories.URL && categories.SUBTYP_1 != \"EMPTY\" && categories.SUBTYP_2 == \"EMPTY\") {\n      categoryData = {\n        taxonomy: \"SUBTYP_1\",\n        category: categories.SUBTYP_1\n      };\n    } else if (url == categories.URL && categories.TYP != \"EMPTY\" && categories.SUBTYP_1 == \"EMPTY\") {\n      categoryData = {\n        taxonomy: \"TYP\",\n        category: categories.TYP\n      };\n    } else if (url == categories.URL && categories.DEPT != \"EMPTY\" && categories.TYP == \"EMPTY\") {\n      categoryData = {\n        taxonomy: \"DEPT\",\n        category: categories.DEPT\n      };\n    } else if (url == \"all-products\") {\n      categoryData = {\n        taxonomy: \"All\",\n        category: \"All Products\"\n      };\n    }\n  });\n  return categoryData;\n};\nexport const getColorAttrOnThumbs = (colorOrImages, id) => {\n  let results = {};\n  let colorImages = [];\n  let colorCode = [];\n  let content = \"\";\n  /*\r\n  let product = Data.allProducts.find((prod) => prod.style_id == id);\r\n    if (product && product.gener != \"simple\") {\r\n    if (colorOrImages == \"images\") {\r\n      colorImages = getThumbColorImages(product);\r\n      results = { name: \"image\", data: [...colorImages] };\r\n    } else if (colorOrImages == \"color\") {\r\n      colorCode = getThumbColorcode(product);\r\n      colorImages = getThumbColorImages(product);\r\n      results = {\r\n        name: \"colorCode\",\r\n        data: [...colorCode],\r\n        images: [...colorImages],\r\n      };\r\n    } else {\r\n      results = {};\r\n    }\r\n  } else {\r\n    results = {};\r\n  }\r\n  */\n\n  return results;\n};\n\nconst getThumbColorImages = product => {\n  let smallColorImages = [];\n  let imageUrl = \"\";\n\n  if (product.GENER === \"simple\") {} else {\n    product.VARIANTS.map(vProduct => {\n      vProduct.COLOR.map(color => {\n        if (color.COLORSMALLIMAGE && color.COLORSMALLIMAGE != \"\") {\n          imageUrl = prodImagesDir + color.COLORSMALLIMAGE;\n          smallColorImages.push(imageUrl);\n        }\n      });\n    });\n  }\n\n  return smallColorImages;\n};\n\nconst getThumbColorcode = product => {\n  let colorCode = [];\n  product.VARIANTS.map(vProduct => {\n    vProduct.COLOR.map(color => {\n      colorCode.push(color.COLORCODE);\n    });\n  });\n  return colorCode;\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortProducts\");\n$RefreshReg$(_c2, \"SortProcess\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/components/category/categoryController.js"],"names":["Data","hC","prodImagesDir","Link","getProducts","filters","products","dispatch","property","url","taxonomy","category","selectedProducts","allProducts","i","Object","entries","length","color","productsBySelectedColors","BRAND","productsBySelectedBrands","size","productsBySelectedSize","priceRange","productsBySelectedPriceRanges","SortProducts","map","prods","gener","VARIANTS","vproduct","COLOR","clr","includes","NAME","push","GENER","SIZE","siz","price","PRICERANGE","getCategoryTitle","props","categoryHeading","SUBTYP_3","SUBTYP_2","SUBTYP_1","TYP","DEPT","All","pagination","productsPerPage","activePage","indexOfLastProduct","indexOfFirstProduct","currentproducts","slice","handlePageChange","setCurrentPage","e","handleChangePerPage","setPerpageProductscount","value","target","getCategoryBreadCrumbs","breadcrumbs","breadcrumbsContent","urlData","item","redirectUrl","DEPT_Url","categories","toUpperCase","URL","cat","TYP_Url","key","dispatchedData","taxonomyValue","taxonomyUrl","addFilters","history","tempProducts","Sorting","order","sort","SortProcess","sorting","sortOrder","substr","a","b","result","getUrlTaxonomy","categoryData","SUBTYP_4","getColorAttrOnThumbs","colorOrImages","id","results","colorImages","colorCode","content","getThumbColorImages","product","smallColorImages","imageUrl","vProduct","COLORSMALLIMAGE","getThumbColorcode","COLORCODE"],"mappings":"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","sourcesContent":["import * as Data from \"../../Data\";\r\nimport * as hC from \"../header/headerController\";\r\nimport { prodImagesDir } from \"../../settings\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const getProducts = (\r\n  filters,\r\n  products,\r\n  dispatch,\r\n  property,\r\n  url,\r\n  taxonomy,\r\n  category\r\n) => {\r\n  let getProducts = [];\r\n  let selectedProducts = [];\r\n  let allProducts = products;\r\n\r\n  let i = -1;\r\n\r\n  if (url == \"all-products\") {\r\n    filters[\"all-products\"] = \"all-products\";\r\n  }\r\n  getProducts = allProducts;\r\n  /*\r\n  if (taxonomy == \"SUBTYP_2\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) =>\r\n        prod.SUBTYP_2 == category &&\r\n        prod.SUBTYP_3 == \"EMPTY\" &&\r\n        prod.SUBTYP_2 != \"EMPTY\"\r\n    );\r\n  } else if (taxonomy == \"SUBTYP_1\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) =>\r\n        prod.SUBTYP_1 == category &&\r\n        prod.SUBTYP_2 == \"EMPTY\" &&\r\n        prod.SUBTYP_1 != \"EMPTY\"\r\n    );\r\n  } else if (taxonomy == \"TYP\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) =>\r\n        prod.TYP == category && prod.SUBTYP_1 == \"EMPTY\" && prod.TYP != \"EMPTY\"\r\n    );\r\n  } else if (taxonomy == \"DEPT\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) => prod.DEPT.toUpperCase() == category.toUpperCase()\r\n    );\r\n  } else if (url == \"all-products\") {\r\n    getProducts = [];\r\n    getProducts = allProducts;\r\n  } else {\r\n    getProducts = [];\r\n  }\r\n*/\r\n\r\n  if (Object.entries(filters).length !== 0) {\r\n    //Load products by seleted color filters\r\n    if (filters.color) {\r\n      getProducts = productsBySelectedColors(filters, getProducts);\r\n    }\r\n\r\n    //Load products by seleted brand filters\r\n    if (filters.BRAND) {\r\n      getProducts = productsBySelectedBrands(filters, getProducts);\r\n    }\r\n\r\n    //Load products by seleted size filters\r\n    if (filters.size) {\r\n      getProducts = productsBySelectedSize(filters, getProducts);\r\n    }\r\n\r\n    //Load products by seleted price Ranges filters\r\n    if (filters.priceRange) {\r\n      getProducts = productsBySelectedPriceRanges(filters, getProducts);\r\n    }\r\n  } else {\r\n  }\r\n\r\n  if (property == \"default\") {\r\n  } else {\r\n    getProducts = SortProducts(property, getProducts, dispatch);\r\n  }\r\n  return getProducts;\r\n};\r\n\r\nconst productsBySelectedColors = (filters, getProducts) => {\r\n  let selectedProducts = [];\r\n\r\n  if (getProducts) {\r\n    getProducts.map((prods) => {\r\n      if (prods.gener == \"simple\") {\r\n        /* prods.color.map((clr) => {\r\n          if (filters.color.includes(clr)) {\r\n            if (selectedProducts.includes(prods)) {\r\n            } else {\r\n              selectedProducts.push(prods)\r\n            }\r\n          }\r\n        })*/\r\n      } else {\r\n        prods.VARIANTS.map((vproduct) => {\r\n          vproduct.COLOR.map((clr) => {\r\n            if (filters.color.includes(clr.NAME)) {\r\n              if (selectedProducts.includes(prods)) {\r\n              } else {\r\n                selectedProducts.push(prods);\r\n              }\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  } else {\r\n    selectedProducts = [];\r\n  }\r\n  return selectedProducts;\r\n};\r\n\r\nconst productsBySelectedBrands = (filters, getProducts) => {\r\n  let selectedProducts = [];\r\n\r\n  if (getProducts) {\r\n    getProducts.map((prods) => {\r\n      if (prods.BRAND == filters.BRAND) {\r\n        if (selectedProducts.includes(prods)) {\r\n        } else {\r\n          selectedProducts.push(prods);\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    selectedProducts = [];\r\n  }\r\n  return selectedProducts;\r\n};\r\n\r\nconst productsBySelectedSize = (filters, getProducts) => {\r\n  let selectedProducts = [];\r\n\r\n  if (getProducts) {\r\n    getProducts.map((prods) => {\r\n      if (prods.GENER == \"simple\") {\r\n        /* prods.color.map((clr) => {\r\n           if (filters.color.includes(clr)) {\r\n             if (selectedProducts.includes(prods)) {\r\n             } else {\r\n               selectedProducts.push(prods)\r\n             }\r\n           }\r\n         })*/\r\n      } else {\r\n        prods.VARIANTS.map((vproduct) => {\r\n          vproduct.SIZE.map((siz) => {\r\n            if (filters.size.includes(siz)) {\r\n              if (selectedProducts.includes(prods)) {\r\n              } else {\r\n                selectedProducts.push(prods);\r\n              }\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  } else {\r\n    selectedProducts = [];\r\n  }\r\n  return selectedProducts;\r\n};\r\n\r\nconst productsBySelectedPriceRanges = (filters, getProducts) => {\r\n  let selectedProducts = [];\r\n\r\n  if (filters.priceRange) {\r\n    if (getProducts) {\r\n      getProducts.map((prods) => {\r\n        filters.priceRange.map((price) => {\r\n          if (prods.PRICERANGE == price) {\r\n            if (selectedProducts.includes(prods)) {\r\n            } else {\r\n              selectedProducts.push(prods);\r\n            }\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      selectedProducts = [];\r\n    }\r\n  }\r\n  return selectedProducts;\r\n};\r\n\r\nexport const getCategoryTitle = (props) => {\r\n  let categoryHeading = \"\";\r\n  if (props.filters.SUBTYP_3) {\r\n    categoryHeading = props.filters.SUBTYP_3;\r\n  } else if (props.filters.SUBTYP_2) {\r\n    categoryHeading = props.filters.SUBTYP_2;\r\n  } else if (props.filters.SUBTYP_1) {\r\n    categoryHeading = props.filters.SUBTYP_1;\r\n  } else if (props.filters.TYP) {\r\n    categoryHeading = props.filters.TYP;\r\n  } else if (props.filters.DEPT) {\r\n    categoryHeading = props.filters.DEPT;\r\n  } else if (props.filters.BRAND) {\r\n    categoryHeading = props.filters.BRAND;\r\n  } else if (props.filters.All) {\r\n    categoryHeading = props.filters.All;\r\n  } else {\r\n  }\r\n\r\n  return categoryHeading;\r\n};\r\n\r\nexport const pagination = (products, productsPerPage, activePage) => {\r\n  let pagination = {};\r\n  // Logic for displaying current products\r\n  const indexOfLastProduct = activePage * productsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n  const currentproducts = products.slice(\r\n    indexOfFirstProduct,\r\n    indexOfLastProduct\r\n  );\r\n  pagination.currentproducts = currentproducts;\r\n  return pagination;\r\n};\r\n\r\nexport const handlePageChange = (setCurrentPage, e) => {\r\n  setCurrentPage(e);\r\n};\r\n\r\nexport const handleChangePerPage = (setPerpageProductscount, e) => {\r\n  let value = e.target.value;\r\n  setPerpageProductscount(value);\r\n};\r\n\r\nexport const getCategoryBreadCrumbs = (props) => {\r\n  let breadcrumbs = [];\r\n  let breadcrumbsContent = [];\r\n\r\n  if (props.urlData.taxonomy && props.urlData.taxonomy == \"DEPT\") {\r\n    breadcrumbs.push({\r\n      item: props.urlData.category,\r\n      url: props.urlData.url,\r\n      taxonomy: \"DEPT\",\r\n      redirectUrl: \"DEPT_Url\",\r\n    });\r\n  } else if (props.urlData.taxonomy == \"TYP\") {\r\n    let DEPT = \"\";\r\n    let DEPT_Url = \"\";\r\n\r\n    Data.taxonomy.map((categories) => {\r\n      if (\r\n        categories.TYP.toUpperCase() == props.urlData.category.toUpperCase() &&\r\n        categories.URL == props.urlData.url &&\r\n        categories.SUBTYP_1 == \"EMPTY\"\r\n      ) {\r\n        DEPT = categories.DEPT;\r\n\r\n        Data.taxonomy.map((cat) => {\r\n          if (\r\n            cat.DEPT.toUpperCase() == DEPT.toUpperCase() &&\r\n            cat.TYP == \"EMPTY\"\r\n          ) {\r\n            DEPT_Url = cat.URL;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    breadcrumbs.push(\r\n      {\r\n        item: DEPT,\r\n        url: DEPT_Url,\r\n        taxonomy: \"DEPT\",\r\n        redirectUrl: \"DEPT_Url\",\r\n      },\r\n      {\r\n        item: props.urlData.category,\r\n        url: props.urlData.url,\r\n        taxonomy: \"TYP\",\r\n        redirectUrl: \"TYP_Url\",\r\n      }\r\n    );\r\n  } else if (props.urlData.taxonomy == \"SUBTYP_1\") {\r\n    let DEPT = \"\";\r\n    let DEPT_Url = \"\";\r\n\r\n    let TYP = \"\";\r\n    let TYP_Url = \"\";\r\n\r\n    Data.taxonomy.map((categories) => {\r\n      if (\r\n        categories.SUBTYP_1.toUpperCase() ==\r\n          props.urlData.category.toUpperCase() &&\r\n        categories.URL == props.urlData.url &&\r\n        categories.SUBTYP_2 == \"EMPTY\"\r\n      ) {\r\n        DEPT = categories.DEPT;\r\n        TYP = categories.TYP;\r\n        Data.taxonomy.map((cat) => {\r\n          if (\r\n            cat.DEPT.toUpperCase() == DEPT.toUpperCase() &&\r\n            cat.TYP == \"EMPTY\"\r\n          ) {\r\n            DEPT_Url = cat.URL;\r\n          }\r\n        });\r\n\r\n        Data.taxonomy.map((cat) => {\r\n          if (\r\n            cat.DEPT.toUpperCase() == DEPT.toUpperCase() &&\r\n            cat.TYP == TYP &&\r\n            cat.SUBTYP_1 == \"EMPTY\"\r\n          ) {\r\n            TYP_Url = cat.URL;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    breadcrumbs.push(\r\n      {\r\n        item: DEPT,\r\n        url: DEPT_Url,\r\n        taxonomy: \"DEPT\",\r\n        redirectUrl: \"DEPT_Url\",\r\n      },\r\n      {\r\n        item: TYP,\r\n        url: TYP_Url,\r\n        taxonomy: \"TYP\",\r\n        redirectUrl: \"TYP_Url\",\r\n      },\r\n\r\n      {\r\n        item: props.urlData.category,\r\n        url: props.urlData.url,\r\n        taxonomy: \"SUBTYP_1\",\r\n        redirectUrl: \"SUBTYP_1_Url\",\r\n      }\r\n    );\r\n  } else if (props.urlData.url == \"all-products\") {\r\n    breadcrumbs.push({\r\n      item: \"All Products\",\r\n      url: \"all-products\",\r\n      taxonomy: \"All Products\",\r\n      redirectUrl: \"\",\r\n    });\r\n  }\r\n\r\n  breadcrumbsContent.push(\r\n    <li className=\"breadcrumb-item\">\r\n      <Link to=\"/\" className=\"text-dark text-decoration-none\">\r\n        Home\r\n      </Link>\r\n    </li>\r\n  );\r\n\r\n  let i = -1;\r\n  for (const [key, value] of Object.entries(breadcrumbs)) {\r\n    i++;\r\n\r\n    if (i == breadcrumbs.length - 1) {\r\n      breadcrumbsContent.push(\r\n        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n          {value.item}\r\n        </li>\r\n      );\r\n    } else {\r\n      breadcrumbsContent.push(\r\n        <li className=\"breadcrumb-item\">\r\n          <Link\r\n            to=\"\"\r\n            className=\"text-dark text-decoration-none\"\r\n            onClick={(e) => {\r\n              let dispatchedData = {};\r\n\r\n              dispatchedData = {\r\n                taxonomy: value.taxonomy,\r\n                redirectUrl: value.redirectUrl,\r\n                taxonomyValue: value.item,\r\n                taxonomyUrl: value.url,\r\n              };\r\n              hC.addFilters(e, dispatchedData, props.dispatch, props.history);\r\n            }}\r\n          >\r\n            {value.item}\r\n          </Link>\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n\r\n  return breadcrumbsContent;\r\n};\r\nconst SortProducts = (property, products, dispatch) => {\r\n  let tempProducts = [];\r\n  let Sorting = { value: \"default\", order: \"ASC\" };\r\n\r\n  if (property == \"name(a-z)\") {\r\n    Sorting = { value: \"NAME\", order: \"ASC\" };\r\n  } else if (property == \"name(z-a)\") {\r\n    Sorting = { value: \"NAME\", order: \"DESC\" };\r\n  } else if (property == \"featuredASC\") {\r\n    Sorting = { value: \"FEATURED\", order: \"ASC\" };\r\n  } else if (property == \"price-high-to-low\") {\r\n    Sorting = { value: \"REGULAR_PRICE\", order: \"DESC\" };\r\n  } else if (property == \"price-low-to-high\") {\r\n    Sorting = { value: \"REGULAR_PRICE\", order: \"ASC\" };\r\n  } else {\r\n    Sorting = { value: \"default\", order: \"ASC\" };\r\n  }\r\n\r\n  tempProducts = products.sort(SortProcess(Sorting));\r\n\r\n  return tempProducts;\r\n};\r\nconst SortProcess = (sorting) => {\r\n  let property = \"default\";\r\n  let order = \"ASC\";\r\n  property = sorting.value;\r\n  order = sorting.order;\r\n\r\n  var sortOrder = 1;\r\n  if (property[0] === \"-\") {\r\n    sortOrder = -1;\r\n    property = property.substr(1);\r\n  }\r\n  return function (a, b) {\r\n    /* next line works with strings and numbers,\r\n     * and you may want to customize it to your needs\r\n     */\r\n    if (order == \"ASC\") {\r\n      var result =\r\n        a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\r\n    } else {\r\n      var result =\r\n        a[property] > b[property] ? -1 : a[property] < b[property] ? 1 : 0;\r\n    }\r\n    return result * sortOrder;\r\n  };\r\n};\r\n\r\nexport const getUrlTaxonomy = (url) => {\r\n  let categoryData = {};\r\n  Data.taxonomy.map((categories) => {\r\n    if (\r\n      url == categories.URL &&\r\n      categories.SUBTYP_3 != \"EMPTY\" &&\r\n      categories.SUBTYP_4 == \"EMPTY\"\r\n    ) {\r\n      categoryData = { taxonomy: \"SUBTYP_3\", category: categories.SUBTYP_3 };\r\n    } else if (\r\n      url == categories.URL &&\r\n      categories.SUBTYP_2 != \"EMPTY\" &&\r\n      categories.SUBTYP_3 == \"EMPTY\"\r\n    ) {\r\n      categoryData = { taxonomy: \"SUBTYP_2\", category: categories.SUBTYP_2 };\r\n    } else if (\r\n      url == categories.URL &&\r\n      categories.SUBTYP_1 != \"EMPTY\" &&\r\n      categories.SUBTYP_2 == \"EMPTY\"\r\n    ) {\r\n      categoryData = { taxonomy: \"SUBTYP_1\", category: categories.SUBTYP_1 };\r\n    } else if (\r\n      url == categories.URL &&\r\n      categories.TYP != \"EMPTY\" &&\r\n      categories.SUBTYP_1 == \"EMPTY\"\r\n    ) {\r\n      categoryData = { taxonomy: \"TYP\", category: categories.TYP };\r\n    } else if (\r\n      url == categories.URL &&\r\n      categories.DEPT != \"EMPTY\" &&\r\n      categories.TYP == \"EMPTY\"\r\n    ) {\r\n      categoryData = { taxonomy: \"DEPT\", category: categories.DEPT };\r\n    } else if (url == \"all-products\") {\r\n      categoryData = { taxonomy: \"All\", category: \"All Products\" };\r\n    }\r\n  });\r\n  return categoryData;\r\n};\r\n\r\nexport const getColorAttrOnThumbs = (colorOrImages, id) => {\r\n  let results = {};\r\n  let colorImages = [];\r\n  let colorCode = [];\r\n  let content = \"\";\r\n\r\n  /*\r\n  let product = Data.allProducts.find((prod) => prod.style_id == id);\r\n\r\n  if (product && product.gener != \"simple\") {\r\n    if (colorOrImages == \"images\") {\r\n      colorImages = getThumbColorImages(product);\r\n      results = { name: \"image\", data: [...colorImages] };\r\n    } else if (colorOrImages == \"color\") {\r\n      colorCode = getThumbColorcode(product);\r\n      colorImages = getThumbColorImages(product);\r\n      results = {\r\n        name: \"colorCode\",\r\n        data: [...colorCode],\r\n        images: [...colorImages],\r\n      };\r\n    } else {\r\n      results = {};\r\n    }\r\n  } else {\r\n    results = {};\r\n  }\r\n*/\r\n  return results;\r\n};\r\nconst getThumbColorImages = (product) => {\r\n  let smallColorImages = [];\r\n  let imageUrl = \"\";\r\n  if (product.GENER === \"simple\") {\r\n  } else {\r\n    product.VARIANTS.map((vProduct) => {\r\n      vProduct.COLOR.map((color) => {\r\n        if (color.COLORSMALLIMAGE && color.COLORSMALLIMAGE != \"\") {\r\n          imageUrl = prodImagesDir + color.COLORSMALLIMAGE;\r\n          smallColorImages.push(imageUrl);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  return smallColorImages;\r\n};\r\n\r\nconst getThumbColorcode = (product) => {\r\n  let colorCode = [];\r\n\r\n  product.VARIANTS.map((vProduct) => {\r\n    vProduct.COLOR.map((color) => {\r\n      colorCode.push(color.COLORCODE);\r\n    });\r\n  });\r\n\r\n  return colorCode;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}