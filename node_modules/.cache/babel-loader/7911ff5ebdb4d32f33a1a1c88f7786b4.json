{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\ColdFusion2018\\\\cfusion\\\\wwwroot\\\\celerant360\\\\client\\\\src\\\\API.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useStateValue } from \"./StateProvider\";\nimport axios from \"axios\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nexport const GetTaxonomyfromAPI = async () => {\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\n      let data = response.data;\n      reactLocalStorage.setObject(\"allTaxonomy\", data);\n    }\n  } catch (error) {}\n};\n_c = GetTaxonomyfromAPI;\nexport const ApiProducts = async (allProductsData, dispatch, property, catUrl, taxonomy, category) => {\n  let url = \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=\" + property + \"&caturl=\" + catUrl + \"&taxonomy=\" + taxonomy + \"&category=\" + category;\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\n      let data = [];\n      data = response.data;\n\n      if (Object.entries(data).length > 0) {} else {\n        data = [];\n      }\n\n      dispatch({\n        type: \"ALL_PRODUCTS\",\n        aProducts: [...data]\n      }); // reactLocalStorage.setObject(\"allProductsData\", data);\n    }\n  } catch (error) {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c2 = ApiProducts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetTaxonomyfromAPI\");\n$RefreshReg$(_c2, \"ApiProducts\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/API.js"],"names":["React","useState","useEffect","useStateValue","axios","reactLocalStorage","GetTaxonomyfromAPI","url","response","get","data","includes","setObject","error","ApiProducts","allProductsData","dispatch","property","catUrl","taxonomy","category","Object","entries","length","type","aProducts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;AAC5C,MAAIC,GAAG,GACL,wEADF;;AAGA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAvB;;AACA,QAAI,CAACC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAL,EAAkD;AAChD,UAAID,IAAI,GAAGF,QAAQ,CAACE,IAApB;AACAL,MAAAA,iBAAiB,CAACO,SAAlB,CAA4B,aAA5B,EAA2CF,IAA3C;AACD;AACF,GAND,CAME,OAAOG,KAAP,EAAc,CAAE;AACnB,CAXM;KAAMP,kB;AAab,OAAO,MAAMQ,WAAW,GAAG,OACzBC,eADyB,EAEzBC,QAFyB,EAGzBC,QAHyB,EAIzBC,MAJyB,EAKzBC,QALyB,EAMzBC,QANyB,KAOtB;AACH,MAAIb,GAAG,GACL,wFACAU,QADA,GAEA,UAFA,GAGAC,MAHA,GAIA,YAJA,GAKAC,QALA,GAMA,YANA,GAOAC,QARF;;AAUA,MAAI;AACF,UAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAvB;;AAEA,QAAI,CAACC,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,mBAAvB,CAAL,EAAkD;AAChD,UAAID,IAAI,GAAG,EAAX;AAEAA,MAAAA,IAAI,GAAGF,QAAQ,CAACE,IAAhB;;AACA,UAAIW,MAAM,CAACC,OAAP,CAAeZ,IAAf,EAAqBa,MAArB,GAA8B,CAAlC,EAAqC,CACpC,CADD,MACO;AACLb,QAAAA,IAAI,GAAG,EAAP;AACD;;AACDM,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAE,cADC;AAEPC,QAAAA,SAAS,EAAE,CAAC,GAAGf,IAAJ;AAFJ,OAAD,CAAR,CARgD,CAahD;AACD;AACF,GAlBD,CAkBE,OAAOG,KAAP,EAAc,CAAE;;AAElB,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CA3CM;MAAMC,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nimport axios from \"axios\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nexport const GetTaxonomyfromAPI = async () => {\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getTaxonomy\";\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = response.data;\r\n      reactLocalStorage.setObject(\"allTaxonomy\", data);\r\n    }\r\n  } catch (error) {}\r\n};\r\n\r\nexport const ApiProducts = async (\r\n  allProductsData,\r\n  dispatch,\r\n  property,\r\n  catUrl,\r\n  taxonomy,\r\n  category\r\n) => {\r\n  let url =\r\n    \"http://localhost:8500/celerant360/server/CF/API.cfc?method=getAllProducts&property=\" +\r\n    property +\r\n    \"&caturl=\" +\r\n    catUrl +\r\n    \"&taxonomy=\" +\r\n    taxonomy +\r\n    \"&category=\" +\r\n    category;\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n\r\n    if (!response.data.includes(\"table.cfdump_wddx\")) {\r\n      let data = [];\r\n\r\n      data = response.data;\r\n      if (Object.entries(data).length > 0) {\r\n      } else {\r\n        data = [];\r\n      }\r\n      dispatch({\r\n        type: \"ALL_PRODUCTS\",\r\n        aProducts: [...data],\r\n      });\r\n\r\n      // reactLocalStorage.setObject(\"allProductsData\", data);\r\n    }\r\n  } catch (error) {}\r\n\r\n  return (\r\n    <>\r\n      <h1></h1>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}