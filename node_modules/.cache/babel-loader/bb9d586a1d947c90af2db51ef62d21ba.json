{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\ColdFusion2018\\\\cfusion\\\\wwwroot\\\\celerant360\\\\client\\\\src\\\\components\\\\category\\\\categoryController.js\";\nimport * as Data from \"../../Data\";\nimport * as hC from \"../header/headerController\";\nimport { prodImagesDir } from \"../../settings\";\nimport { Link } from \"react-router-dom\";\nexport const getProducts = (filters, products, dispatch, property, url, taxonomy) => {\n  let getProducts = [];\n  let selectedProducts = [];\n  let allProducts = Data.allProducts;\n  let i = -1;\n\n  if (url == \"all-products\") {\n    filters[\"all-products\"] = \"all-products\";\n  }\n\n  if (taxonomy == \"subTyp_2\") {\n    getProducts = allProducts.filter(prod => prod.subTyp_2 == url && prod.subTyp_3 == \"Empty\" && prod.subTyp_2 != \"Empty\");\n  } else if (taxonomy == \"subTyp_1\") {\n    getProducts = allProducts.filter(prod => prod.subTyp_1 == url && prod.subTyp_2 == \"Empty\" && prod.subTyp_1 != \"Empty\");\n  } else if (taxonomy == \"typ\") {\n    getProducts = allProducts.filter(prod => prod.typ == url && prod.subTyp_1 == \"Empty\" && prod.typ != \"Empty\");\n  } else if (taxonomy == \"dept\") {\n    getProducts = allProducts.filter(prod => prod.dept == url && prod.typ == \"Empty\" && prod.dept != \"Empty\");\n  } else if (url == \"all-products\") {\n    getProducts = [];\n    getProducts = allProducts;\n  } else {\n    getProducts = [];\n  }\n\n  if (Object.entries(filters).length !== 0) {\n    //Load products by seleted color filters\n    if (filters.color) {\n      getProducts = productsBySelectedColors(filters, getProducts);\n    } //Load products by seleted brand filters\n\n\n    if (filters.brand) {\n      getProducts = productsBySelectedBrands(filters, getProducts);\n    } //Load products by seleted size filters\n\n\n    if (filters.size) {\n      getProducts = productsBySelectedSize(filters, getProducts);\n    } //Load products by seleted price Ranges filters\n\n\n    if (filters.priceRange) {\n      getProducts = productsBySelectedPriceRanges(filters, getProducts);\n    }\n  } else {}\n\n  if (property == \"default\") {} else {\n    getProducts = SortProducts(property, getProducts, dispatch);\n  }\n\n  if (JSON.stringify(products) == JSON.stringify(getProducts)) {} else {\n    dispatch({\n      type: \"ADD_PRODUCTS\",\n      productsItems: getProducts\n    });\n  }\n\n  return products;\n};\n\nconst productsBySelectedColors = (filters, getProducts) => {\n  let selectedProducts = [];\n\n  if (getProducts) {\n    getProducts.map(prods => {\n      if (prods.gener == \"simple\") {\n        /* prods.color.map((clr) => {\r\n          if (filters.color.includes(clr)) {\r\n            if (selectedProducts.includes(prods)) {\r\n            } else {\r\n              selectedProducts.push(prods)\r\n            }\r\n          }\r\n        })*/\n      } else {\n        prods.variants.map(vproduct => {\n          vproduct.color.map(clr => {\n            if (filters.color.includes(clr.name)) {\n              if (selectedProducts.includes(prods)) {} else {\n                selectedProducts.push(prods);\n              }\n            }\n          });\n        });\n      }\n    });\n  } else {\n    selectedProducts = [];\n  }\n\n  return selectedProducts;\n};\n\nconst productsBySelectedBrands = (filters, getProducts) => {\n  let selectedProducts = [];\n\n  if (getProducts) {\n    getProducts.map(prods => {\n      if (prods.brand == filters.brand) {\n        if (selectedProducts.includes(prods)) {} else {\n          selectedProducts.push(prods);\n        }\n      }\n    });\n  } else {\n    selectedProducts = [];\n  }\n\n  return selectedProducts;\n};\n\nconst productsBySelectedSize = (filters, getProducts) => {\n  let selectedProducts = [];\n\n  if (getProducts) {\n    getProducts.map(prods => {\n      if (prods.gener == \"simple\") {\n        /* prods.color.map((clr) => {\r\n           if (filters.color.includes(clr)) {\r\n             if (selectedProducts.includes(prods)) {\r\n             } else {\r\n               selectedProducts.push(prods)\r\n             }\r\n           }\r\n         })*/\n      } else {\n        prods.variants.map(vproduct => {\n          if (filters.size.includes(vproduct.size)) {\n            if (selectedProducts.includes(prods)) {} else {\n              selectedProducts.push(prods);\n            }\n          }\n        });\n      }\n    });\n  } else {\n    selectedProducts = [];\n  }\n\n  return selectedProducts;\n};\n\nconst productsBySelectedPriceRanges = (filters, getProducts) => {\n  let selectedProducts = [];\n  let lower;\n  let upper;\n\n  if (filters.priceRange == \"below $50\") {\n    lower = 0;\n    upper = 50;\n  } else if (filters.priceRange == \"$51-$100\") {\n    lower = 51;\n    upper = 100;\n  } else if (filters.priceRange == \"$101-$150\") {\n    lower = 101;\n    upper = 150;\n  } else if (filters.priceRange == \"$151-$200\") {\n    lower = 151;\n    upper = 200;\n  } else if (filters.priceRange == \"$201-$250\") {\n    lower = 201;\n    upper = 250;\n  } else if (filters.priceRange == \"above $250\") {\n    lower = 251;\n    upper = 9999999999999;\n  }\n\n  if (filters.priceRange) {\n    if (getProducts) {\n      getProducts.map(prods => {\n        if (prods.gener == \"simple\") {\n          if (prods.sales_price) {\n            if (prods.sales_price >= lower && prods.sales_price <= upper) {\n              if (selectedProducts.includes(prods)) {} else {\n                selectedProducts.push(prods);\n              }\n            }\n          } else {\n            if (prods.regular_price >= lower && prods.regular_price <= upper) {\n              if (selectedProducts.includes(prods)) {} else {\n                selectedProducts.push(prods);\n              }\n            }\n          }\n        } else {\n          prods.variants.map(vproduct => {\n            if (vproduct.sales_price) {\n              if (vproduct.sales_price >= lower && vproduct.sales_price <= upper) {\n                if (selectedProducts.includes(prods)) {} else {\n                  selectedProducts.push(prods);\n                }\n              }\n            } else {\n              if (vproduct.regular_price >= lower && vproduct.regular_price <= upper) {\n                if (selectedProducts.includes(prods)) {} else {\n                  selectedProducts.push(prods);\n                }\n              }\n            }\n          });\n        }\n      });\n    } else {\n      selectedProducts = [];\n    }\n  }\n\n  return selectedProducts;\n};\n\nexport const getCategoryTitle = props => {\n  let categoryHeading = \"\";\n\n  if (props.filters.subTyp_3) {\n    categoryHeading = props.filters.subTyp_3;\n  } else if (props.filters.subTyp_2) {\n    categoryHeading = props.filters.subTyp_2;\n  } else if (props.filters.subTyp_1) {\n    categoryHeading = props.filters.subTyp_1;\n  } else if (props.filters.typ) {\n    categoryHeading = props.filters.typ;\n  } else if (props.filters.dept) {\n    categoryHeading = props.filters.dept;\n  } else if (props.filters.brand) {\n    categoryHeading = props.filters.brand;\n  } else if (props.filters.allproducts) {\n    categoryHeading = props.filters.allproducts;\n  } else {}\n\n  return categoryHeading;\n};\nexport const pagination = (products, productsPerPage, activePage) => {\n  let pagination = {}; // Logic for displaying current products\n\n  const indexOfLastProduct = activePage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentproducts = products.slice(indexOfFirstProduct, indexOfLastProduct);\n  pagination.currentproducts = currentproducts;\n  return pagination;\n};\nexport const handlePageChange = (setCurrentPage, e) => {\n  setCurrentPage(e);\n};\nexport const handleChangePerPage = (setPerpageProductscount, e) => {\n  let value = e.target.value;\n  setPerpageProductscount(value);\n};\nexport const getCategoryBreadCrumbs = props => {\n  let breadcrumbs = [];\n  let breadcrumbsContent = [];\n\n  if (props.urlData.taxonomy == \"dept\") {\n    breadcrumbs.push({\n      item: props.urlData.category,\n      url: props.urlData.url,\n      taxonomy: \"dept\",\n      redirectUrl: \"dept_Url\"\n    });\n  } else if (props.urlData.taxonomy == \"typ\") {\n    let dept = \"\";\n    let dept_Url = \"\";\n    Data.taxonomy.map(categories => {\n      if (categories.typ == props.urlData.category && categories.url == props.urlData.url && categories.subTyp_1 == \"Empty\") {\n        dept = categories.dept;\n        Data.taxonomy.map(cat => {\n          if (cat.dept == dept && cat.typ == \"Empty\") {\n            dept_Url = cat.url;\n          }\n        });\n      }\n    });\n    breadcrumbs.push({\n      item: dept,\n      url: dept_Url,\n      taxonomy: \"dept\",\n      redirectUrl: \"dept_Url\"\n    }, {\n      item: props.urlData.category,\n      url: props.urlData.url,\n      taxonomy: \"typ\",\n      redirectUrl: \"typ_Url\"\n    });\n  } else if (props.urlData.taxonomy == \"subTyp_1\") {\n    let dept = \"\";\n    let dept_Url = \"\";\n    let typ = \"\";\n    let typ_Url = \"\";\n    Data.taxonomy.map(categories => {\n      if (categories.subTyp_1 == props.urlData.category && categories.url == props.urlData.url && categories.subTyp_2 == \"Empty\") {\n        dept = categories.dept;\n        typ = categories.typ;\n        Data.taxonomy.map(cat => {\n          if (cat.dept == dept && cat.typ == \"Empty\") {\n            dept_Url = cat.url;\n          }\n        });\n        Data.taxonomy.map(cat => {\n          if (cat.dept == dept && cat.typ == typ && cat.subTyp_1 == \"Empty\") {\n            typ_Url = cat.url;\n          }\n        });\n      }\n    });\n    breadcrumbs.push({\n      item: dept,\n      url: dept_Url,\n      taxonomy: \"dept\",\n      redirectUrl: \"dept_Url\"\n    }, {\n      item: typ,\n      url: typ_Url,\n      taxonomy: \"typ\",\n      redirectUrl: \"typ_Url\"\n    }, {\n      item: props.urlData.category,\n      url: props.urlData.url,\n      taxonomy: \"subTyp_1\",\n      redirectUrl: \"subTyp_1_Url\"\n    });\n  } else if (props.urlData.url == \"all-products\") {\n    breadcrumbs.push({\n      item: \"All Products\",\n      url: \"all-products\",\n      taxonomy: \"All Products\",\n      redirectUrl: \"\"\n    });\n  }\n\n  breadcrumbsContent.push( /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"breadcrumb-item\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"text-dark text-decoration-none\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this));\n  let i = -1;\n\n  for (const [key, value] of Object.entries(breadcrumbs)) {\n    i++;\n\n    if (i == breadcrumbs.length - 1) {\n      breadcrumbsContent.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item active\",\n        \"aria-current\": \"page\",\n        children: value.item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this));\n    } else {\n      breadcrumbsContent.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          className: \"text-dark text-decoration-none\",\n          onClick: e => {\n            let dispatchedData = {};\n            dispatchedData = {\n              taxonomy: value.taxonomy,\n              redirectUrl: value.redirectUrl,\n              taxonomyValue: value.item,\n              taxonomyUrl: value.url\n            };\n            hC.addFilters(e, dispatchedData, props.dispatch, props.history);\n          },\n          children: value.item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  return breadcrumbsContent;\n};\n\nconst SortProducts = (property, products, dispatch) => {\n  let tempProducts = [];\n  let Sorting = {\n    value: \"default\",\n    order: \"ASC\"\n  };\n\n  if (property == \"name(a-z)\") {\n    Sorting = {\n      value: \"name\",\n      order: \"ASC\"\n    };\n  } else if (property == \"name(z-a)\") {\n    Sorting = {\n      value: \"name\",\n      order: \"DESC\"\n    };\n  } else if (property == \"featuredASC\") {\n    Sorting = {\n      value: \"featured\",\n      order: \"ASC\"\n    };\n  } else if (property == \"price-high-to-low\") {\n    Sorting = {\n      value: \"regular_price\",\n      order: \"DESC\"\n    };\n  } else if (property == \"price-low-to-high\") {\n    Sorting = {\n      value: \"regular_price\",\n      order: \"ASC\"\n    };\n  } else {\n    Sorting = {\n      value: \"default\",\n      order: \"ASC\"\n    };\n  }\n\n  tempProducts = products.sort(SortProcess(Sorting));\n  return tempProducts;\n};\n\n_c = SortProducts;\n\nconst SortProcess = sorting => {\n  let property = \"default\";\n  let order = \"ASC\";\n  property = sorting.value;\n  order = sorting.order;\n  var sortOrder = 1;\n\n  if (property[0] === \"-\") {\n    sortOrder = -1;\n    property = property.substr(1);\n  }\n\n  return function (a, b) {\n    /* next line works with strings and numbers,\r\n     * and you may want to customize it to your needs\r\n     */\n    if (order == \"ASC\") {\n      var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n    } else {\n      var result = a[property] > b[property] ? -1 : a[property] < b[property] ? 1 : 0;\n    }\n\n    return result * sortOrder;\n  };\n};\n\n_c2 = SortProcess;\nexport const getUrlTaxonomy = url => {\n  let categoryData = {};\n  Data.taxonomy.map(categories => {\n    if (url == categories.url && categories.subTyp_3 != \"Empty\" && categories.subTyp_4 == \"Empty\") {\n      categoryData = {\n        taxonomy: \"subTyp_3\",\n        category: categories.subTyp_3\n      };\n    } else if (url == categories.url && categories.subTyp_2 != \"Empty\" && categories.subTyp_3 == \"Empty\") {\n      categoryData = {\n        taxonomy: \"subTyp_2\",\n        category: categories.subTyp_2\n      };\n    } else if (url == categories.url && categories.subTyp_1 != \"Empty\" && categories.subTyp_2 == \"Empty\") {\n      categoryData = {\n        taxonomy: \"subTyp_1\",\n        category: categories.subTyp_1\n      };\n    } else if (url == categories.url && categories.typ != \"Empty\" && categories.subTyp_1 == \"Empty\") {\n      categoryData = {\n        taxonomy: \"typ\",\n        category: categories.typ\n      };\n    } else if (url == categories.url && categories.dept != \"Empty\" && categories.typ == \"Empty\") {\n      categoryData = {\n        taxonomy: \"dept\",\n        category: categories.dept\n      };\n    } else {}\n  });\n  return categoryData;\n};\nexport const getColorAttrOnThumbs = (colorOrImages, id) => {\n  let results = {};\n  let colorImages = [];\n  let colorCode = [];\n  let content = \"\";\n  let product = Data.allProducts.find(prod => prod.style_id == id);\n\n  if (product && product.gener != \"simple\") {\n    if (colorOrImages == \"images\") {\n      colorImages = getThumbColorImages(product);\n      results = {\n        name: \"image\",\n        data: [...colorImages]\n      };\n    } else if (colorOrImages == \"color\") {\n      colorCode = getThumbColorcode(product);\n      colorImages = getThumbColorImages(product);\n      results = {\n        name: \"colorCode\",\n        data: [...colorCode],\n        images: [...colorImages]\n      };\n    } else {\n      results = {};\n    }\n  } else {\n    results = {};\n  }\n\n  return results;\n};\n\nconst getThumbColorImages = product => {\n  let smallColorImages = [];\n  let imageUrl = \"\";\n  product.variants.map(vProduct => {\n    vProduct.color.map(color => {\n      if (color.colorSmallImage && color.colorSmallImage != \"\") {\n        imageUrl = prodImagesDir + color.colorSmallImage;\n        smallColorImages.push(imageUrl);\n      }\n    });\n  });\n  return smallColorImages;\n};\n\nconst getThumbColorcode = product => {\n  let colorCode = [];\n  product.variants.map(vProduct => {\n    vProduct.color.map(color => {\n      colorCode.push(color.colorCode);\n    });\n  });\n  return colorCode;\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortProducts\");\n$RefreshReg$(_c2, \"SortProcess\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/components/category/categoryController.js"],"names":["Data","hC","prodImagesDir","Link","getProducts","filters","products","dispatch","property","url","taxonomy","selectedProducts","allProducts","i","filter","prod","subTyp_2","subTyp_3","subTyp_1","typ","dept","Object","entries","length","color","productsBySelectedColors","brand","productsBySelectedBrands","size","productsBySelectedSize","priceRange","productsBySelectedPriceRanges","SortProducts","JSON","stringify","type","productsItems","map","prods","gener","variants","vproduct","clr","includes","name","push","lower","upper","sales_price","regular_price","getCategoryTitle","props","categoryHeading","allproducts","pagination","productsPerPage","activePage","indexOfLastProduct","indexOfFirstProduct","currentproducts","slice","handlePageChange","setCurrentPage","e","handleChangePerPage","setPerpageProductscount","value","target","getCategoryBreadCrumbs","breadcrumbs","breadcrumbsContent","urlData","item","category","redirectUrl","dept_Url","categories","cat","typ_Url","key","dispatchedData","taxonomyValue","taxonomyUrl","addFilters","history","tempProducts","Sorting","order","sort","SortProcess","sorting","sortOrder","substr","a","b","result","getUrlTaxonomy","categoryData","subTyp_4","getColorAttrOnThumbs","colorOrImages","id","results","colorImages","colorCode","content","product","find","style_id","getThumbColorImages","data","getThumbColorcode","images","smallColorImages","imageUrl","vProduct","colorSmallImage"],"mappings":";;AAAA,OAAO,KAAKA,IAAZ,MAAsB,YAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,4BAApB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,MAAMC,WAAW,GAAG,CACzBC,OADyB,EAEzBC,QAFyB,EAGzBC,QAHyB,EAIzBC,QAJyB,EAKzBC,GALyB,EAMzBC,QANyB,KAOtB;AACH,MAAIN,WAAW,GAAG,EAAlB;AACA,MAAIO,gBAAgB,GAAG,EAAvB;AACA,MAAIC,WAAW,GAAGZ,IAAI,CAACY,WAAvB;AACA,MAAIC,CAAC,GAAG,CAAC,CAAT;;AAEA,MAAIJ,GAAG,IAAI,cAAX,EAA2B;AACzBJ,IAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,cAA1B;AACD;;AAED,MAAIK,QAAQ,IAAI,UAAhB,EAA4B;AAC1BN,IAAAA,WAAW,GAAGQ,WAAW,CAACE,MAAZ,CACXC,IAAD,IACEA,IAAI,CAACC,QAAL,IAAiBP,GAAjB,IACAM,IAAI,CAACE,QAAL,IAAiB,OADjB,IAEAF,IAAI,CAACC,QAAL,IAAiB,OAJP,CAAd;AAMD,GAPD,MAOO,IAAIN,QAAQ,IAAI,UAAhB,EAA4B;AACjCN,IAAAA,WAAW,GAAGQ,WAAW,CAACE,MAAZ,CACXC,IAAD,IACEA,IAAI,CAACG,QAAL,IAAiBT,GAAjB,IACAM,IAAI,CAACC,QAAL,IAAiB,OADjB,IAEAD,IAAI,CAACG,QAAL,IAAiB,OAJP,CAAd;AAMD,GAPM,MAOA,IAAIR,QAAQ,IAAI,KAAhB,EAAuB;AAC5BN,IAAAA,WAAW,GAAGQ,WAAW,CAACE,MAAZ,CACXC,IAAD,IACEA,IAAI,CAACI,GAAL,IAAYV,GAAZ,IAAmBM,IAAI,CAACG,QAAL,IAAiB,OAApC,IAA+CH,IAAI,CAACI,GAAL,IAAY,OAFjD,CAAd;AAID,GALM,MAKA,IAAIT,QAAQ,IAAI,MAAhB,EAAwB;AAC7BN,IAAAA,WAAW,GAAGQ,WAAW,CAACE,MAAZ,CACXC,IAAD,IAAUA,IAAI,CAACK,IAAL,IAAaX,GAAb,IAAoBM,IAAI,CAACI,GAAL,IAAY,OAAhC,IAA2CJ,IAAI,CAACK,IAAL,IAAa,OADtD,CAAd;AAGD,GAJM,MAIA,IAAIX,GAAG,IAAI,cAAX,EAA2B;AAChCL,IAAAA,WAAW,GAAG,EAAd;AACAA,IAAAA,WAAW,GAAGQ,WAAd;AACD,GAHM,MAGA;AACLR,IAAAA,WAAW,GAAG,EAAd;AACD;;AACD,MAAIiB,MAAM,CAACC,OAAP,CAAejB,OAAf,EAAwBkB,MAAxB,KAAmC,CAAvC,EAA0C;AACxC;AACA,QAAIlB,OAAO,CAACmB,KAAZ,EAAmB;AACjBpB,MAAAA,WAAW,GAAGqB,wBAAwB,CAACpB,OAAD,EAAUD,WAAV,CAAtC;AACD,KAJuC,CAMxC;;;AACA,QAAIC,OAAO,CAACqB,KAAZ,EAAmB;AACjBtB,MAAAA,WAAW,GAAGuB,wBAAwB,CAACtB,OAAD,EAAUD,WAAV,CAAtC;AACD,KATuC,CAWxC;;;AACA,QAAIC,OAAO,CAACuB,IAAZ,EAAkB;AAChBxB,MAAAA,WAAW,GAAGyB,sBAAsB,CAACxB,OAAD,EAAUD,WAAV,CAApC;AACD,KAduC,CAgBxC;;;AACA,QAAIC,OAAO,CAACyB,UAAZ,EAAwB;AACtB1B,MAAAA,WAAW,GAAG2B,6BAA6B,CAAC1B,OAAD,EAAUD,WAAV,CAA3C;AACD;AACF,GApBD,MAoBO,CACN;;AAED,MAAII,QAAQ,IAAI,SAAhB,EAA2B,CAC1B,CADD,MACO;AACLJ,IAAAA,WAAW,GAAG4B,YAAY,CAACxB,QAAD,EAAWJ,WAAX,EAAwBG,QAAxB,CAA1B;AACD;;AAED,MAAI0B,IAAI,CAACC,SAAL,CAAe5B,QAAf,KAA4B2B,IAAI,CAACC,SAAL,CAAe9B,WAAf,CAAhC,EAA6D,CAC5D,CADD,MACO;AACLG,IAAAA,QAAQ,CAAC;AACP4B,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,aAAa,EAAEhC;AAFR,KAAD,CAAR;AAID;;AACD,SAAOE,QAAP;AACD,CAlFM;;AAoFP,MAAMmB,wBAAwB,GAAG,CAACpB,OAAD,EAAUD,WAAV,KAA0B;AACzD,MAAIO,gBAAgB,GAAG,EAAvB;;AAEA,MAAIP,WAAJ,EAAiB;AACfA,IAAAA,WAAW,CAACiC,GAAZ,CAAiBC,KAAD,IAAW;AACzB,UAAIA,KAAK,CAACC,KAAN,IAAe,QAAnB,EAA6B;AAC3B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACO,OATD,MASO;AACLD,QAAAA,KAAK,CAACE,QAAN,CAAeH,GAAf,CAAoBI,QAAD,IAAc;AAC/BA,UAAAA,QAAQ,CAACjB,KAAT,CAAea,GAAf,CAAoBK,GAAD,IAAS;AAC1B,gBAAIrC,OAAO,CAACmB,KAAR,CAAcmB,QAAd,CAAuBD,GAAG,CAACE,IAA3B,CAAJ,EAAsC;AACpC,kBAAIjC,gBAAgB,CAACgC,QAAjB,CAA0BL,KAA1B,CAAJ,EAAsC,CACrC,CADD,MACO;AACL3B,gBAAAA,gBAAgB,CAACkC,IAAjB,CAAsBP,KAAtB;AACD;AACF;AACF,WAPD;AAQD,SATD;AAUD;AACF,KAtBD;AAuBD,GAxBD,MAwBO;AACL3B,IAAAA,gBAAgB,GAAG,EAAnB;AACD;;AACD,SAAOA,gBAAP;AACD,CA/BD;;AAiCA,MAAMgB,wBAAwB,GAAG,CAACtB,OAAD,EAAUD,WAAV,KAA0B;AACzD,MAAIO,gBAAgB,GAAG,EAAvB;;AAEA,MAAIP,WAAJ,EAAiB;AACfA,IAAAA,WAAW,CAACiC,GAAZ,CAAiBC,KAAD,IAAW;AACzB,UAAIA,KAAK,CAACZ,KAAN,IAAerB,OAAO,CAACqB,KAA3B,EAAkC;AAChC,YAAIf,gBAAgB,CAACgC,QAAjB,CAA0BL,KAA1B,CAAJ,EAAsC,CACrC,CADD,MACO;AACL3B,UAAAA,gBAAgB,CAACkC,IAAjB,CAAsBP,KAAtB;AACD;AACF;AACF,KAPD;AAQD,GATD,MASO;AACL3B,IAAAA,gBAAgB,GAAG,EAAnB;AACD;;AACD,SAAOA,gBAAP;AACD,CAhBD;;AAkBA,MAAMkB,sBAAsB,GAAG,CAACxB,OAAD,EAAUD,WAAV,KAA0B;AACvD,MAAIO,gBAAgB,GAAG,EAAvB;;AAEA,MAAIP,WAAJ,EAAiB;AACfA,IAAAA,WAAW,CAACiC,GAAZ,CAAiBC,KAAD,IAAW;AACzB,UAAIA,KAAK,CAACC,KAAN,IAAe,QAAnB,EAA6B;AAC3B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACO,OATD,MASO;AACLD,QAAAA,KAAK,CAACE,QAAN,CAAeH,GAAf,CAAoBI,QAAD,IAAc;AAC/B,cAAIpC,OAAO,CAACuB,IAAR,CAAae,QAAb,CAAsBF,QAAQ,CAACb,IAA/B,CAAJ,EAA0C;AACxC,gBAAIjB,gBAAgB,CAACgC,QAAjB,CAA0BL,KAA1B,CAAJ,EAAsC,CACrC,CADD,MACO;AACL3B,cAAAA,gBAAgB,CAACkC,IAAjB,CAAsBP,KAAtB;AACD;AACF;AACF,SAPD;AAQD;AACF,KApBD;AAqBD,GAtBD,MAsBO;AACL3B,IAAAA,gBAAgB,GAAG,EAAnB;AACD;;AACD,SAAOA,gBAAP;AACD,CA7BD;;AA+BA,MAAMoB,6BAA6B,GAAG,CAAC1B,OAAD,EAAUD,WAAV,KAA0B;AAC9D,MAAIO,gBAAgB,GAAG,EAAvB;AACA,MAAImC,KAAJ;AACA,MAAIC,KAAJ;;AACA,MAAI1C,OAAO,CAACyB,UAAR,IAAsB,WAA1B,EAAuC;AACrCgB,IAAAA,KAAK,GAAG,CAAR;AACAC,IAAAA,KAAK,GAAG,EAAR;AACD,GAHD,MAGO,IAAI1C,OAAO,CAACyB,UAAR,IAAsB,UAA1B,EAAsC;AAC3CgB,IAAAA,KAAK,GAAG,EAAR;AACAC,IAAAA,KAAK,GAAG,GAAR;AACD,GAHM,MAGA,IAAI1C,OAAO,CAACyB,UAAR,IAAsB,WAA1B,EAAuC;AAC5CgB,IAAAA,KAAK,GAAG,GAAR;AACAC,IAAAA,KAAK,GAAG,GAAR;AACD,GAHM,MAGA,IAAI1C,OAAO,CAACyB,UAAR,IAAsB,WAA1B,EAAuC;AAC5CgB,IAAAA,KAAK,GAAG,GAAR;AACAC,IAAAA,KAAK,GAAG,GAAR;AACD,GAHM,MAGA,IAAI1C,OAAO,CAACyB,UAAR,IAAsB,WAA1B,EAAuC;AAC5CgB,IAAAA,KAAK,GAAG,GAAR;AACAC,IAAAA,KAAK,GAAG,GAAR;AACD,GAHM,MAGA,IAAI1C,OAAO,CAACyB,UAAR,IAAsB,YAA1B,EAAwC;AAC7CgB,IAAAA,KAAK,GAAG,GAAR;AACAC,IAAAA,KAAK,GAAG,aAAR;AACD;;AAED,MAAI1C,OAAO,CAACyB,UAAZ,EAAwB;AACtB,QAAI1B,WAAJ,EAAiB;AACfA,MAAAA,WAAW,CAACiC,GAAZ,CAAiBC,KAAD,IAAW;AACzB,YAAIA,KAAK,CAACC,KAAN,IAAe,QAAnB,EAA6B;AAC3B,cAAID,KAAK,CAACU,WAAV,EAAuB;AACrB,gBAAIV,KAAK,CAACU,WAAN,IAAqBF,KAArB,IAA8BR,KAAK,CAACU,WAAN,IAAqBD,KAAvD,EAA8D;AAC5D,kBAAIpC,gBAAgB,CAACgC,QAAjB,CAA0BL,KAA1B,CAAJ,EAAsC,CACrC,CADD,MACO;AACL3B,gBAAAA,gBAAgB,CAACkC,IAAjB,CAAsBP,KAAtB;AACD;AACF;AACF,WAPD,MAOO;AACL,gBAAIA,KAAK,CAACW,aAAN,IAAuBH,KAAvB,IAAgCR,KAAK,CAACW,aAAN,IAAuBF,KAA3D,EAAkE;AAChE,kBAAIpC,gBAAgB,CAACgC,QAAjB,CAA0BL,KAA1B,CAAJ,EAAsC,CACrC,CADD,MACO;AACL3B,gBAAAA,gBAAgB,CAACkC,IAAjB,CAAsBP,KAAtB;AACD;AACF;AACF;AACF,SAhBD,MAgBO;AACLA,UAAAA,KAAK,CAACE,QAAN,CAAeH,GAAf,CAAoBI,QAAD,IAAc;AAC/B,gBAAIA,QAAQ,CAACO,WAAb,EAA0B;AACxB,kBACEP,QAAQ,CAACO,WAAT,IAAwBF,KAAxB,IACAL,QAAQ,CAACO,WAAT,IAAwBD,KAF1B,EAGE;AACA,oBAAIpC,gBAAgB,CAACgC,QAAjB,CAA0BL,KAA1B,CAAJ,EAAsC,CACrC,CADD,MACO;AACL3B,kBAAAA,gBAAgB,CAACkC,IAAjB,CAAsBP,KAAtB;AACD;AACF;AACF,aAVD,MAUO;AACL,kBACEG,QAAQ,CAACQ,aAAT,IAA0BH,KAA1B,IACAL,QAAQ,CAACQ,aAAT,IAA0BF,KAF5B,EAGE;AACA,oBAAIpC,gBAAgB,CAACgC,QAAjB,CAA0BL,KAA1B,CAAJ,EAAsC,CACrC,CADD,MACO;AACL3B,kBAAAA,gBAAgB,CAACkC,IAAjB,CAAsBP,KAAtB;AACD;AACF;AACF;AACF,WAtBD;AAuBD;AACF,OA1CD;AA2CD,KA5CD,MA4CO;AACL3B,MAAAA,gBAAgB,GAAG,EAAnB;AACD;AACF;;AACD,SAAOA,gBAAP;AACD,CA1ED;;AA4EA,OAAO,MAAMuC,gBAAgB,GAAIC,KAAD,IAAW;AACzC,MAAIC,eAAe,GAAG,EAAtB;;AACA,MAAID,KAAK,CAAC9C,OAAN,CAAcY,QAAlB,EAA4B;AAC1BmC,IAAAA,eAAe,GAAGD,KAAK,CAAC9C,OAAN,CAAcY,QAAhC;AACD,GAFD,MAEO,IAAIkC,KAAK,CAAC9C,OAAN,CAAcW,QAAlB,EAA4B;AACjCoC,IAAAA,eAAe,GAAGD,KAAK,CAAC9C,OAAN,CAAcW,QAAhC;AACD,GAFM,MAEA,IAAImC,KAAK,CAAC9C,OAAN,CAAca,QAAlB,EAA4B;AACjCkC,IAAAA,eAAe,GAAGD,KAAK,CAAC9C,OAAN,CAAca,QAAhC;AACD,GAFM,MAEA,IAAIiC,KAAK,CAAC9C,OAAN,CAAcc,GAAlB,EAAuB;AAC5BiC,IAAAA,eAAe,GAAGD,KAAK,CAAC9C,OAAN,CAAcc,GAAhC;AACD,GAFM,MAEA,IAAIgC,KAAK,CAAC9C,OAAN,CAAce,IAAlB,EAAwB;AAC7BgC,IAAAA,eAAe,GAAGD,KAAK,CAAC9C,OAAN,CAAce,IAAhC;AACD,GAFM,MAEA,IAAI+B,KAAK,CAAC9C,OAAN,CAAcqB,KAAlB,EAAyB;AAC9B0B,IAAAA,eAAe,GAAGD,KAAK,CAAC9C,OAAN,CAAcqB,KAAhC;AACD,GAFM,MAEA,IAAIyB,KAAK,CAAC9C,OAAN,CAAcgD,WAAlB,EAA+B;AACpCD,IAAAA,eAAe,GAAGD,KAAK,CAAC9C,OAAN,CAAcgD,WAAhC;AACD,GAFM,MAEA,CACN;;AAED,SAAOD,eAAP;AACD,CApBM;AAsBP,OAAO,MAAME,UAAU,GAAG,CAAChD,QAAD,EAAWiD,eAAX,EAA4BC,UAA5B,KAA2C;AACnE,MAAIF,UAAU,GAAG,EAAjB,CADmE,CAEnE;;AACA,QAAMG,kBAAkB,GAAGD,UAAU,GAAGD,eAAxC;AACA,QAAMG,mBAAmB,GAAGD,kBAAkB,GAAGF,eAAjD;AACA,QAAMI,eAAe,GAAGrD,QAAQ,CAACsD,KAAT,CACtBF,mBADsB,EAEtBD,kBAFsB,CAAxB;AAIAH,EAAAA,UAAU,CAACK,eAAX,GAA6BA,eAA7B;AACA,SAAOL,UAAP;AACD,CAXM;AAaP,OAAO,MAAMO,gBAAgB,GAAG,CAACC,cAAD,EAAiBC,CAAjB,KAAuB;AACrDD,EAAAA,cAAc,CAACC,CAAD,CAAd;AACD,CAFM;AAIP,OAAO,MAAMC,mBAAmB,GAAG,CAACC,uBAAD,EAA0BF,CAA1B,KAAgC;AACjE,MAAIG,KAAK,GAAGH,CAAC,CAACI,MAAF,CAASD,KAArB;AACAD,EAAAA,uBAAuB,CAACC,KAAD,CAAvB;AACD,CAHM;AAKP,OAAO,MAAME,sBAAsB,GAAIjB,KAAD,IAAW;AAC/C,MAAIkB,WAAW,GAAG,EAAlB;AACA,MAAIC,kBAAkB,GAAG,EAAzB;;AAEA,MAAInB,KAAK,CAACoB,OAAN,CAAc7D,QAAd,IAA0B,MAA9B,EAAsC;AACpC2D,IAAAA,WAAW,CAACxB,IAAZ,CAAiB;AACf2B,MAAAA,IAAI,EAAErB,KAAK,CAACoB,OAAN,CAAcE,QADL;AAEfhE,MAAAA,GAAG,EAAE0C,KAAK,CAACoB,OAAN,CAAc9D,GAFJ;AAGfC,MAAAA,QAAQ,EAAE,MAHK;AAIfgE,MAAAA,WAAW,EAAE;AAJE,KAAjB;AAMD,GAPD,MAOO,IAAIvB,KAAK,CAACoB,OAAN,CAAc7D,QAAd,IAA0B,KAA9B,EAAqC;AAC1C,QAAIU,IAAI,GAAG,EAAX;AACA,QAAIuD,QAAQ,GAAG,EAAf;AACA3E,IAAAA,IAAI,CAACU,QAAL,CAAc2B,GAAd,CAAmBuC,UAAD,IAAgB;AAChC,UACEA,UAAU,CAACzD,GAAX,IAAkBgC,KAAK,CAACoB,OAAN,CAAcE,QAAhC,IACAG,UAAU,CAACnE,GAAX,IAAkB0C,KAAK,CAACoB,OAAN,CAAc9D,GADhC,IAEAmE,UAAU,CAAC1D,QAAX,IAAuB,OAHzB,EAIE;AACAE,QAAAA,IAAI,GAAGwD,UAAU,CAACxD,IAAlB;AAEApB,QAAAA,IAAI,CAACU,QAAL,CAAc2B,GAAd,CAAmBwC,GAAD,IAAS;AACzB,cAAIA,GAAG,CAACzD,IAAJ,IAAYA,IAAZ,IAAoByD,GAAG,CAAC1D,GAAJ,IAAW,OAAnC,EAA4C;AAC1CwD,YAAAA,QAAQ,GAAGE,GAAG,CAACpE,GAAf;AACD;AACF,SAJD;AAKD;AACF,KAdD;AAgBA4D,IAAAA,WAAW,CAACxB,IAAZ,CACE;AACE2B,MAAAA,IAAI,EAAEpD,IADR;AAEEX,MAAAA,GAAG,EAAEkE,QAFP;AAGEjE,MAAAA,QAAQ,EAAE,MAHZ;AAIEgE,MAAAA,WAAW,EAAE;AAJf,KADF,EAOE;AACEF,MAAAA,IAAI,EAAErB,KAAK,CAACoB,OAAN,CAAcE,QADtB;AAEEhE,MAAAA,GAAG,EAAE0C,KAAK,CAACoB,OAAN,CAAc9D,GAFrB;AAGEC,MAAAA,QAAQ,EAAE,KAHZ;AAIEgE,MAAAA,WAAW,EAAE;AAJf,KAPF;AAcD,GAjCM,MAiCA,IAAIvB,KAAK,CAACoB,OAAN,CAAc7D,QAAd,IAA0B,UAA9B,EAA0C;AAC/C,QAAIU,IAAI,GAAG,EAAX;AACA,QAAIuD,QAAQ,GAAG,EAAf;AAEA,QAAIxD,GAAG,GAAG,EAAV;AACA,QAAI2D,OAAO,GAAG,EAAd;AAEA9E,IAAAA,IAAI,CAACU,QAAL,CAAc2B,GAAd,CAAmBuC,UAAD,IAAgB;AAChC,UACEA,UAAU,CAAC1D,QAAX,IAAuBiC,KAAK,CAACoB,OAAN,CAAcE,QAArC,IACAG,UAAU,CAACnE,GAAX,IAAkB0C,KAAK,CAACoB,OAAN,CAAc9D,GADhC,IAEAmE,UAAU,CAAC5D,QAAX,IAAuB,OAHzB,EAIE;AACAI,QAAAA,IAAI,GAAGwD,UAAU,CAACxD,IAAlB;AACAD,QAAAA,GAAG,GAAGyD,UAAU,CAACzD,GAAjB;AACAnB,QAAAA,IAAI,CAACU,QAAL,CAAc2B,GAAd,CAAmBwC,GAAD,IAAS;AACzB,cAAIA,GAAG,CAACzD,IAAJ,IAAYA,IAAZ,IAAoByD,GAAG,CAAC1D,GAAJ,IAAW,OAAnC,EAA4C;AAC1CwD,YAAAA,QAAQ,GAAGE,GAAG,CAACpE,GAAf;AACD;AACF,SAJD;AAMAT,QAAAA,IAAI,CAACU,QAAL,CAAc2B,GAAd,CAAmBwC,GAAD,IAAS;AACzB,cAAIA,GAAG,CAACzD,IAAJ,IAAYA,IAAZ,IAAoByD,GAAG,CAAC1D,GAAJ,IAAWA,GAA/B,IAAsC0D,GAAG,CAAC3D,QAAJ,IAAgB,OAA1D,EAAmE;AACjE4D,YAAAA,OAAO,GAAGD,GAAG,CAACpE,GAAd;AACD;AACF,SAJD;AAKD;AACF,KApBD;AAsBA4D,IAAAA,WAAW,CAACxB,IAAZ,CACE;AACE2B,MAAAA,IAAI,EAAEpD,IADR;AAEEX,MAAAA,GAAG,EAAEkE,QAFP;AAGEjE,MAAAA,QAAQ,EAAE,MAHZ;AAIEgE,MAAAA,WAAW,EAAE;AAJf,KADF,EAOE;AACEF,MAAAA,IAAI,EAAErD,GADR;AAEEV,MAAAA,GAAG,EAAEqE,OAFP;AAGEpE,MAAAA,QAAQ,EAAE,KAHZ;AAIEgE,MAAAA,WAAW,EAAE;AAJf,KAPF,EAcE;AACEF,MAAAA,IAAI,EAAErB,KAAK,CAACoB,OAAN,CAAcE,QADtB;AAEEhE,MAAAA,GAAG,EAAE0C,KAAK,CAACoB,OAAN,CAAc9D,GAFrB;AAGEC,MAAAA,QAAQ,EAAE,UAHZ;AAIEgE,MAAAA,WAAW,EAAE;AAJf,KAdF;AAqBD,GAlDM,MAkDA,IAAIvB,KAAK,CAACoB,OAAN,CAAc9D,GAAd,IAAqB,cAAzB,EAAyC;AAC9C4D,IAAAA,WAAW,CAACxB,IAAZ,CAAiB;AACf2B,MAAAA,IAAI,EAAE,cADS;AAEf/D,MAAAA,GAAG,EAAE,cAFU;AAGfC,MAAAA,QAAQ,EAAE,cAHK;AAIfgE,MAAAA,WAAW,EAAE;AAJE,KAAjB;AAMD;;AAEDJ,EAAAA,kBAAkB,CAACzB,IAAnB,eACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,gCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQA,MAAIhC,CAAC,GAAG,CAAC,CAAT;;AACA,OAAK,MAAM,CAACkE,GAAD,EAAMb,KAAN,CAAX,IAA2B7C,MAAM,CAACC,OAAP,CAAe+C,WAAf,CAA3B,EAAwD;AACtDxD,IAAAA,CAAC;;AAED,QAAIA,CAAC,IAAIwD,WAAW,CAAC9C,MAAZ,GAAqB,CAA9B,EAAiC;AAC/B+C,MAAAA,kBAAkB,CAACzB,IAAnB,eACE;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAuC,wBAAa,MAApD;AAAA,kBACGqB,KAAK,CAACM;AADT;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,MAMO;AACLF,MAAAA,kBAAkB,CAACzB,IAAnB,eACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,EAAE,EAAC,EADL;AAEE,UAAA,SAAS,EAAC,gCAFZ;AAGE,UAAA,OAAO,EAAGkB,CAAD,IAAO;AACd,gBAAIiB,cAAc,GAAG,EAArB;AAEAA,YAAAA,cAAc,GAAG;AACftE,cAAAA,QAAQ,EAAEwD,KAAK,CAACxD,QADD;AAEfgE,cAAAA,WAAW,EAAER,KAAK,CAACQ,WAFJ;AAGfO,cAAAA,aAAa,EAAEf,KAAK,CAACM,IAHN;AAIfU,cAAAA,WAAW,EAAEhB,KAAK,CAACzD;AAJJ,aAAjB;AAMAR,YAAAA,EAAE,CAACkF,UAAH,CAAcpB,CAAd,EAAiBiB,cAAjB,EAAiC7B,KAAK,CAAC5C,QAAvC,EAAiD4C,KAAK,CAACiC,OAAvD;AACD,WAbH;AAAA,oBAeGlB,KAAK,CAACM;AAfT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAqBD;AACF;;AAED,SAAOF,kBAAP;AACD,CAnJM;;AAoJP,MAAMtC,YAAY,GAAG,CAACxB,QAAD,EAAWF,QAAX,EAAqBC,QAArB,KAAkC;AACrD,MAAI8E,YAAY,GAAG,EAAnB;AACA,MAAIC,OAAO,GAAG;AAAEpB,IAAAA,KAAK,EAAE,SAAT;AAAoBqB,IAAAA,KAAK,EAAE;AAA3B,GAAd;;AAEA,MAAI/E,QAAQ,IAAI,WAAhB,EAA6B;AAC3B8E,IAAAA,OAAO,GAAG;AAAEpB,MAAAA,KAAK,EAAE,MAAT;AAAiBqB,MAAAA,KAAK,EAAE;AAAxB,KAAV;AACD,GAFD,MAEO,IAAI/E,QAAQ,IAAI,WAAhB,EAA6B;AAClC8E,IAAAA,OAAO,GAAG;AAAEpB,MAAAA,KAAK,EAAE,MAAT;AAAiBqB,MAAAA,KAAK,EAAE;AAAxB,KAAV;AACD,GAFM,MAEA,IAAI/E,QAAQ,IAAI,aAAhB,EAA+B;AACpC8E,IAAAA,OAAO,GAAG;AAAEpB,MAAAA,KAAK,EAAE,UAAT;AAAqBqB,MAAAA,KAAK,EAAE;AAA5B,KAAV;AACD,GAFM,MAEA,IAAI/E,QAAQ,IAAI,mBAAhB,EAAqC;AAC1C8E,IAAAA,OAAO,GAAG;AAAEpB,MAAAA,KAAK,EAAE,eAAT;AAA0BqB,MAAAA,KAAK,EAAE;AAAjC,KAAV;AACD,GAFM,MAEA,IAAI/E,QAAQ,IAAI,mBAAhB,EAAqC;AAC1C8E,IAAAA,OAAO,GAAG;AAAEpB,MAAAA,KAAK,EAAE,eAAT;AAA0BqB,MAAAA,KAAK,EAAE;AAAjC,KAAV;AACD,GAFM,MAEA;AACLD,IAAAA,OAAO,GAAG;AAAEpB,MAAAA,KAAK,EAAE,SAAT;AAAoBqB,MAAAA,KAAK,EAAE;AAA3B,KAAV;AACD;;AAEDF,EAAAA,YAAY,GAAG/E,QAAQ,CAACkF,IAAT,CAAcC,WAAW,CAACH,OAAD,CAAzB,CAAf;AAEA,SAAOD,YAAP;AACD,CArBD;;KAAMrD,Y;;AAsBN,MAAMyD,WAAW,GAAIC,OAAD,IAAa;AAC/B,MAAIlF,QAAQ,GAAG,SAAf;AACA,MAAI+E,KAAK,GAAG,KAAZ;AACA/E,EAAAA,QAAQ,GAAGkF,OAAO,CAACxB,KAAnB;AACAqB,EAAAA,KAAK,GAAGG,OAAO,CAACH,KAAhB;AAEA,MAAII,SAAS,GAAG,CAAhB;;AACA,MAAInF,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAApB,EAAyB;AACvBmF,IAAAA,SAAS,GAAG,CAAC,CAAb;AACAnF,IAAAA,QAAQ,GAAGA,QAAQ,CAACoF,MAAT,CAAgB,CAAhB,CAAX;AACD;;AACD,SAAO,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACrB;AACJ;AACA;AACI,QAAIP,KAAK,IAAI,KAAb,EAAoB;AAClB,UAAIQ,MAAM,GACRF,CAAC,CAACrF,QAAD,CAAD,GAAcsF,CAAC,CAACtF,QAAD,CAAf,GAA4B,CAAC,CAA7B,GAAiCqF,CAAC,CAACrF,QAAD,CAAD,GAAcsF,CAAC,CAACtF,QAAD,CAAf,GAA4B,CAA5B,GAAgC,CADnE;AAED,KAHD,MAGO;AACL,UAAIuF,MAAM,GACRF,CAAC,CAACrF,QAAD,CAAD,GAAcsF,CAAC,CAACtF,QAAD,CAAf,GAA4B,CAAC,CAA7B,GAAiCqF,CAAC,CAACrF,QAAD,CAAD,GAAcsF,CAAC,CAACtF,QAAD,CAAf,GAA4B,CAA5B,GAAgC,CADnE;AAED;;AACD,WAAOuF,MAAM,GAAGJ,SAAhB;AACD,GAZD;AAaD,CAxBD;;MAAMF,W;AA0BN,OAAO,MAAMO,cAAc,GAAIvF,GAAD,IAAS;AACrC,MAAIwF,YAAY,GAAG,EAAnB;AAEAjG,EAAAA,IAAI,CAACU,QAAL,CAAc2B,GAAd,CAAmBuC,UAAD,IAAgB;AAChC,QACEnE,GAAG,IAAImE,UAAU,CAACnE,GAAlB,IACAmE,UAAU,CAAC3D,QAAX,IAAuB,OADvB,IAEA2D,UAAU,CAACsB,QAAX,IAAuB,OAHzB,EAIE;AACAD,MAAAA,YAAY,GAAG;AAAEvF,QAAAA,QAAQ,EAAE,UAAZ;AAAwB+D,QAAAA,QAAQ,EAAEG,UAAU,CAAC3D;AAA7C,OAAf;AACD,KAND,MAMO,IACLR,GAAG,IAAImE,UAAU,CAACnE,GAAlB,IACAmE,UAAU,CAAC5D,QAAX,IAAuB,OADvB,IAEA4D,UAAU,CAAC3D,QAAX,IAAuB,OAHlB,EAIL;AACAgF,MAAAA,YAAY,GAAG;AAAEvF,QAAAA,QAAQ,EAAE,UAAZ;AAAwB+D,QAAAA,QAAQ,EAAEG,UAAU,CAAC5D;AAA7C,OAAf;AACD,KANM,MAMA,IACLP,GAAG,IAAImE,UAAU,CAACnE,GAAlB,IACAmE,UAAU,CAAC1D,QAAX,IAAuB,OADvB,IAEA0D,UAAU,CAAC5D,QAAX,IAAuB,OAHlB,EAIL;AACAiF,MAAAA,YAAY,GAAG;AAAEvF,QAAAA,QAAQ,EAAE,UAAZ;AAAwB+D,QAAAA,QAAQ,EAAEG,UAAU,CAAC1D;AAA7C,OAAf;AACD,KANM,MAMA,IACLT,GAAG,IAAImE,UAAU,CAACnE,GAAlB,IACAmE,UAAU,CAACzD,GAAX,IAAkB,OADlB,IAEAyD,UAAU,CAAC1D,QAAX,IAAuB,OAHlB,EAIL;AACA+E,MAAAA,YAAY,GAAG;AAAEvF,QAAAA,QAAQ,EAAE,KAAZ;AAAmB+D,QAAAA,QAAQ,EAAEG,UAAU,CAACzD;AAAxC,OAAf;AACD,KANM,MAMA,IACLV,GAAG,IAAImE,UAAU,CAACnE,GAAlB,IACAmE,UAAU,CAACxD,IAAX,IAAmB,OADnB,IAEAwD,UAAU,CAACzD,GAAX,IAAkB,OAHb,EAIL;AACA8E,MAAAA,YAAY,GAAG;AAAEvF,QAAAA,QAAQ,EAAE,MAAZ;AAAoB+D,QAAAA,QAAQ,EAAEG,UAAU,CAACxD;AAAzC,OAAf;AACD,KANM,MAMA,CACN;AACF,GAjCD;AAkCA,SAAO6E,YAAP;AACD,CAtCM;AAwCP,OAAO,MAAME,oBAAoB,GAAG,CAACC,aAAD,EAAgBC,EAAhB,KAAuB;AACzD,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG1G,IAAI,CAACY,WAAL,CAAiB+F,IAAjB,CAAuB5F,IAAD,IAAUA,IAAI,CAAC6F,QAAL,IAAiBP,EAAjD,CAAd;;AAEA,MAAIK,OAAO,IAAIA,OAAO,CAACnE,KAAR,IAAiB,QAAhC,EAA0C;AACxC,QAAI6D,aAAa,IAAI,QAArB,EAA+B;AAC7BG,MAAAA,WAAW,GAAGM,mBAAmB,CAACH,OAAD,CAAjC;AACAJ,MAAAA,OAAO,GAAG;AAAE1D,QAAAA,IAAI,EAAE,OAAR;AAAiBkE,QAAAA,IAAI,EAAE,CAAC,GAAGP,WAAJ;AAAvB,OAAV;AACD,KAHD,MAGO,IAAIH,aAAa,IAAI,OAArB,EAA8B;AACnCI,MAAAA,SAAS,GAAGO,iBAAiB,CAACL,OAAD,CAA7B;AACAH,MAAAA,WAAW,GAAGM,mBAAmB,CAACH,OAAD,CAAjC;AACAJ,MAAAA,OAAO,GAAG;AACR1D,QAAAA,IAAI,EAAE,WADE;AAERkE,QAAAA,IAAI,EAAE,CAAC,GAAGN,SAAJ,CAFE;AAGRQ,QAAAA,MAAM,EAAE,CAAC,GAAGT,WAAJ;AAHA,OAAV;AAKD,KARM,MAQA;AACLD,MAAAA,OAAO,GAAG,EAAV;AACD;AACF,GAfD,MAeO;AACLA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,SAAOA,OAAP;AACD,CA3BM;;AA4BP,MAAMO,mBAAmB,GAAIH,OAAD,IAAa;AACvC,MAAIO,gBAAgB,GAAG,EAAvB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAR,EAAAA,OAAO,CAAClE,QAAR,CAAiBH,GAAjB,CAAsB8E,QAAD,IAAc;AACjCA,IAAAA,QAAQ,CAAC3F,KAAT,CAAea,GAAf,CAAoBb,KAAD,IAAW;AAC5B,UAAIA,KAAK,CAAC4F,eAAN,IAAyB5F,KAAK,CAAC4F,eAAN,IAAyB,EAAtD,EAA0D;AACxDF,QAAAA,QAAQ,GAAGhH,aAAa,GAAGsB,KAAK,CAAC4F,eAAjC;AACAH,QAAAA,gBAAgB,CAACpE,IAAjB,CAAsBqE,QAAtB;AACD;AACF,KALD;AAMD,GAPD;AASA,SAAOD,gBAAP;AACD,CAbD;;AAeA,MAAMF,iBAAiB,GAAIL,OAAD,IAAa;AACrC,MAAIF,SAAS,GAAG,EAAhB;AAEAE,EAAAA,OAAO,CAAClE,QAAR,CAAiBH,GAAjB,CAAsB8E,QAAD,IAAc;AACjCA,IAAAA,QAAQ,CAAC3F,KAAT,CAAea,GAAf,CAAoBb,KAAD,IAAW;AAC5BgF,MAAAA,SAAS,CAAC3D,IAAV,CAAerB,KAAK,CAACgF,SAArB;AACD,KAFD;AAGD,GAJD;AAMA,SAAOA,SAAP;AACD,CAVD","sourcesContent":["import * as Data from \"../../Data\";\r\nimport * as hC from \"../header/headerController\";\r\nimport { prodImagesDir } from \"../../settings\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const getProducts = (\r\n  filters,\r\n  products,\r\n  dispatch,\r\n  property,\r\n  url,\r\n  taxonomy\r\n) => {\r\n  let getProducts = [];\r\n  let selectedProducts = [];\r\n  let allProducts = Data.allProducts;\r\n  let i = -1;\r\n\r\n  if (url == \"all-products\") {\r\n    filters[\"all-products\"] = \"all-products\";\r\n  }\r\n\r\n  if (taxonomy == \"subTyp_2\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) =>\r\n        prod.subTyp_2 == url &&\r\n        prod.subTyp_3 == \"Empty\" &&\r\n        prod.subTyp_2 != \"Empty\"\r\n    );\r\n  } else if (taxonomy == \"subTyp_1\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) =>\r\n        prod.subTyp_1 == url &&\r\n        prod.subTyp_2 == \"Empty\" &&\r\n        prod.subTyp_1 != \"Empty\"\r\n    );\r\n  } else if (taxonomy == \"typ\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) =>\r\n        prod.typ == url && prod.subTyp_1 == \"Empty\" && prod.typ != \"Empty\"\r\n    );\r\n  } else if (taxonomy == \"dept\") {\r\n    getProducts = allProducts.filter(\r\n      (prod) => prod.dept == url && prod.typ == \"Empty\" && prod.dept != \"Empty\"\r\n    );\r\n  } else if (url == \"all-products\") {\r\n    getProducts = [];\r\n    getProducts = allProducts;\r\n  } else {\r\n    getProducts = [];\r\n  }\r\n  if (Object.entries(filters).length !== 0) {\r\n    //Load products by seleted color filters\r\n    if (filters.color) {\r\n      getProducts = productsBySelectedColors(filters, getProducts);\r\n    }\r\n\r\n    //Load products by seleted brand filters\r\n    if (filters.brand) {\r\n      getProducts = productsBySelectedBrands(filters, getProducts);\r\n    }\r\n\r\n    //Load products by seleted size filters\r\n    if (filters.size) {\r\n      getProducts = productsBySelectedSize(filters, getProducts);\r\n    }\r\n\r\n    //Load products by seleted price Ranges filters\r\n    if (filters.priceRange) {\r\n      getProducts = productsBySelectedPriceRanges(filters, getProducts);\r\n    }\r\n  } else {\r\n  }\r\n\r\n  if (property == \"default\") {\r\n  } else {\r\n    getProducts = SortProducts(property, getProducts, dispatch);\r\n  }\r\n\r\n  if (JSON.stringify(products) == JSON.stringify(getProducts)) {\r\n  } else {\r\n    dispatch({\r\n      type: \"ADD_PRODUCTS\",\r\n      productsItems: getProducts,\r\n    });\r\n  }\r\n  return products;\r\n};\r\n\r\nconst productsBySelectedColors = (filters, getProducts) => {\r\n  let selectedProducts = [];\r\n\r\n  if (getProducts) {\r\n    getProducts.map((prods) => {\r\n      if (prods.gener == \"simple\") {\r\n        /* prods.color.map((clr) => {\r\n          if (filters.color.includes(clr)) {\r\n            if (selectedProducts.includes(prods)) {\r\n            } else {\r\n              selectedProducts.push(prods)\r\n            }\r\n          }\r\n        })*/\r\n      } else {\r\n        prods.variants.map((vproduct) => {\r\n          vproduct.color.map((clr) => {\r\n            if (filters.color.includes(clr.name)) {\r\n              if (selectedProducts.includes(prods)) {\r\n              } else {\r\n                selectedProducts.push(prods);\r\n              }\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  } else {\r\n    selectedProducts = [];\r\n  }\r\n  return selectedProducts;\r\n};\r\n\r\nconst productsBySelectedBrands = (filters, getProducts) => {\r\n  let selectedProducts = [];\r\n\r\n  if (getProducts) {\r\n    getProducts.map((prods) => {\r\n      if (prods.brand == filters.brand) {\r\n        if (selectedProducts.includes(prods)) {\r\n        } else {\r\n          selectedProducts.push(prods);\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    selectedProducts = [];\r\n  }\r\n  return selectedProducts;\r\n};\r\n\r\nconst productsBySelectedSize = (filters, getProducts) => {\r\n  let selectedProducts = [];\r\n\r\n  if (getProducts) {\r\n    getProducts.map((prods) => {\r\n      if (prods.gener == \"simple\") {\r\n        /* prods.color.map((clr) => {\r\n           if (filters.color.includes(clr)) {\r\n             if (selectedProducts.includes(prods)) {\r\n             } else {\r\n               selectedProducts.push(prods)\r\n             }\r\n           }\r\n         })*/\r\n      } else {\r\n        prods.variants.map((vproduct) => {\r\n          if (filters.size.includes(vproduct.size)) {\r\n            if (selectedProducts.includes(prods)) {\r\n            } else {\r\n              selectedProducts.push(prods);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  } else {\r\n    selectedProducts = [];\r\n  }\r\n  return selectedProducts;\r\n};\r\n\r\nconst productsBySelectedPriceRanges = (filters, getProducts) => {\r\n  let selectedProducts = [];\r\n  let lower;\r\n  let upper;\r\n  if (filters.priceRange == \"below $50\") {\r\n    lower = 0;\r\n    upper = 50;\r\n  } else if (filters.priceRange == \"$51-$100\") {\r\n    lower = 51;\r\n    upper = 100;\r\n  } else if (filters.priceRange == \"$101-$150\") {\r\n    lower = 101;\r\n    upper = 150;\r\n  } else if (filters.priceRange == \"$151-$200\") {\r\n    lower = 151;\r\n    upper = 200;\r\n  } else if (filters.priceRange == \"$201-$250\") {\r\n    lower = 201;\r\n    upper = 250;\r\n  } else if (filters.priceRange == \"above $250\") {\r\n    lower = 251;\r\n    upper = 9999999999999;\r\n  }\r\n\r\n  if (filters.priceRange) {\r\n    if (getProducts) {\r\n      getProducts.map((prods) => {\r\n        if (prods.gener == \"simple\") {\r\n          if (prods.sales_price) {\r\n            if (prods.sales_price >= lower && prods.sales_price <= upper) {\r\n              if (selectedProducts.includes(prods)) {\r\n              } else {\r\n                selectedProducts.push(prods);\r\n              }\r\n            }\r\n          } else {\r\n            if (prods.regular_price >= lower && prods.regular_price <= upper) {\r\n              if (selectedProducts.includes(prods)) {\r\n              } else {\r\n                selectedProducts.push(prods);\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          prods.variants.map((vproduct) => {\r\n            if (vproduct.sales_price) {\r\n              if (\r\n                vproduct.sales_price >= lower &&\r\n                vproduct.sales_price <= upper\r\n              ) {\r\n                if (selectedProducts.includes(prods)) {\r\n                } else {\r\n                  selectedProducts.push(prods);\r\n                }\r\n              }\r\n            } else {\r\n              if (\r\n                vproduct.regular_price >= lower &&\r\n                vproduct.regular_price <= upper\r\n              ) {\r\n                if (selectedProducts.includes(prods)) {\r\n                } else {\r\n                  selectedProducts.push(prods);\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      selectedProducts = [];\r\n    }\r\n  }\r\n  return selectedProducts;\r\n};\r\n\r\nexport const getCategoryTitle = (props) => {\r\n  let categoryHeading = \"\";\r\n  if (props.filters.subTyp_3) {\r\n    categoryHeading = props.filters.subTyp_3;\r\n  } else if (props.filters.subTyp_2) {\r\n    categoryHeading = props.filters.subTyp_2;\r\n  } else if (props.filters.subTyp_1) {\r\n    categoryHeading = props.filters.subTyp_1;\r\n  } else if (props.filters.typ) {\r\n    categoryHeading = props.filters.typ;\r\n  } else if (props.filters.dept) {\r\n    categoryHeading = props.filters.dept;\r\n  } else if (props.filters.brand) {\r\n    categoryHeading = props.filters.brand;\r\n  } else if (props.filters.allproducts) {\r\n    categoryHeading = props.filters.allproducts;\r\n  } else {\r\n  }\r\n\r\n  return categoryHeading;\r\n};\r\n\r\nexport const pagination = (products, productsPerPage, activePage) => {\r\n  let pagination = {};\r\n  // Logic for displaying current products\r\n  const indexOfLastProduct = activePage * productsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n  const currentproducts = products.slice(\r\n    indexOfFirstProduct,\r\n    indexOfLastProduct\r\n  );\r\n  pagination.currentproducts = currentproducts;\r\n  return pagination;\r\n};\r\n\r\nexport const handlePageChange = (setCurrentPage, e) => {\r\n  setCurrentPage(e);\r\n};\r\n\r\nexport const handleChangePerPage = (setPerpageProductscount, e) => {\r\n  let value = e.target.value;\r\n  setPerpageProductscount(value);\r\n};\r\n\r\nexport const getCategoryBreadCrumbs = (props) => {\r\n  let breadcrumbs = [];\r\n  let breadcrumbsContent = [];\r\n\r\n  if (props.urlData.taxonomy == \"dept\") {\r\n    breadcrumbs.push({\r\n      item: props.urlData.category,\r\n      url: props.urlData.url,\r\n      taxonomy: \"dept\",\r\n      redirectUrl: \"dept_Url\",\r\n    });\r\n  } else if (props.urlData.taxonomy == \"typ\") {\r\n    let dept = \"\";\r\n    let dept_Url = \"\";\r\n    Data.taxonomy.map((categories) => {\r\n      if (\r\n        categories.typ == props.urlData.category &&\r\n        categories.url == props.urlData.url &&\r\n        categories.subTyp_1 == \"Empty\"\r\n      ) {\r\n        dept = categories.dept;\r\n\r\n        Data.taxonomy.map((cat) => {\r\n          if (cat.dept == dept && cat.typ == \"Empty\") {\r\n            dept_Url = cat.url;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    breadcrumbs.push(\r\n      {\r\n        item: dept,\r\n        url: dept_Url,\r\n        taxonomy: \"dept\",\r\n        redirectUrl: \"dept_Url\",\r\n      },\r\n      {\r\n        item: props.urlData.category,\r\n        url: props.urlData.url,\r\n        taxonomy: \"typ\",\r\n        redirectUrl: \"typ_Url\",\r\n      }\r\n    );\r\n  } else if (props.urlData.taxonomy == \"subTyp_1\") {\r\n    let dept = \"\";\r\n    let dept_Url = \"\";\r\n\r\n    let typ = \"\";\r\n    let typ_Url = \"\";\r\n\r\n    Data.taxonomy.map((categories) => {\r\n      if (\r\n        categories.subTyp_1 == props.urlData.category &&\r\n        categories.url == props.urlData.url &&\r\n        categories.subTyp_2 == \"Empty\"\r\n      ) {\r\n        dept = categories.dept;\r\n        typ = categories.typ;\r\n        Data.taxonomy.map((cat) => {\r\n          if (cat.dept == dept && cat.typ == \"Empty\") {\r\n            dept_Url = cat.url;\r\n          }\r\n        });\r\n\r\n        Data.taxonomy.map((cat) => {\r\n          if (cat.dept == dept && cat.typ == typ && cat.subTyp_1 == \"Empty\") {\r\n            typ_Url = cat.url;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    breadcrumbs.push(\r\n      {\r\n        item: dept,\r\n        url: dept_Url,\r\n        taxonomy: \"dept\",\r\n        redirectUrl: \"dept_Url\",\r\n      },\r\n      {\r\n        item: typ,\r\n        url: typ_Url,\r\n        taxonomy: \"typ\",\r\n        redirectUrl: \"typ_Url\",\r\n      },\r\n\r\n      {\r\n        item: props.urlData.category,\r\n        url: props.urlData.url,\r\n        taxonomy: \"subTyp_1\",\r\n        redirectUrl: \"subTyp_1_Url\",\r\n      }\r\n    );\r\n  } else if (props.urlData.url == \"all-products\") {\r\n    breadcrumbs.push({\r\n      item: \"All Products\",\r\n      url: \"all-products\",\r\n      taxonomy: \"All Products\",\r\n      redirectUrl: \"\",\r\n    });\r\n  }\r\n\r\n  breadcrumbsContent.push(\r\n    <li className=\"breadcrumb-item\">\r\n      <Link to=\"/\" className=\"text-dark text-decoration-none\">\r\n        Home\r\n      </Link>\r\n    </li>\r\n  );\r\n\r\n  let i = -1;\r\n  for (const [key, value] of Object.entries(breadcrumbs)) {\r\n    i++;\r\n\r\n    if (i == breadcrumbs.length - 1) {\r\n      breadcrumbsContent.push(\r\n        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n          {value.item}\r\n        </li>\r\n      );\r\n    } else {\r\n      breadcrumbsContent.push(\r\n        <li className=\"breadcrumb-item\">\r\n          <Link\r\n            to=\"\"\r\n            className=\"text-dark text-decoration-none\"\r\n            onClick={(e) => {\r\n              let dispatchedData = {};\r\n\r\n              dispatchedData = {\r\n                taxonomy: value.taxonomy,\r\n                redirectUrl: value.redirectUrl,\r\n                taxonomyValue: value.item,\r\n                taxonomyUrl: value.url,\r\n              };\r\n              hC.addFilters(e, dispatchedData, props.dispatch, props.history);\r\n            }}\r\n          >\r\n            {value.item}\r\n          </Link>\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n\r\n  return breadcrumbsContent;\r\n};\r\nconst SortProducts = (property, products, dispatch) => {\r\n  let tempProducts = [];\r\n  let Sorting = { value: \"default\", order: \"ASC\" };\r\n\r\n  if (property == \"name(a-z)\") {\r\n    Sorting = { value: \"name\", order: \"ASC\" };\r\n  } else if (property == \"name(z-a)\") {\r\n    Sorting = { value: \"name\", order: \"DESC\" };\r\n  } else if (property == \"featuredASC\") {\r\n    Sorting = { value: \"featured\", order: \"ASC\" };\r\n  } else if (property == \"price-high-to-low\") {\r\n    Sorting = { value: \"regular_price\", order: \"DESC\" };\r\n  } else if (property == \"price-low-to-high\") {\r\n    Sorting = { value: \"regular_price\", order: \"ASC\" };\r\n  } else {\r\n    Sorting = { value: \"default\", order: \"ASC\" };\r\n  }\r\n\r\n  tempProducts = products.sort(SortProcess(Sorting));\r\n\r\n  return tempProducts;\r\n};\r\nconst SortProcess = (sorting) => {\r\n  let property = \"default\";\r\n  let order = \"ASC\";\r\n  property = sorting.value;\r\n  order = sorting.order;\r\n\r\n  var sortOrder = 1;\r\n  if (property[0] === \"-\") {\r\n    sortOrder = -1;\r\n    property = property.substr(1);\r\n  }\r\n  return function (a, b) {\r\n    /* next line works with strings and numbers,\r\n     * and you may want to customize it to your needs\r\n     */\r\n    if (order == \"ASC\") {\r\n      var result =\r\n        a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\r\n    } else {\r\n      var result =\r\n        a[property] > b[property] ? -1 : a[property] < b[property] ? 1 : 0;\r\n    }\r\n    return result * sortOrder;\r\n  };\r\n};\r\n\r\nexport const getUrlTaxonomy = (url) => {\r\n  let categoryData = {};\r\n\r\n  Data.taxonomy.map((categories) => {\r\n    if (\r\n      url == categories.url &&\r\n      categories.subTyp_3 != \"Empty\" &&\r\n      categories.subTyp_4 == \"Empty\"\r\n    ) {\r\n      categoryData = { taxonomy: \"subTyp_3\", category: categories.subTyp_3 };\r\n    } else if (\r\n      url == categories.url &&\r\n      categories.subTyp_2 != \"Empty\" &&\r\n      categories.subTyp_3 == \"Empty\"\r\n    ) {\r\n      categoryData = { taxonomy: \"subTyp_2\", category: categories.subTyp_2 };\r\n    } else if (\r\n      url == categories.url &&\r\n      categories.subTyp_1 != \"Empty\" &&\r\n      categories.subTyp_2 == \"Empty\"\r\n    ) {\r\n      categoryData = { taxonomy: \"subTyp_1\", category: categories.subTyp_1 };\r\n    } else if (\r\n      url == categories.url &&\r\n      categories.typ != \"Empty\" &&\r\n      categories.subTyp_1 == \"Empty\"\r\n    ) {\r\n      categoryData = { taxonomy: \"typ\", category: categories.typ };\r\n    } else if (\r\n      url == categories.url &&\r\n      categories.dept != \"Empty\" &&\r\n      categories.typ == \"Empty\"\r\n    ) {\r\n      categoryData = { taxonomy: \"dept\", category: categories.dept };\r\n    } else {\r\n    }\r\n  });\r\n  return categoryData;\r\n};\r\n\r\nexport const getColorAttrOnThumbs = (colorOrImages, id) => {\r\n  let results = {};\r\n  let colorImages = [];\r\n  let colorCode = [];\r\n  let content = \"\";\r\n  let product = Data.allProducts.find((prod) => prod.style_id == id);\r\n\r\n  if (product && product.gener != \"simple\") {\r\n    if (colorOrImages == \"images\") {\r\n      colorImages = getThumbColorImages(product);\r\n      results = { name: \"image\", data: [...colorImages] };\r\n    } else if (colorOrImages == \"color\") {\r\n      colorCode = getThumbColorcode(product);\r\n      colorImages = getThumbColorImages(product);\r\n      results = {\r\n        name: \"colorCode\",\r\n        data: [...colorCode],\r\n        images: [...colorImages],\r\n      };\r\n    } else {\r\n      results = {};\r\n    }\r\n  } else {\r\n    results = {};\r\n  }\r\n\r\n  return results;\r\n};\r\nconst getThumbColorImages = (product) => {\r\n  let smallColorImages = [];\r\n  let imageUrl = \"\";\r\n  product.variants.map((vProduct) => {\r\n    vProduct.color.map((color) => {\r\n      if (color.colorSmallImage && color.colorSmallImage != \"\") {\r\n        imageUrl = prodImagesDir + color.colorSmallImage;\r\n        smallColorImages.push(imageUrl);\r\n      }\r\n    });\r\n  });\r\n\r\n  return smallColorImages;\r\n};\r\n\r\nconst getThumbColorcode = (product) => {\r\n  let colorCode = [];\r\n\r\n  product.variants.map((vProduct) => {\r\n    vProduct.color.map((color) => {\r\n      colorCode.push(color.colorCode);\r\n    });\r\n  });\r\n\r\n  return colorCode;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}