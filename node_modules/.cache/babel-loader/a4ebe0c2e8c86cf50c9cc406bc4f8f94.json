{"ast":null,"code":"var _jsxFileName = \"C:\\\\ColdFusion2018\\\\cfusion\\\\wwwroot\\\\celerant360\\\\client\\\\src\\\\components\\\\Category.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useStateValue } from \"../StateProvider\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as snV from \"./sideNav/sideNavViews\";\nimport * as cC from \"./category/categoryController\";\nimport * as cV from \"./category/categoryViews\";\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport { GetMetaTags } from \"./Utilities\";\nimport * as API from \"../API\";\nimport axios from \"axios\";\nimport prodData from \"./prodData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Category() {\n  _s();\n\n  const [allProducts, setAllProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [checkAvailability, setCheckAvailability] = useState(\"\");\n  let url = \"\";\n  const params = useParams();\n\n  if (params) {\n    url = params.url;\n  }\n\n  url = \"Firearms\"; //let urlData = cC.getUrlTaxonomy(url);\n\n  let urlData = {\n    url: \"\",\n    taxonomy: \"\"\n  };\n  urlData.taxonomy = \"DEPT\";\n  urlData.url = \"firearms\";\n  urlData.category = url;\n  let filters = {};\n  let history = useHistory();\n  const [{\n    sFilters,\n    sortby\n  }, dispatch] = useStateValue();\n\n  if (Object.keys(sFilters).length != 0) {\n    reactLocalStorage.setObject(\"storedFilters\", sFilters);\n  }\n\n  filters = reactLocalStorage.getObject(\"storedFilters\");\n  filters[urlData.taxonomy] = url;\n  let temProducts = [];\n  let property = sortby;\n  let ID = \"\";\n  let featured = \"\";\n  let totalProducts = prodData;\n\n  for (let x = 0; x < totalProducts.length; x++) {\n    totalProducts[x].GENER = \"simple\";\n    totalProducts[x].BRAND = totalProducts[x].brand;\n    totalProducts[x].NAME = totalProducts[x].name;\n    totalProducts[x].CALIBER = totalProducts[x].caliber;\n    totalProducts[x].DEPT = totalProducts[x].Dept;\n    totalProducts[x].TYP = totalProducts[x].Typ;\n    totalProducts[x].SUBTYP_1 = \"EMPTY\";\n    totalProducts[x].SUBTYP_2 = \"EMPTY\";\n    totalProducts[x].SUBTYP_3 = \"EMPTY\";\n    totalProducts[x].SALES_PRICE = x;\n    totalProducts[x].REGULAR_PRICE = totalProducts[x].price;\n    totalProducts[x].SIZE = totalProducts[x].size;\n    totalProducts[x].STYLE_ID = totalProducts[x].id;\n    totalProducts[x].URL = totalProducts[x].product_url;\n    totalProducts[x].SMALLIMAGE = totalProducts[x].image;\n    totalProducts[x].SIZE = [];\n    totalProducts[x].COLOR = [];\n    totalProducts[x].PRICERANGE = \"Above 100\";\n  }\n\n  temProducts = [];\n  useEffect(() => {\n    setAllProducts(totalProducts);\n    setLoading(false);\n    /*\r\n    API.ApiProducts(\r\n      property,\r\n      url,\r\n      urlData.taxonomy,\r\n      urlData.category,\r\n      setAllProducts,\r\n      setLoading,\r\n      \"\",\r\n      \"\"\r\n    );\r\n    */\n  }, []);\n  temProducts = cC.getProducts(filters, allProducts, dispatch, property, url, urlData.taxonomy, urlData.category);\n\n  if (checkAvailability == \"out-of-stock-items\") {\n    temProducts = temProducts.filter(prods => prods.available == \"Out of Stock\");\n  } else if (checkAvailability == \"in-stock-items\") {\n    temProducts = temProducts.filter(prods => prods.available == \"In Stock\");\n  } else {\n    temProducts = temProducts;\n  }\n\n  let props = {\n    filters: {}\n  };\n  props.filters = filters; //let categoryTile = cC.getCategoryTitle(props);\n\n  let categoryTile = url; // will update data later when connected to DB\n\n  let metas = {\n    title: categoryTile,\n    description: categoryTile,\n    keywords: categoryTile,\n    image: \"\",\n    url: window.location.href,\n    imageSrc: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"contentHolder\",\n      children: [/*#__PURE__*/_jsxDEV(GetMetaTags, { ...metas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"category\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(BreadCrumbDisplay, {\n              filters: filters,\n              dispatch: dispatch,\n              history: history,\n              urlData: urlData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SideBarDisplay, {\n              filters: filters,\n              products: temProducts,\n              url: url,\n              setCheckAvailability: setCheckAvailability\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CategoryProductArea, {\n              dispatch: dispatch,\n              filters: filters,\n              products: temProducts,\n              property: property,\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Category, \"8CgUMYUMeWXY+OjHPr/J7lw9AJg=\", false, function () {\n  return [useParams, useHistory, useStateValue];\n});\n\n_c = Category;\n\nconst BreadCrumbDisplay = props => {\n  let breadcrumbs = cC.getCategoryBreadCrumbs(props);\n  return cV.BreadCrumbDisplay(breadcrumbs);\n};\n\n_c2 = BreadCrumbDisplay;\n\nconst SideBarDisplay = props => {\n  let sideNavContent = snV.SideBarViews(props);\n  return sideNavContent;\n};\n\n_c3 = SideBarDisplay;\n\nconst CategoryProductArea = props => {\n  _s2();\n\n  let products = [];\n  products = props.products; //HOOK FOR PERPAGE PRODUCTS\n\n  const [perpageProductscount, setPerpageProductscount] = useState(10);\n  const [searchText, setSearchText] = useState(\"\"); //HOOK FOR ACTIVE PAGE\n\n  const [activePage, setCurrentPage] = useState(1); //GET CATEGORY TITLE\n\n  let categoryTile = cC.getCategoryTitle(props); //PRODUCTS PER PAGE\n\n  let productsPerPage = perpageProductscount;\n\n  if (searchText != \"\") {\n    const regex = new RegExp(searchText, \"i\");\n    products = products.filter(product => regex.test(product.NAME) || regex.test(product.BRAND));\n  } //GET PRODUCTS ACCORDING TO PAGINATION\n\n\n  let currentproducts = cC.pagination(products, productsPerPage, activePage).currentproducts;\n  let paginationContent = {\n    activePage: activePage,\n    productsPerPage: productsPerPage,\n    products: products,\n    cC: cC,\n    setCurrentPage: setCurrentPage\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cV.categotyProductsView(categoryTile, currentproducts, products, cC, setPerpageProductscount, props.dispatch, props.property, props.loading, paginationContent, setSearchText), cV.paginationView(activePage, productsPerPage, products, cC, setCurrentPage)]\n  }, void 0, true);\n};\n\n_s2(CategoryProductArea, \"qWIdRCFUw3jwBa/S0Hy0m7czsY8=\");\n\n_c4 = CategoryProductArea;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"BreadCrumbDisplay\");\n$RefreshReg$(_c3, \"SideBarDisplay\");\n$RefreshReg$(_c4, \"CategoryProductArea\");","map":{"version":3,"sources":["C:/ColdFusion2018/cfusion/wwwroot/celerant360/client/src/components/Category.js"],"names":["React","useState","useEffect","useStateValue","reactLocalStorage","snV","cC","cV","useHistory","useParams","GetMetaTags","API","axios","prodData","Category","allProducts","setAllProducts","loading","setLoading","checkAvailability","setCheckAvailability","url","params","urlData","taxonomy","category","filters","history","sFilters","sortby","dispatch","Object","keys","length","setObject","getObject","temProducts","property","ID","featured","totalProducts","x","GENER","BRAND","brand","NAME","name","CALIBER","caliber","DEPT","Dept","TYP","Typ","SUBTYP_1","SUBTYP_2","SUBTYP_3","SALES_PRICE","REGULAR_PRICE","price","SIZE","size","STYLE_ID","id","URL","product_url","SMALLIMAGE","image","COLOR","PRICERANGE","getProducts","filter","prods","available","props","categoryTile","metas","title","description","keywords","window","location","href","imageSrc","BreadCrumbDisplay","breadcrumbs","getCategoryBreadCrumbs","SideBarDisplay","sideNavContent","SideBarViews","CategoryProductArea","products","perpageProductscount","setPerpageProductscount","searchText","setSearchText","activePage","setCurrentPage","getCategoryTitle","productsPerPage","regex","RegExp","product","test","currentproducts","pagination","paginationContent","categotyProductsView","paginationView"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as snV from \"./sideNav/sideNavViews\";\r\nimport * as cC from \"./category/categoryController\";\r\nimport * as cV from \"./category/categoryViews\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { GetMetaTags } from \"./Utilities\";\r\nimport * as API from \"../API\";\r\nimport axios from \"axios\";\r\nimport prodData from \"./prodData.json\";\r\n\r\nexport default function Category() {\r\n  const [allProducts, setAllProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [checkAvailability, setCheckAvailability] = useState(\"\");\r\n\r\n  let url = \"\";\r\n  const params = useParams();\r\n  if (params) {\r\n    url = params.url;\r\n  }\r\n  url = \"Firearms\";\r\n  //let urlData = cC.getUrlTaxonomy(url);\r\n  let urlData = { url: \"\", taxonomy: \"\" };\r\n  urlData.taxonomy = \"DEPT\";\r\n  urlData.url = \"firearms\";\r\n  urlData.category = url;\r\n\r\n  let filters = {};\r\n  let history = useHistory();\r\n  const [{ sFilters, sortby }, dispatch] = useStateValue();\r\n  if (Object.keys(sFilters).length != 0) {\r\n    reactLocalStorage.setObject(\"storedFilters\", sFilters);\r\n  }\r\n\r\n  filters = reactLocalStorage.getObject(\"storedFilters\");\r\n  filters[urlData.taxonomy] = url;\r\n  let temProducts = [];\r\n  let property = sortby;\r\n  let ID = \"\";\r\n  let featured = \"\";\r\n  let totalProducts = prodData;\r\n\r\n  for (let x = 0; x < totalProducts.length; x++) {\r\n    totalProducts[x].GENER = \"simple\";\r\n    totalProducts[x].BRAND = totalProducts[x].brand;\r\n    totalProducts[x].NAME = totalProducts[x].name;\r\n    totalProducts[x].CALIBER = totalProducts[x].caliber;\r\n\r\n    totalProducts[x].DEPT = totalProducts[x].Dept;\r\n    totalProducts[x].TYP = totalProducts[x].Typ;\r\n    totalProducts[x].SUBTYP_1 = \"EMPTY\";\r\n    totalProducts[x].SUBTYP_2 = \"EMPTY\";\r\n    totalProducts[x].SUBTYP_3 = \"EMPTY\";\r\n\r\n    totalProducts[x].SALES_PRICE = x;\r\n    totalProducts[x].REGULAR_PRICE = totalProducts[x].price;\r\n    totalProducts[x].SIZE = totalProducts[x].size;\r\n    totalProducts[x].STYLE_ID = totalProducts[x].id;\r\n    totalProducts[x].URL = totalProducts[x].product_url;\r\n\r\n    totalProducts[x].SMALLIMAGE = totalProducts[x].image;\r\n    totalProducts[x].SIZE = [];\r\n    totalProducts[x].COLOR = [];\r\n    totalProducts[x].PRICERANGE = \"Above 100\";\r\n  }\r\n\r\n  temProducts = [];\r\n\r\n  useEffect(() => {\r\n    setAllProducts(totalProducts);\r\n    setLoading(false);\r\n\r\n    /*\r\n    API.ApiProducts(\r\n      property,\r\n      url,\r\n      urlData.taxonomy,\r\n      urlData.category,\r\n      setAllProducts,\r\n      setLoading,\r\n      \"\",\r\n      \"\"\r\n    );\r\n    */\r\n  }, []);\r\n\r\n  temProducts = cC.getProducts(\r\n    filters,\r\n    allProducts,\r\n    dispatch,\r\n    property,\r\n    url,\r\n    urlData.taxonomy,\r\n    urlData.category\r\n  );\r\n  if (checkAvailability == \"out-of-stock-items\") {\r\n    temProducts = temProducts.filter(\r\n      (prods) => prods.available == \"Out of Stock\"\r\n    );\r\n  } else if (checkAvailability == \"in-stock-items\") {\r\n    temProducts = temProducts.filter((prods) => prods.available == \"In Stock\");\r\n  } else {\r\n    temProducts = temProducts;\r\n  }\r\n\r\n  let props = { filters: {} };\r\n  props.filters = filters;\r\n  //let categoryTile = cC.getCategoryTitle(props);\r\n  let categoryTile = url;\r\n  // will update data later when connected to DB\r\n\r\n  let metas = {\r\n    title: categoryTile,\r\n    description: categoryTile,\r\n    keywords: categoryTile,\r\n    image: \"\",\r\n    url: window.location.href,\r\n    imageSrc: \"\",\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section id=\"contentHolder\">\r\n        <GetMetaTags {...metas} />\r\n\r\n        <div id=\"category\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <BreadCrumbDisplay\r\n                filters={filters}\r\n                dispatch={dispatch}\r\n                history={history}\r\n                urlData={urlData}\r\n              />\r\n              {\r\n                <SideBarDisplay\r\n                  filters={filters}\r\n                  products={temProducts}\r\n                  url={url}\r\n                  setCheckAvailability={setCheckAvailability}\r\n                />\r\n              }\r\n              <CategoryProductArea\r\n                dispatch={dispatch}\r\n                filters={filters}\r\n                products={temProducts}\r\n                property={property}\r\n                loading={loading}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\nconst BreadCrumbDisplay = (props) => {\r\n  let breadcrumbs = cC.getCategoryBreadCrumbs(props);\r\n  return cV.BreadCrumbDisplay(breadcrumbs);\r\n};\r\nconst SideBarDisplay = (props) => {\r\n  let sideNavContent = snV.SideBarViews(props);\r\n  return sideNavContent;\r\n};\r\nconst CategoryProductArea = (props) => {\r\n  let products = [];\r\n  products = props.products;\r\n\r\n  //HOOK FOR PERPAGE PRODUCTS\r\n  const [perpageProductscount, setPerpageProductscount] = useState(10);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  //HOOK FOR ACTIVE PAGE\r\n  const [activePage, setCurrentPage] = useState(1);\r\n\r\n  //GET CATEGORY TITLE\r\n  let categoryTile = cC.getCategoryTitle(props);\r\n\r\n  //PRODUCTS PER PAGE\r\n  let productsPerPage = perpageProductscount;\r\n\r\n  if (searchText != \"\") {\r\n    const regex = new RegExp(searchText, \"i\");\r\n    products = products.filter(\r\n      (product) => regex.test(product.NAME) || regex.test(product.BRAND)\r\n    );\r\n  }\r\n\r\n  //GET PRODUCTS ACCORDING TO PAGINATION\r\n  let currentproducts = cC.pagination(products, productsPerPage, activePage)\r\n    .currentproducts;\r\n\r\n  let paginationContent = {\r\n    activePage: activePage,\r\n    productsPerPage: productsPerPage,\r\n    products: products,\r\n    cC: cC,\r\n    setCurrentPage: setCurrentPage,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {cV.categotyProductsView(\r\n        categoryTile,\r\n        currentproducts,\r\n        products,\r\n        cC,\r\n        setPerpageProductscount,\r\n        props.dispatch,\r\n        props.property,\r\n        props.loading,\r\n        paginationContent,\r\n        setSearchText\r\n      )}\r\n      {cV.paginationView(\r\n        activePage,\r\n        productsPerPage,\r\n        products,\r\n        cC,\r\n        setCurrentPage\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}